<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StatusMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. [id]           [int] NOT NULL,
		private Integer id;

	/** The parent key. */
	private Integer dataStatus;

	private Integer parentId;

	/** The parent key type. */
	private StatusEnum status;

	private AcaoEnum acaoType;

	private TabelaEnum tabelaEnum;

	private String note;-->

  <resultMap id="statusResult" type="Status">
    <result property="id" column="id" />
    <result property="dataStatus" column="dataStatus" />
    <result property="parentId" column="parentId" />
    <result property="statusValue" column="status" />
    <result property="acaoEnumValue" column="acaoType" />
    <result property="tabelaEnumValue" column="tabelaEnum" />
    <result property="note" column="note" />
    <result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allStatusColumns">
		 b.dataStatus
		,b.parentId
		,b.status
		,b.acaoType
		,b.tabelaEnum
		,b.note
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allStatusValues">
  		#{dataStatus},
  		#{parentId},
  		#{statusValue},
  		#{acaoEnumValue},
  		#{tabelaEnumValue},
  		#{note},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertStatus" parameterType="Status" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO status (
		<include refid="allStatusColumns" />
      )
    VALUES (<include refid="allStatusValues" /> )
  </insert>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateStatus" parameterType="Status">
    UPDATE status
    	<set>
    		<if test="statusValue!= null">status = #{statusValue},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteStatusById" parameterType="Integer">
    	DELETE FROM status WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchStatusRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM status

  </select>

   <select id="fetchAllStatusByEmpresa" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 1 and b.parentId = #{id}

	    ORDER BY dataStatus DESC
  </select>

  <select id="fetchAllStatusByDocumento" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 2 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>

  <select id="fetchAllStatusByEmail" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 3 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>


  <select id="fetchAllStatusByEndereco" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 4 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>

  <select id="fetchAllStatusByTelefone" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 5 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>

  <select id="fetchAllStatusBySocio" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 6 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>

     <select id="fetchAllStatusByFuncionario" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 16 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>


  <select id="fetchAllStatusByPessoaId" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 23 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>


<select id="fetchAllStatusByProduto" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 45 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>


  <select id="fetchAllStatusByContatoId" parameterType="Integer" resultMap="statusResult">

	    SELECT
		<include refid="allStatusColumns" />
	    FROM status b where b.tabelaEnum = 32 and b.parentId = #{id}

	    ORDER BY dataStatus ASC
  </select>

  <select id="fetchAllStatus" resultMap="statusResult">
    SELECT
	<include refid="allStatusColumns" />
    FROM status ORDER BY nome ASC
  </select>

  <select id="fetchStatusById" parameterType="FetchByIdRequest" resultMap="statusResult">
    			   SELECT
						<include refid="allStatusColumns" />
 				   FROM status b

					<where>
				  		 <choose>
							<when test="id != null and id != ''">
								b.business_id = #{id}
				    		</when>
				    	 </choose>
				  </where>
  </select>

  <select id="fetchAllStatussByRequest" parameterType="PagedInquiryRequest" resultMap="statusResult">
    SELECT * FROM
    			(

    						<include refid="allStatusColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.nome) AS RowNumber
    				FROM status b
						where a = a
					<if test="parentId != null">
						AND b.id = #{id}
					</if>
					 <if test="statusList != null and !statusList.isEmpty()">
					     AND b.PGSI_status IN
					     <foreach item="item" index="index" collection="statusList"
						     open="(" separator="," close=")">
						   	 #{item.value}
						 </foreach>
					 </if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>


</mapper>
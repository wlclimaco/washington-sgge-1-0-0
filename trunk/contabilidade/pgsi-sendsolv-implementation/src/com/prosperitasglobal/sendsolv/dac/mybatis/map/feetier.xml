<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FeeTierMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->

	<resultMap id="changeControlMapping" type="QATModel">
  		<result property="createUser"			column="create_user"/>
		<result property="createDateUTC"		column="create_date"/>
		<result property="modifyUser"			column="modify_user"/>
		<result property="modifyDateUTC"		column="modify_date"/>
	</resultMap>

	<resultMap id="changeControlMappingOL" type="QATModelOL" extends="changeControlMapping">
  		<result property="version"				column="versn_lock_num"/>
	</resultMap>

	<resultMap id="feeTierResult" type="FeeTier" extends="changeControlMappingOL">
    	<result property="id"				column="fee_tier_id"/>
    	<result property="sequenceNumber"	column="sequence_number"/>
    	<result property="minimumValue"		column="minimum_value"/>
    	<result property="maximumValue"		column="maximum_value"/>
    	<result property="feeValue"			column="fee_value"/>
    	<result property="planCategoryId"	column="FK_plan_category_id"/>
  	</resultMap>

    <!--************************************************************************** -->
	<!-- SQL fragments allow "parts" of SQL to be re-used in other SQL statements. -->
	<!--************************************************************************** -->
  	<sql id="allFeeTierColumnsExceptKey">
		sequence_number,
		minimum_value,
		maximum_value,
		fee_value,
		FK_plan_category_id,
		versn_lock_num,
		<include refid="CBOFMap.allChangeControlColumns"/>
  	</sql>

  	<sql id="allFeeTierColumns">
		fee_tier_id,
		<include refid="FeeTierMap.allFeeTierColumnsExceptKey"/>
  	</sql>

  	<sql id="allFeeTierValuesExceptKey">
		#{sequenceNumber},
	  	#{minimumValue},
  		#{maximumValue},
		#{feeValue},
		#{planCategoryId},
		#{version},
		<include refid="CBOFMap.changeControlFields"/>
	</sql>

  	<sql id="allFeeTierValues">
	  	#{id},
		<include refid="FeeTierMap.allFeeTierValuesExceptKey"/>
	</sql>

    <!--**************************************************************************-->
    <!--**********************SQL Insert Statements.******************************-->
    <!--**************************************************************************-->

   	<insert id="insertFeeTier" parameterType="FeeTier" useGeneratedKeys="true" keyProperty="id">
	  	INSERT INTO fee_tier (
			<include refid="FeeTierMap.allFeeTierColumnsExceptKey" />
	      )
	    VALUES (<include refid="FeeTierMap.allFeeTierValuesExceptKey" /> )
  	</insert>

    <!--**************************************************************************-->
    <!--*************************SQL Update Statements.***************************-->
    <!--**************************************************************************-->

  	<update id="updateFeeTier" parameterType="FeeTier">
    	UPDATE fee_tier
    	<set>
    		<if test="sequenceNumber != null"> sequence_number=#{sequenceNumber}, </if>
    		<if test="minimumValue != null"> minimum_value=#{minimumValue}, </if>
    		<if test="maximumValue != null"> maximum_value=#{maximumValue}, </if>
    		<if test="feeValue != null"> fee_value=#{feeValue}, </if>
    		<if test="planCategoryId != null"> FK_plan_category_id=#{planCategoryId}, </if>
    		<if test="modifyDateUTC != null"> modify_date=#{modifyDateUTC}, </if>
			<if test="modifyUser != null"> modify_user=#{modifyUser} </if>
		</set>
    	WHERE
     		fee_tier_id = #{id} AND
  			versn_lock_num = #{version}
  	</update>

	<!--**************************************************************************-->
    <!--***********************SQL Delete Statements.*****************************-->
    <!--**************************************************************************-->

  	<delete id="deleteFeeTier" parameterType="FeeTier">
  		DELETE FROM fee_tier
  		WHERE
  			fee_tier_id = #{id} AND
  			versn_lock_num = #{version}
	</delete>

	<!--**************************************************************************-->
    <!--*************************SQL Fetch Statements.****************************-->
    <!--**************************************************************************-->

	<select id="fetchFeeTierVersionNumber" parameterType="FeeTier" resultType="int">
		SELECT versn_lock_num
		FROM fee_tier
		WHERE fee_tier_id = #{id}
  	</select>

    <select id="fetchFeeTierById" parameterType="FeeTier" resultMap="feeTierResult">
		SELECT
			<include refid="FeeTierMap.allFeeTierColumns" />
		FROM fee_tier
		WHERE fee_tier_id = #{id}
  	</select>

    <select id="fetchFeeTierByPlanCategoryId" parameterType="FeeTier" resultMap="feeTierResult">
		SELECT
			<include refid="FeeTierMap.allFeeTierColumns" />
		FROM fee_tier
		WHERE FK_plan_category_id = #{planCategoryId}
  	</select>

</mapper>
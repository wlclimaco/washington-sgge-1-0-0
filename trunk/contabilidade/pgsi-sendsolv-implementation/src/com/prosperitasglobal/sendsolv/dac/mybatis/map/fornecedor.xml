<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FornecedorMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
	-->

  <resultMap id="fornecedorResult" type="Fornecedor">
 	 <result property="id" column="id" />
    <result property="emprId" column="cdEmpr" />
   	<result property="nome" column="nome"/>
	<result property="pessoaTypeEnumValue" column="type"/>
	<result property="sexo" column="sexo"/>
	<result property="datanasc" column="datanasc"/>
	<result property="nomePai" column="nomePai"/>
	<result property="nomeMae" column="nomeMae"/>
	<result property="nomeConjugue" column="nomeConjugue"/>
	<result property="estadoCivil" column="estadoCivil"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<collection property="documentos" column="id" select="DocumentoMap.fetchDocumentoByPessoaId"/>
	<collection property="enderecos" column="id" select="EnderecoMap.fetchEnderecoByPessoaId"/>
	<collection property="emails" column="id" select="EmailMap.fetchAllEmailsByPessoaId"/>
	<collection property="telefones" column="id" select="TelefoneMap.fetchTelefoneByPessoaId"/>
	<collection property="statusList" column="id" select="StatusMap.fetchAllStatusByPessoaId"/>
	<collection property="bancos" column="id" select="BancoMap.fetchBancoByPessoa"/>
	<collection property="contatoList" column="id" select="ContatoMap.fetchContatoByPessoa"/>
	<collection property="notes" column="id" select="NoteMap.fetchNoteByPessoa"/>
	<collection property="formaPagamentoList" column="id" select="FormaPgMap.fetchFormaPgByPessoa"/>
	<collection property="condPagList" column="id" select="CondPagMap.fetchCondPagByPessoa"/>
	<collection property="listCfops"   column="id" select="CfopMap.fetchCfopByPessoa"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allFornecedorColumns">
		 b.cdEmpr
		,b.nome
		,b.type
		,b.sexo
		,b.dataNasc
		,b.nomePai
		,b.nomeMae
		,b.nomeConjugue
		,b.estadoCivil
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allFornecedorValues">
  		#{emprId},
  		#{nome},
  		#{pessoaTypeEnumValue},
  		#{sexo},
  		#{dataNasc},
  		#{nomePai},
  		#{nomeMae},
  		#{nomeConjugue},
  		#{estadoCivil},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchFornecedorRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM pessoa

  </select>

  <select id="fetchAllFornecedors" resultMap="fornecedorResult">
    SELECT
	<include refid="allFornecedorColumns" />
    FROM pessoa ORDER BY nome ASC
  </select>

  <select id="fetchFornecedorById" parameterType="FetchByIdRequest" resultMap="fornecedorResult">
    			   SELECT
					b.id,	<include refid="allFornecedorColumns" />
 				   FROM pessoa b
					where b.id = #{id}
  </select>

    <select id="fetchFornecedorByNota" parameterType="Integer" resultMap="fornecedorResult">
    			   SELECT
					b.id,	<include refid="allFornecedorColumns" />
 				   FROM pessoa b
					where b.id = #{id}
  </select>

  <select id="fetchAllFornecedorsByRequest" parameterType="PagedInquiryRequest" resultMap="fornecedorResult">
     SELECT * FROM ( SELECT b.id,
    						<include refid="allFornecedorColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.id) AS RowNumber
    				FROM pessoa b
						where 1 = 1
					<if test="parentId != null">
						AND b.id = #{id}
					</if>
					 <if test="statusList != null and !statusList.isEmpty()">
					     AND b.PGSI_status IN
					     <foreach item="item" index="index" collection="statusList"
						     open="(" separator="," close=")">
						   	 #{item.value}
						 </foreach>
					 </if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>

</mapper>
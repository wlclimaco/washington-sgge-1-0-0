<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FuncionarioMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly.
       -->

  <resultMap id="funcionarioResult" type="Funcionario" >
    <result property="id" column="id" />
   	<result property="matricula" column="matricula"/>
   	<result property="dataAdm" column="dataAdm"/>
    <result property="emprId" column="cdEmpr" />
   	<result property="nome" column="nome"/>
	<result property="pessoaTypeEnumValue" column="type"/>
	<result property="sexo" column="sexo"/>
	<result property="datanasc" column="datanasc"/>
	<result property="nomePai" column="nomePai"/>
	<result property="nomeMae" column="nomeMae"/>
	<result property="nomeConjugue" column="nomeConjugue"/>
	<result property="estadoCivil" column="estadoCivil"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<collection property="documentos" column="id" select="DocumentoMap.fetchDocumentoByPessoaId"/>
	<collection property="enderecos" column="id" select="EnderecoMap.fetchEnderecoByPessoaId"/>
	<collection property="emails" column="id" select="EmailMap.fetchAllEmailsByPessoaId"/>
	<collection property="telefones" column="id" select="TelefoneMap.fetchTelefoneByPessoaId"/>
	<collection property="statusList" column="id" select="StatusMap.fetchAllStatusByPessoaId"/>
	<collection property="convenioList" column="id" select="ConvenioMap.fetchConvenioByPerson"/>
	<collection property="bancos" column="id" select="BancoMap.fetchBancoByPessoa"/>
	<collection property="salarios" column="id" select="SalarioMap.fetchSalarioById"/>
	<collection property="horarios" column="id" select="HoraFuncMap.fetchHoraFuncById"/>
	<collection property="beneficios" column="id" select="BeneficiosMap.fetchFuncByBeneficios"/>
	<collection property="eventosList" column="id" select="EventoMap.fetchFuncByEvento"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allFuncionarioColumns">
	     b.matricula
      	,b.dataAdm
      	 b.cdEmpr
		,b.nome
		,b.type
		,b.sexo
		,b.dataNasc
		,b.nomePai
		,b.nomeMae
		,b.nomeConjugue
		,b.estadoCivil
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allFuncionarioValues">
  		#{matricula},
  		#{dataAdm},
    	#{cdEmpr},
    	#{nome},
    	#{pessoaTypeEnumValue},
    	#{sexo},
    	#{dataNasc},
  		#{nomePai},
    	#{nomeMae},
    	#{nomeConjugue},
    	#{estadoCivil},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertFuncionario" parameterType="Funcionario" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO funcionario (
		<include refid="allFuncionarioColumns" />
      )
    VALUES (<include refid="allFuncionarioValues" /> )
  </insert>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateFuncionario" parameterType="Funcionario">
    UPDATE funcionario
    	<set>
    		<if test="cdEmpr!= null">cdEmpr = #{cdEmpr},</if>
	    	<if test="nome!= null"> nome =#{nome},</if>
	    	<if test="sexo!= null"> sexo=#{sexo},</if>
	    	<if test="dataAdm!= null"> dataAdm=#{dataAdm},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteFuncionarioById" parameterType="Integer">
    	DELETE FROM funcionario WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchFuncionarioRowCount" parameterType="FuncionarioInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM funcionario where 1 = 1
     <if test="criteria.empresa != null">
		  AND cdEmpr = #{criteria.empresa}
	 </if>
  </select>

  <select id="fetchAllFuncionarios" resultMap="funcionarioResult">
    SELECT
	<include refid="allFuncionarioColumns" />
    FROM funcionario ORDER BY name ASC
  </select>

  <select id="fetchFuncionarioById" parameterType="FetchByIdRequest" resultMap="funcionarioResult">

  </select>

  <select id="fetchAllFuncionariosByRequest" parameterType="FuncionarioInquiryRequest" resultMap="funcionarioResult">
		SELECT * FROM ( SELECT b.id,
    						<include refid="allFuncionarioColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.id) AS RowNumber
    				FROM funcionario b
						where 1 = 1
					<if test="criteria.empresa != null">
						AND b.cdEmpr = #{criteria.empresa}
					</if>
					 <if test="statusList != null and !statusList.isEmpty()">
					     AND b.PGSI_status IN
					     <foreach item="item" index="index" collection="statusList"
						     open="(" separator="," close=")">
						   	 #{item.value}
						 </foreach>
					 </if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>

  <select id="fetchVersionNumber" parameterType="Funcionario" resultType="int">
	SELECT versn_lock_num FROM business WHERE business_id = #{id}
  </select>


</mapper>
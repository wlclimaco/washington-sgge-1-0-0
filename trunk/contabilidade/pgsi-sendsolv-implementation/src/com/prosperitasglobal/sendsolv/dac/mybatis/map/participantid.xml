<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ParticipantIdMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->

    <!--  Currently not used, but keeping it in here for future use. -->
	<resultMap id="changeControlMapping" type="QATModel">
  		<!--  <result property="createUser" column="create_user"/> -->
		<!--  <result property="createDateUTC" column="create_date"/> -->
		<!--  <result property="modifyUser" column="modify_user"/> -->
		<!--  <result property="modifyDateUTC" column="modify_date"/> -->
	</resultMap>

	<resultMap id="participantIdResult" type="ParticipantId" extends="changeControlMapping">
    	<result property="upperId" column="upper_id"/>
    	<result property="lowerId" column="lower_id"/>
    	<result property="sequence" column="sequence"/>
    	<result property="maximumSequence" column="max_sequence"/>
  	</resultMap>

	<resultMap id="contactParticipantResult" type="ContactParticipantId" extends="ParticipantIdMap.participantIdResult"/>

  	<resultMap id="locationParticipantResult" type="LocationParticipantId" extends="ParticipantIdMap.participantIdResult"/>

	<resultMap id="memberParticipantResult" type="MemberParticipantId" extends="ParticipantIdMap.participantIdResult"/>

	<resultMap id="moneyTransferBatchParticipantResult" type="MoneyTransferBatchParticipantId" extends="ParticipantIdMap.participantIdResult"/>

	<resultMap id="moneyTransferParticipantResult" type="MoneyTransferParticipantId" extends="ParticipantIdMap.participantIdResult"/>

  	<resultMap id="organizationParticipantResult" type="OrganizationParticipantId" extends="ParticipantIdMap.participantIdResult"/>

	<resultMap id="recipientParticipantResult" type="RecipientParticipantId" extends="ParticipantIdMap.participantIdResult"/>

  	<resultMap id="transferSettingParticipantResult" type="TransferSettingParticipantId" extends="ParticipantIdMap.participantIdResult"/>

  	<resultMap id="suspiciousActivityParticipantResult" type="SuspiciousActivityParticipantId" extends="ParticipantIdMap.participantIdResult"/>

    <!--************************************************************************** -->
	<!-- SQL fragments allow "parts" of SQL to be re-used in other SQL statements. -->
	<!--************************************************************************** -->
  	<sql id="allParticipantIdColumns">
		person_type,
		upper_id,
		lower_id,
		sequence,
		max_sequence
  	</sql>

  	<sql id="allParticipantIdValues">
	  	#{participantIdTypeValue},
		#{upperId},
	  	#{lowerId},
  		#{sequence},
		#{maximumSequence}
	</sql>

	<!-- NOTE:  This select statement is using the "WITH (UPDLOCK)" FOR SQL Server, and "FOR UPDATE" for all -->
	<!--        others.  This should lock the db row until a commit is performed.                            -->
	<sql id="fetchParticipantIdSQL">
		SELECT
			upper_id,
			lower_id,
			sequence,
			max_sequence
		FROM participant_id
		<if test="_databaseId == 'SqlServer'">
		WITH (UPDLOCK)
		</if>
		WHERE person_type = #{participantIdTypeValue}
		<if test="_databaseId != 'SqlServer'">
		FOR UPDATE
		</if>
	</sql>

    <!--**************************************************************************-->
    <!--**********************SQL Insert Statements.******************************-->
    <!--**************************************************************************-->

   	<insert id="insertParticipantId" parameterType="ParticipantId">
	  	INSERT INTO participant_id (
			<include refid="ParticipantIdMap.allParticipantIdColumns" />
	      )
	    VALUES (<include refid="ParticipantIdMap.allParticipantIdValues" /> )
  	</insert>

    <!--**************************************************************************-->
    <!--*************************SQL Update Statements.***************************-->
    <!--**************************************************************************-->

  	<update id="updateParticipantId" parameterType="ParticipantId">
    	UPDATE participant_id
    	SET
    		upper_id=#{upperId},
    		lower_id=#{lowerId},
    		sequence=#{sequence},
    		max_sequence=#{maximumSequence}
    	WHERE
     	person_type = #{participantIdTypeValue}
  	</update>

	<!--**************************************************************************-->
    <!--***********************SQL Delete Statements.*****************************-->
    <!--**************************************************************************-->

  	<!--  NO DELETE STATEMENTS -->

	<!--**************************************************************************-->
    <!--*************************SQL Fetch Statements.****************************-->
    <!--**************************************************************************-->

    <select id="fetchContactIdForUpdate" parameterType="ContactParticipantId" resultMap="ParticipantIdMap.contactParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

    <select id="fetchLocationIdForUpdate" parameterType="LocationParticipantId" resultMap="ParticipantIdMap.locationParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

    <select id="fetchMemberIdForUpdate" parameterType="MemberParticipantId" resultMap="ParticipantIdMap.memberParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

	<select id="fetchMoneyTransferBatchIdForUpdate" parameterType="MoneyTransferBatchParticipantId" resultMap="ParticipantIdMap.moneyTransferBatchParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

	<select id="fetchMoneyTransferIdForUpdate" parameterType="MoneyTransferParticipantId" resultMap="ParticipantIdMap.moneyTransferParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

	<select id="fetchOrganizationIdForUpdate" parameterType="OrganizationParticipantId" resultMap="ParticipantIdMap.organizationParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

    <select id="fetchRecipientIdForUpdate" parameterType="RecipientParticipantId" resultMap="ParticipantIdMap.recipientParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

   <select id="fetchTransferSettingIdForUpdate" parameterType="TransferSettingParticipantId" resultMap="ParticipantIdMap.transferSettingParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>

   <select id="fetchSuspiciousActivityIdForUpdate" parameterType="SuspiciousActivityParticipantId" resultMap="ParticipantIdMap.suspiciousActivityParticipantResult">
		<include refid="ParticipantIdMap.fetchParticipantIdSQL" />
  	</select>
</mapper>
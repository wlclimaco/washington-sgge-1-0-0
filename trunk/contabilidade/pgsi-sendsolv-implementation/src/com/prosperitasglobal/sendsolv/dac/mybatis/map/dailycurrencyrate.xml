<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DailyCurrencyRateMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->

	<resultMap id="changeControlMapping" type="QATModel">
  		<result property="createUser"			column="create_user"/>
		<result property="createDateUTC"		column="create_date"/>
		<result property="modifyUser"			column="modify_user"/>
		<result property="modifyDateUTC"		column="modify_date"/>
	</resultMap>

	<resultMap id="dailyCurrencyRateResult" type="DailyCurrencyRate" extends="DailyCurrencyRateMap.changeControlMapping">
		<result property="id"	                           column="daily_currency_rate_id"/>
		<result property="validForDate"                    column="valid_for_date"/>
		<result property="payerId"                         column="FK_payer_id"/>
		<association property="currency"                   column="FK_currency_code" select="countryMap.fetchCurrencyByCode"/>
		<collection property="dailyCurrencyRateDetailList" column="daily_currency_rate_id" select="DailyCurrencyRateDetailMap.fetchDailyCurrencyRateDetailByDailyCurrencyRateId"/>
	</resultMap>

    <!--************************************************************************** -->
	<!-- SQL fragments allow "parts" of SQL to be re-used in other SQL statements. -->
	<!--************************************************************************** -->

	<sql id="allDailyCurrencyRateColumnsExceptKey">
		valid_for_date,
		FK_currency_code,
		FK_payer_id,
		<include refid="CBOFMap.allChangeControlColumns"/>
	</sql>

	<sql id="allDailyCurrencyRateColumns">
		daily_currency_rate_id,
		<include refid="DailyCurrencyRateMap.allDailyCurrencyRateColumnsExceptKey"/>
	</sql>

	<sql id="allDailyCurrencyRateValuesExceptKey">
		#{validForDate},
		#{currency.code},
		#{payerId},
		<include refid="CBOFMap.changeControlFields"/>
	</sql>

	<sql id="allDailyCurrencyRateValues">
		#{id},
		<include refid="DailyCurrencyRateMap.allDailyCurrencyRateValuesExceptKey"/>
	</sql>

    <!--**************************************************************************-->
    <!--**********************SQL Insert Statements.******************************-->
    <!--**************************************************************************-->

   	<insert id="insertDailyCurrencyRate" parameterType="DailyCurrencyRate" useGeneratedKeys="true" keyProperty="id">
	  	INSERT INTO daily_currency_rate (
			<include refid="DailyCurrencyRateMap.allDailyCurrencyRateColumnsExceptKey" />
	      )
	    VALUES (<include refid="DailyCurrencyRateMap.allDailyCurrencyRateValuesExceptKey" /> )
  	</insert>

    <!--**************************************************************************-->
    <!--*************************SQL Update Statements.***************************-->
    <!--**************************************************************************-->

  	<update id="updateDailyCurrencyRate" parameterType="DailyCurrencyRate">
    	UPDATE daily_currency_rate
    	<set>
			<if test="currency != null and currency.code != null"> FK_currency_code = #{currency.code}, </if>
			<if test="payerId != null"> FK_payer_id = #{payerId}, </if>
			<if test="validForDate != null"> valid_for_date = #{validForDate}, </if>
    		<if test="modifyDateUTC != null"> modify_date = #{modifyDateUTC}, </if>
			<if test="modifyUser != null"> modify_user = #{modifyUser} </if>
		</set>
    	WHERE daily_currency_rate_id = #{id}
  	</update>

	<!--**************************************************************************-->
    <!--***********************SQL Delete Statements.*****************************-->
    <!--**************************************************************************-->

  	<delete id="deleteDailyCurrencyRate" parameterType="DailyCurrencyRate">
  		DELETE FROM daily_currency_rate
  		WHERE daily_currency_rate_id = #{id}
	</delete>

	<!--**************************************************************************-->
    <!--*************************SQL Fetch Statements.****************************-->
    <!--**************************************************************************-->

	<select id="fetchDailyCurrencyRateRowCount" parameterType="DailyCurrencyRateInquiryRequest" resultType="Integer">
     	SELECT COUNT(daily_currency_rate_id) AS RECORD_COUNT
     	FROM daily_currency_rate
		<where>
			<if test="criteria.currency != null and criteria.currency.code != null">
				AND FK_currency_code = #{criteria.currency.code}
			</if>
			<if test="criteria.payerId != null">
				AND FK_payer_id = #{criteria.payerId}
			</if>
			<if test="criteria.date != null">
				AND valid_for_date = #{criteria.date}
			</if>
		</where>
	</select>

    <select id="fetchDailyCurrencyRateById" parameterType="int" resultMap="dailyCurrencyRateResult">
		SELECT
			<include refid="DailyCurrencyRateMap.allDailyCurrencyRateColumns"/>
		FROM daily_currency_rate
		WHERE daily_currency_rate_id = #{id}
  	</select>

    <select id="fetchDailyCurrencyRateByPayerId" parameterType="int" resultMap="dailyCurrencyRateResult">
		SELECT
			<include refid="DailyCurrencyRateMap.allDailyCurrencyRateColumns"/>
		FROM daily_currency_rate
		WHERE FK_payer_id = #{id}
  	</select>

  	<select id="fetchDailyCurrencyRateByRequest" parameterType="DailyCurrencyRateInquiryRequest" resultMap="dailyCurrencyRateResult">
	    SELECT * FROM
	    			(
	    				SELECT
	    				       <include refid="DailyCurrencyRateMap.allDailyCurrencyRateColumns"/>,
	    						ROW_NUMBER() OVER(ORDER BY valid_for_date desc) AS RowNumber
	    				FROM daily_currency_rate
						<where>
							<if test="criteria.currency != null and criteria.currency.code != null">
								AND FK_currency_code = #{criteria.currency.code}
							</if>
							<if test="criteria.payerId != null">
								AND FK_payer_id = #{criteria.payerId}
							</if>
							<if test="criteria.date != null">
								AND valid_for_date = #{criteria.date}
							</if>
						</where>
	    			) LIST
					<choose>
						<when test="pageSize != null and pageSize > 0">
						   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
						        LOWER: startRow + 1 and
						        UPPER: startRow + pageSize -->
						   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
						</when>
						<otherwise>
						 	WHERE RowNumber BETWEEN 1 AND RowNumber
						 	ORDER BY RowNumber
						</otherwise>
					</choose>
  	</select>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PlanoMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->

  <resultMap id="planoResult" type="Plano" >
    <result property="id" column="id" />
    <result property="parentId" column="emprId" />
    <result property="dataInicio" column="dataInicio" />
   	<result property="dataFinal" column="dataFinal"/>
 	<result property="desconto" column="desconto" />
   	<result property="numeroContrato" column="numeroContrato"/>
   	<result property="processId" column="processId"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<association property="produto"    column="produto" select="ProdutoMap.fetchProdutoById"  />
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
	 <sql id="allPlanoColumns">
		 b.emprId
		,b.dataInicio
		,b.dataFinal
		,b.desconto
		,b.numeroContrato
		,b.processId
		,b.produto
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allPlanoValues">
  		#{parentId},
  		#{dataInicio},
  		#{dataFinal},
  		#{desconto},
  		#{numeroContrato},
  		#{processId},
  		#{produto.id},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>


  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertPlano" parameterType="Plano" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO plano (
		<include refid="allPlanoColumns" />
      )
    VALUES (<include refid="allPlanoValues" /> )
  </insert>

	<!--
		SQL Update Statements.
 	-->

  <update id="updatePlano" parameterType="Plano">
    UPDATE plano
    	<set>
    		<if test="dataInicio!= null">dataInicio = #{dataInicio},</if>
	    	<if test="dataFinal!= null"> dataFinal=#{dataFinal},</if>
	    	<if test="desconto!= null">desconto = #{desconto},</if>
	    	<if test="numeroContrato!= null"> numeroContrato=#{numeroContrato},</if>
	    	<if test="produto.id!= null"> produto=#{produto.id},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>


   <!--
		SQL Delete Statements.
   -->
  <delete id="deletePlanoById" parameterType="Integer">
    	DELETE FROM plano WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchPlanoRowCount" parameterType="PlanoInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM plano
     WHERE 1 = 1
     <if test="criteria.id != null">
		  AND id = #{criteria.id}
	 </if>
  </select>

  <select id="fetchAllPlanos" resultMap="planoResult">
    SELECT
	<include refid="allPlanoColumns" />
    FROM plano ORDER BY id ASC
  </select>

  <select id="fetchPlanoById" parameterType="FetchByIdRequest" resultMap="planoResult">
	SELECT b.id,
	<include refid="allPlanoColumns" />
    FROM plano b
    where id = #{id}
    ORDER BY id ASC
  </select>

  <select id="fetchAllPlanosByRequest" parameterType="PlanoInquiryRequest" resultMap="planoResult">
     SELECT * FROM
    			(
    				SELECT
    						<include refid="allPlanoColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.id) AS RowNumber
    				FROM plano b
					WHERE 2 = 2
					<if test="criteria.id != null">
						AND b.id = #{criteria.id}
					</if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>

  <select id="fetchPlanoByEmpresa" parameterType="Integer" resultMap="planoProdResult">
	SELECT b.id,
	<include refid="allPlanoProdColumns" />
    FROM plano b
    where emprId = #{id}
    ORDER BY id ASC
  </select>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CnaeMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. id codigo, cnae, descricao, abreviado -->

  <resultMap id="cnaeResult" type="Cnae">
    <result property="id" column="id" />
    <result property="codigo" column="codigo" />
   	<result property="cnae" column="cnae"/>
	<result property="descricao" column="descricao"/>
	<result property="abreviado" column="abreviado"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allCnaeColumns">
		 b.codigo
		,b.cnae
      	,b.descricao
      	,b.abreviado
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allCnaeValues">
  		#{codigo},
  		#{cnae},
    	#{descricao},
    	#{abreviado},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <sql id="allCnaeColumnsRel">
		 b.idCnae
		,b.idParentId
      	,b.tabela
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allCnaeValuesRel">
  		#{idCnae},
  		#{idParentId},
    	#{tabela},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertCnae" parameterType="Cnae" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO cnae (
		<include refid="allCnaeColumns" />
      )
    VALUES (<include refid="allCnaeValues" /> )
  </insert>

   <insert id="insertCnaeRelacionamento" parameterType="CnaeRel" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO cnaePorRelacionamento (
		<include refid="allCnaeColumnsRel" />
      )
    VALUES (<include refid="allCnaeValuesRel" /> )
  </insert>

	<!--
		SQL Update Statements.
 	-->

  <update id="updateCnae" parameterType="Cnae">
    UPDATE cnae
    	<set>
    		<if test="codigo!= null">codigo = #{codigo},</if>
	    	<if test="cnae!= null"> cnae=#{cnae},</if>
	    	<if test="descricao!= null"> descricao=#{descricao},</if>
	    	<if test="abreviado!= null"> abreviado=#{abreviado},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
    id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteCnaeById" parameterType="Integer">
    	DELETE FROM cnae WHERE id = #{id}
  </delete>

    <select id="fetchAllCnaesByEmpresa" parameterType="Integer" resultMap="cnaeResult">
    	SELECT c.*

		  FROM cnaePorRelacionamento AS C

		  INNER JOIN cnae AS F

		    ON F.CODIGO like C.IDCNAE
		where  c.idParentId = #{id} and c.tabela = 1
    </select>

    <select id="fetchAllCnaesByPerson" parameterType="Integer" resultMap="cnaeResult">
    	SELECT
			<include refid="allCnaeColumns" />
		    FROM cnae c
		    left join cnaePorRelacionamento r on r.tabela = 3 , c.id = r.idCnae, r.idParentId = #{id}
    </select>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchCnaeRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM cnae

  </select>

  <select id="fetchAllCnaes" resultMap="cnaeResult">
    SELECT
	<include refid="allCnaeColumns" />
    FROM cnae ORDER BY name ASC
  </select>

  <select id="fetchCnaeById" parameterType="FetchByIdRequest" resultMap="cnaeResult">
    			   SELECT
						<include refid="allCnaeColumns" />,
 				   FROM cnae b
					<where>
				  		 <choose>
							<when test="id != null and id != ''">
								b.id = #{id}
				    		</when>
				    	 </choose>
				  </where>
  </select>

  <select id="fetchAllCnaesByRequest" parameterType="CnaeInquiryRequest" resultMap="cnaeResult">
    SELECT * FROM
    			(
    				SELECT
    						<include refid="allCnaeColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.codigo) AS RowNumber
    				FROM cnae b
					WHERE 2 = 2
					<if test="codigo != null">
						AND b.codigo = #{codigo}
					</if>
					 <if test="cnaeList != null and !cnaeList.isEmpty()">
					     AND b.cnae IN
					     <foreach item="item" index="index" collection="cnaeList"
						     open="(" separator="," close=")">
						   	 #{item.value}
						 </foreach>
					 </if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EmpresaMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. [id]           [int] NOT NULL,
	[nome]         [varchar](100) NULL,
	[regime]       [int] NULL,
	[create_date]  [int] NOT NULL DEFAULT (datediff(second,'1/1/1970',getutcdate())),
    [create_user]  [varchar](50) NULL,
    [modify_date]  [int] NOT NULL DEFAULT (datediff(second,'1/1/1970',getutcdate())),
    [modify_user]  [varchar](50) NULL,-->

  <resultMap id="empresaResult" type="Empresa">
    <result property="id" column="id" />
    <result property="nome" column="nome" />
     <result property="processId" column="processId" />
    <result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
    <association property="regime"    column="regime" select="RegimeMap.fetchRegimeByEmpresa"  />
   	<collection property="documentos" column="id" select="DocumentoMap.fetchDocumentoByEmpresa"/>
	<collection property="enderecos" column="id" select="EnderecoMap.fetchEnderecoByEmpresaId"/>
	<collection property="emails" column="id" select="EmailMap.fetchAllEmailsByEmpresa"/>
	<collection property="telefones" column="id" select="TelefoneMap.fetchTelefoneByEmpresa"/>
	<collection property="socios" column="id" select="SocioMap.fetchSocioByEmpresaId"/>
	<collection property="cnaes" column="id" select="CnaeMap.fetchAllCnaesByEmpresa"/>
	<collection property="statusList" column="id" select="StatusMap.fetchAllStatusByEmpresa"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allEmpresaColumns">
		 b.nome
		,b.regime
		,b.processId
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allEmpresaValues">
  		#{nome},
  		#{regime.id},
  		#{processId},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertEmpresa" parameterType="Empresa" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO empresa (
		<include refid="allEmpresaColumns" />
      )
    VALUES (<include refid="allEmpresaValues" /> )
  </insert>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateEmpresa" parameterType="Empresa">
    UPDATE empresa
    	<set>
    		<if test="nome!= null">nome = #{nome},</if>
	    	<if test="regime.id!= null"> regime=#{regime.id},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteEmpresaById" parameterType="Integer">
    	DELETE FROM empresa WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchEmpresaRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM empresa

  </select>

  <select id="fetchAllEmpresas" resultMap="empresaResult">
    SELECT
	<include refid="allEmpresaColumns" />
    FROM empresa ORDER BY nome ASC
  </select>

  <select id="fetchEmpresaById" parameterType="FetchByIdRequest" resultMap="empresaResult">
    			   SELECT
					b.id,	<include refid="allEmpresaColumns" />
 				   FROM empresa b
					where b.id = #{id}
  </select>

    <select id="fetchEmpresaByNota" parameterType="Integer" resultMap="empresaResult">
    			   SELECT
					b.id,	<include refid="allEmpresaColumns" />
 				   FROM empresa b
					where b.id = #{id}
  </select>

  <select id="fetchAllEmpresasByRequest" parameterType="EmpresaInquiryRequest" resultMap="empresaResult">
     SELECT * FROM ( SELECT b.id,
    						<include refid="allEmpresaColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.id) AS RowNumber
    				FROM empresa b
						where 1 = 1
					<if test="parentId != null">
						AND b.id = #{id}
					</if>
					 <if test="statusList != null and !statusList.isEmpty()">
					     AND b.PGSI_status IN
					     <foreach item="item" index="index" collection="statusList"
						     open="(" separator="," close=")">
						   	 #{item.value}
						 </foreach>
					 </if>
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RentabilidadeMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- private Integer id;

	private Integer idproduto;

	/** The type of an account. */
	private RentabilidadeItem rentabilidadeItens;

	private Double valor;
       -->

  <resultMap id="rentabilidadeResult" type="Rentabilidade" >
    <result property="id" column="id" />
    <result property="idproduto" column="prodId" />
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
    <collection property="rentabilidadeList" column="id" select="RentabilidadeItemMap.fetchRentabilidadeItensByRentabilidade"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allRentabilidadeColumns">
		,b.prodId
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allRentabilidadeValues">
  		#{idproduto},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertRentabilidade" parameterType="Rentabilidade" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO rentabilidade (
		<include refid="allRentabilidadeColumns" />
      )
    VALUES (<include refid="allRentabilidadeValues" /> )
  </insert>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateRentabilidade" parameterType="Rentabilidade">
    UPDATE rentabilidade
    	<set>
    		<if test="idproduto!= null">prodId = #{idproduto},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteRentabilidadeById" parameterType="Integer">
    	DELETE FROM rentabilidade WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchRentabilidadeRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM rentabilidade
     WHERE 1 = 1
     <if test="id != null">
		  AND id = #{id}
	 </if>
  </select>

  <select id="fetchAllRentabilidades" resultMap="rentabilidadeResult">
    SELECT
	<include refid="allRentabilidadeColumns" />
    FROM rentabilidade ORDER BY id ASC
  </select>

  <select id="fetchRentabilidadeById" parameterType="FetchByIdRequest" resultMap="rentabilidadeResult">
	SELECT b.id,
	<include refid="allRentabilidadeColumns" />
    FROM rentabilidade b
    where id = #{id}
    ORDER BY id ASC
  </select>

  <select id="fetchAllRentabilidadesByRequest" parameterType="PagedInquiryRequest" resultMap="rentabilidadeResult">
	 SELECT b.id,<include refid="allRentabilidadeColumns" />
        FROM rentabilidade b
     WHERE 1 = 1
     <if test="id != null">
		  AND b.id = #{id}
	 </if>
  </select>

  <select id="fetchRentabilidadeByProduto" parameterType="Integer" resultMap="rentabilidadeResult">
	  	SELECT F.*

		  FROM rentabilidadeProd AS C

		  INNER JOIN rentabilidade AS F

		    ON F.id like C.Rentabilidadeid
		where  c.prodId = #{id}
  </select>


</mapper>
<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BancoMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly.
       private Integer id;

	private String nome;

	private List<Agencia> agenciaList;-->
	  <resultMap id="bancoPessoaResult" type="BancoPessoa" >
		<result property="id" column="id" />
		<result property="parentId" column="parentId" />
		<result property="numCont" column="numCont" />
		<result property="saldo" column="saldo" />
		<result property="processId" column="processId" />
		<result property="create_date" column="create_date" />
      	<result property="create_user" column="create_user" />
      	<result property="modify_date" column="modify_date" />
      	<result property="modify_user" column="modify_user" />
      	<association property="bancoId"    column="regime" select="fetchBancoByBancoId"  />
      	<association property="agenciaId"  column="regime" select="AgenciaMap.fetchAgenciaById"  />
      </resultMap>

  <resultMap id="bancoResult" type="Banco" >
    <result property="id" column="id" />
    <result property="nome" column="nome" />
   	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<collection property="agenciaList" column="id" select="AgenciaMap.fetchAgenciaByBanco"/>
	<collection property="statusList" column="id" select="StatusMap.fetchAllStatusByPessoaId"/>
  </resultMap>

  <resultMap id="bancoAResult" type="Banco" >
    <result property="id" column="id" />
    <result property="nome" column="nome" />
   	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<collection property="statusList" column="id" select="StatusMap.fetchAllStatusByPessoaId"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allBancoColumns">
		b.nome,
      	b.create_date,
      	b.create_user,
      	b.modify_date,
      	b.modify_user
  </sql>

  <sql id="allBancoValues">
  		#{nome},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <sql id="allBancoPessoaColumns">
		b.parentId,
		b.bancoId,
		b.numCont,
		b.saldo,
		b.processId,
		b.create_date,
      	b.create_user,
      	b.modify_date,
      	b.modify_user
  </sql>

  <sql id="allBancoPessoaValues">
  		#{parentId},
		#{bancoId},
		#{numCont},
		#{saldo},
		#{processId},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>
  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertBanco" parameterType="Banco" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO banco (
		<include refid="allBancoColumns" />
      )
    VALUES (<include refid="allBancoValues" /> )
  </insert>

    <insert id="insertBancoPessoa" parameterType="BancoPessoa" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO BancoPessoa (
		<include refid="allBancoColumns" />
      )
    VALUES (<include refid="allBancoValues" /> )
  </insert>

    <update id="updateBancoPessoa" parameterType="Banco">
    UPDATE BancoPessoa
    	<set>
    		<if test="saldo!= null">saldo = #{saldo},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateBanco" parameterType="Banco">
    UPDATE banco
    	<set>
    		<if test="nome!= null">nome = #{nome},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteBancoById" parameterType="Integer">
    	DELETE FROM banco WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchBancoRowCount" parameterType="PagedInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM banco
     WHERE 1=1
     <if test="id != null">
		  AND id = #{id}
	 </if>
  </select>

  <select id="fetchAllBancos" resultMap="bancoResult">
    SELECT b.id
	<include refid="allBancoColumns" />
    FROM banco b ORDER BY b.id ASC
  </select>

  <select id="fetchBancoById" parameterType="FetchByIdRequest" resultMap="bancoResult">
	SELECT
		<include refid="allBancoColumns" />
        FROM banco b
     WHERE 1=1
     <if test="id != null">
		  AND b.id = #{id}
	 </if>
  </select>

   <select id="fetchBancoByBancoId" parameterType="Integer" resultMap="bancoAResult">
	SELECT
		<include refid="allBancoColumns" />
        FROM banco b
     WHERE 1=1
     <if test="id != null">
		  AND b.id = #{id}
	 </if>
  </select>

  <select id="fetchAllBancosByRequest" parameterType="PagedInquiryRequest" resultMap="bancoResult">
		 SELECT b.id
		<include refid="allBancoColumns" />
	    FROM banco b ORDER BY b.id ASC
  </select>

  <select id="fetchBancoByPessoa" parameterType="Integer" resultMap="bancoPessoaResult">
	SELECT b.id,
		<include refid="allBancoPessoaColumns" />
		FROM bancoPessoa b where b.id = #{id} ORDER BY b.id ASC
  </select>


</mapper>
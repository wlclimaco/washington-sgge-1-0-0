<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrdemServicoMap">

	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>  -->

  	<!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. private Integer id;
-->

  <resultMap id="ordemServicoTypeResult" type="OrdemServicoTypes" >
    <result property="id" column="id" />
    <result property="typeServico" column="type" />
    <result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
  </resultMap>

  <resultMap id="ordemServicoResult" type="OrdemServico" >
    <result property="id" column="id" />
    <result property="emprId" column="emprId" />
    <result property="userId" column="userId" />
   	<result property="nome" column="nome"/>
	<result property="data" column="data"/>
	<result property="assunto" column="assunto"/>
	<result property="createUser" column="create_user"/>
	<result property="createDateUTC" column="create_date"/>
	<result property="modifyUser" column="modify_user"/>
	<result property="modifyDateUTC" column="modify_date"/>
	<association property="typeId"    column="typeId" select="fetchTypeByOrdem"  />
	<collection property="ordemStatusList" column="id" select="OrdemServicoItensMap.fetchAllOrdemServicoItensByOrdemServico"/>
  </resultMap>

  <!--
		SQL fragments allow "parts" of SQL to be re-used in other SQL statements.
	-->
  <sql id="allOrdemServicoColumns">
		 b.emprId
		,b.userId
		,b.nome
      	,b.data
      	,b.typeId
      	,b.assunto
      	,b.create_date
      	,b.create_user
      	,b.modify_date
      	,b.modify_user
  </sql>

  <sql id="allOrdemServicoValues">
  		#{emprId},
  		#{userId},
  		#{nome},
    	#{data},
    	#{typeServico.id},
    	#{assunto},
    	<include refid="CBOFMap.changeControlFields"/>
  </sql>

  <!--
		SQL Insert Statements.
 	-->
  <insert id="insertOrdemServico" parameterType="OrdemServico" useGeneratedKeys="true" keyProperty="id">
  	INSERT INTO ordemServico (
		<include refid="allOrdemServicoColumns" />
      )
    VALUES (<include refid="allOrdemServicoValues" /> )
  </insert>


	<!--
		SQL Update Statements.
 	-->

  <update id="updateOrdemServico" parameterType="OrdemServico">
    UPDATE ordemServico
    	<set>
    		<if test="assunto!= null">assunto = #{assunto},</if>
	    	<if test="emprId!= null"> emprId=#{emprId},</if>
	    	<if test="userId!= null"> userId=#{userId},</if>
	    	<if test="nome!= null"> nome=#{nome},</if>
	    	<if test="data!= null"> data=#{data},</if>
	    	<if test="typeServico.id!= null"> typeId=#{typeServico.id},</if>
			<if test="modifyDateUTC!= null"> modify_date=#{modifyDateUTC},</if>
			<if test="modifyUser!= null"> modify_user=#{modifyUser}</if>
		</set>
    WHERE
     id = #{id}
  </update>

   <!--
		SQL Delete Statements.
   -->
  <delete id="deleteOrdemServicoById" parameterType="Integer">
    	DELETE FROM ordemServico WHERE id = #{id}
  </delete>

	<!--
		SQL Fetch Statements.
 	-->
  <select id="fetchOrdemServicoRowCount" parameterType="OrdemServicoInquiryRequest" resultType="Integer">
     SELECT COUNT(id) AS RECORD_COUNT
        FROM ordemServico
     WHERE 2 = 2
  </select>

  <select id="fetchAllOrdemServicos" resultMap="ordemServicoResult">
    SELECT
	<include refid="allOrdemServicoColumns" />
    FROM ordemServico ORDER BY data ASC
  </select>

  <select id="fetchOrdemServicoById" parameterType="FetchByIdRequest" resultMap="ordemServicoResult">
		 SELECT
			<include refid="allOrdemServicoColumns" />
		    FROM ordemServico where id= #{id} ORDER BY data ASC
  </select>

  <select id="fetchAllOrdemServicosByRequest" parameterType="OrdemServicoInquiryRequest" resultMap="ordemServicoResult">
	       SELECT * FROM ( SELECT b.id,
    						<include refid="allOrdemServicoColumns" />,
    						ROW_NUMBER() OVER(ORDER BY b.id) AS RowNumber
    				FROM ordemservico b
    			) LIST
				<choose>
					<when test="pageSize != null and pageSize > 0">
					   <!-- #{startPage}*#{pageSize} = startRow, so limits are:
					        LOWER: startRow + 1 and
					        UPPER: startRow + pageSize -->
					   WHERE RowNumber BETWEEN (#{startPage}*#{pageSize})+ 1 AND (#{startPage}*#{pageSize})+#{pageSize}
					</when>
					<otherwise>
					 	WHERE RowNumber BETWEEN 1 AND RowNumber
					 	ORDER BY RowNumber
					</otherwise>
				</choose>
  </select>


<select id="fetchTypeByOrdem" parameterType="Integer" resultMap="ordemServicoTypeResult">
		 SELECT *
		    FROM ordemServicoTypes where id= #{id} ORDER BY data ASC
  </select>


</mapper>
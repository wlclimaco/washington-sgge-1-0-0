<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/security
          	http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
          	http://www.springframework.org/schema/aop
          	http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- SECURITY - HTTP requests -->
	<security:global-method-security
		pre-post-annotations="enabled">
	</security:global-method-security>

	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/login.jsp?Session timed out." entry-point-ref="loginUrlAuthenticationEntryPoint">
		<security:custom-filter position="FORM_LOGIN_FILTER"
			ref="customUsernamePasswordAuthenticationFilter" />
		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<security:intercept-url pattern="/login.jsp"
			filters="none" />
		<security:intercept-url pattern="/version.jsp"
			filters="none" />
		<security:intercept-url pattern="/images/**"
			filters="none" />
		<security:intercept-url pattern="/MLCGatewayService/**"
			filters="none" />
		<security:intercept-url pattern="/process/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/**/**"
			access="hasAnyRole('ROLE_Role.Admin', 'ROLE_Role.Analytic User', 'ROLE_Role.System Operator', 'ROLE_Role.Customer Support')" />
		<!-- <security:form-login login-page="/login.jsp?Please Login." authentication-failure-url="/login.jsp?error=true"
			always-use-default-target="true" default-target-url="/checkLogin.action"
			/> -->
		<security:logout invalidate-session="true"
			logout-success-url="/login.jsp?Successful Logout." />
	</security:http>

	<!--  The spring security authentication-manager is used for webservices with JOSSO/LDAP -->
	<security:authentication-manager alias="authenticationManager" />

	<bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
     <property name="sessionRegistry" ref="sessionRegistry" />
     <property name="expiredUrl" value="/expired.html" />
   </bean>

	<!-- Custom authentication manager. In order to authenticate username/password and Tenant -->
	<bean id="customAuthenticationManager" class="com.sensus.mlc.security.CustomAuthenticationManager">
    	<property name="settingsBCF" ref="settingsBCF" />
		<property name="userBCF" ref="userBCF" />
		<property name="webSeviceUserName" ref="webserviceUserNameTarget" />
		<property name="webSevicePassword" ref="webserviceUserPwdTarget" />
		<property name="superUserName" ref="superUserNameTarget" />
	</bean>

 	<bean id="customUsernamePasswordAuthenticationFilter"
		class="com.sensus.mlc.security.CustomUsernamePasswordAuthenticationFilter">
		<property name="authenticationManager" ref="customAuthenticationManager" />
		<property name="authenticationFailureHandler" ref="failureHandler" />
		<property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy" />
		<property name="authenticationSuccessHandler" ref="successHandler" />
	</bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
                <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
                <property name="maximumSessions" value="5" />
                <property name="exceptionIfMaximumExceeded" value="true"/>
    </bean>


	<bean id="successHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/main" />
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>

	<bean id="failureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp?error=true" />
	</bean>

	<bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp?Please Login." />
	</bean>

	<!-- Web service security - Callback for interceptor -->
	<bean id="validationCallback"
		class="org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler">
		<property name="authenticationManager" ref="customAuthenticationManager" />
	</bean>

	<!-- Interceptor -->
	<bean id="securityInterceptor"
		class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
		<property name="validationActions" value="UsernameToken" />
		<property name="validationCallbackHandler" ref="validationCallback" />
	</bean>


	<!-- WS Client Authentication -->
	<bean id="mlc.interceptor.authentication"
		class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
		<property name="securementActions" value="UsernameToken" />
		<property name="securementPasswordType" value="PasswordText" />
		<property name="securementCallbackHandler" ref="mlc.wss4j.securementCallback" />
	</bean>

	<bean id="mlc.wss4j.securementCallback" class="com.sensus.mlc.security.LCNotClientSecurementCallback" />


</beans>


<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PrecoMap">


  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->
   <resultMap id="PrecoResult" type="Tabelapreco">
    <result property="precoid" column="precoid"/>
    <result property="preco" column="preco"/>
    <result property="dataCreate" jdbcType="TIMESTAMP"  column="data"/>
    <result property="precopromo" column="precopromo"/>
    <result property="promocao" column="promocao"/>
    <result property="dateIni" jdbcType="TIMESTAMP"  column="dataini"/>
    <result property="dateFim" jdbcType="TIMESTAMP"  column="datafin"/>
    <association property="supermercadoid" column="supermercadoid" javaType="Supermercado" select="SupermercadoMap.fetchSupermercadoById" />
    <collection property="acessos" column="precoid" select="ControleAcessMap.fetchControleAcessByPreco" />
  </resultMap>

   <resultMap id="PrecoResultProd" type="Tabelapreco">
    <result property="precoid" column="precoid"/>
    <result property="preco" column="preco"/>
    <result property="dataCreate" jdbcType="TIMESTAMP"  column="data"/>
    <result property="precopromo" column="precopromo"/>
    <result property="promocao" column="promocao"/>
     <result property="status" column="status"/>
    <result property="dateIni" jdbcType="TIMESTAMP"  column="dataini"/>
    <result property="dateFim" jdbcType="TIMESTAMP"  column="datafin"/>
    <association property="supermercadoid" column="supermercadoid" javaType="Supermercado" select="SupermercadoMap.fetchSupermercadoById" />
    <association property="idProduto" column="produtoid" javaType="Produto" select="ProdutoMap.fetchProdutoByIdInt" />
    <collection property="acessos" column="precoid" select="ControleAcessMap.fetchControleAcessByPreco" />
  </resultMap>

  <sql id="allPrecoColumns">
		precoid, produtoid, data,supermercadoid,  preco, precopromo, promocao, dataini, datafin,status
  </sql>

  <sql id="allPrecoColumnsWithQualifier">
  		p.precoid, p.produtoid,p.data, p.supermercadoid,  p.preco, p.precopromo, p.promocao, p.dataini, p.datafin,p.status
  </sql>


  <select id="fetchAllPrecos" resultMap="PrecoResult">
    SELECT
    <include refid="allPrecoColumns" />
    FROM TABPRECO ORDER BY DATA DESC
  </select>

 	<select id="fetchAllPrecosSup" parameterType="int" resultMap="PrecoResultProd">
		select p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
            p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
            from tabpreco t,produto p where p.produtoid = t.produtoid and t.supermercadoid = #{id}
	    group by
	     p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
         p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
	</select>


 	<select id="fetchAllPrecosMarca" parameterType="int" resultMap="PrecoResultProd">
		select
            p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
            p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
        from produto p
		LEFT JOIN tabpreco t ON p.produtoid = t.produtoid
 		where p.marca = #{id}
	    group by
		     p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
	         p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
	</select>

	 	<select id="fetchAllPrecosMenu" parameterType="int" resultMap="PrecoResultProd">
		select
            p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
            p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
        from produto p
		LEFT JOIN tabpreco t ON p.produtoid = t.produtoid
 		where p.menu = #{id}
	    group by
		     p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
	         p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
	</select>

	<select id="fetchAllPrecosUniMed" parameterType="int" resultMap="PrecoResultProd">
		select
            p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
            p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
        from produto p
		LEFT JOIN tabpreco t ON p.produtoid = t.produtoid
 		where p.unimed = #{id}
	    group by
		     p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
	         p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
	</select>

	<select id="fetchAllPrecosSupermercado" parameterType="int" resultMap="PrecoResultProd">
		select  p.produtoid, p.nome, p.marca, p.menu, p.submenu, p.trimenu, p.unimed, p.precoid,
                p.controleid, p.supermercadoid, p.codbarra, p.foto, p.descricao
		 from tabpreco t  ,produto p where p.produtoid= t.produtoId and t.supermercadoid = #{id}
	</select>

   <select id="fetchPrecoByProduto" parameterType="int" resultMap="PrecoResult">
	    SELECT
	    <include refid="allPrecoColumns" />
	    FROM tabpreco where produtoid = #{id}  ORDER BY DATA DESC
    </select>

  <select id="fetchAllPrecosPagedBatch" resultMap="PrecoResult">
  	<if test="_databaseId == 'Oracle'">
		SELECT * FROM (
		SELECT * FROM (
		SELECT <include refid="allPrecoColumnsWithQualifier" />,
		ROWNUM ROWNUM_ FROM TABPRECO p ORDER BY DATA DESC
		) WHERE ROWNUM_ <![CDATA[ > ]]>
		( #{_page} * #{_pagesize} )
		) WHERE ROWNUM <![CDATA[ <= ]]>
		#{_pagesize}mo
    </if>

   	 <if test="_databaseId == 'PostgreSQL'">
		SELECT <include refid="allPrecoColumns" />
   		  FROM TABPRECO ORDER BY DATA DESC
		  OFFSET ( #{_page} * #{_pagesize} )
		  LIMIT #{_pagesize}
    </if>
  </select>

  <select id="fetchPrecoRowCount" resultType="Integer">
      <if test="_databaseId == 'PostgreSQL'">
			SELECT COUNT(*) AS RECORD_COUNT FROM TABPRECO WHERE BUNDLE_ID IS NOT NULL
      </if>

   	  <if test="_databaseId == 'Oracle'">
		 	SELECT COUNT(BUNDLE_ID) AS RECORD_COUNT FROM TABPRECO
      </if>
  </select>

  <select id="fetchAllPrecosRequest" parameterType="PagedInquiryRequest" resultMap="PrecoResult">
  	<if test="_databaseId == 'Oracle'">
		SELECT * FROM (
		SELECT * FROM (
		SELECT <include refid="allPrecoColumnsWithQualifier" />,
		ROWNUM ROWNUM_ FROM TABPRECO p ORDER BY DATA DESC
		) WHERE ROWNUM_ <![CDATA[ > ]]>
		( #{startPage} * #{pageSize} )
		) WHERE ROWNUM <![CDATA[ <= ]]>
		#{pageSize}
    </if>

   	 <if test="_databaseId == 'PostgreSQL'">
		SELECT <include refid="allPrecoColumns" />
   		  FROM TABPRECO ORDER BY DATA DESC
		  OFFSET ( #{startPage} * #{pageSize} )
		  LIMIT #{pageSize}
    </if>
  </select>

  <select id="fetchPrecoById" parameterType="Integer" resultMap="PrecoResult">
    SELECT
   <include refid="allPrecoColumns" />
    FROM TABPRECO WHERE PRECOID = #{fetchid}
  </select>

  <select id="fetchVersionNumber" parameterType="Tabelapreco" resultType="int">
	SELECT VERSN_LOCK_NUM FROM TABPRECO WHERE BUNDLE_ID = #{id}
  </select>

  <select id="insertPreco" parameterType="tabelapreco" resultType="int" statementType="CALLABLE">
        { call ins_preco( #{idProduto.id} , #{supermercadoid.superId} , null , #{preco} , #{precopromo} , #{promocao} ,null , null, #{userId}, #{status} ) }
  </select>

    <select id="updatePreco" parameterType="tabelapreco" resultType="int" statementType="CALLABLE">
        { call upd_preco( #{idProduto.id} , #{supermercadoid.superId} , null , #{preco} , #{precopromo} , #{promocao} ,null , null, #{userId} ) }
  </select>


  <update id="deletePrecoById" parameterType="Tabelapreco">
    update TABPRECO SET STATUS = 'C' WHERE PRECOID = #{precoid} and supermercadoid = #{precosupermercadoid.superId}
  </update>

  <delete id="deleteAllPrecos">
	DELETE FROM TABPRECO
  </delete>
</mapper>
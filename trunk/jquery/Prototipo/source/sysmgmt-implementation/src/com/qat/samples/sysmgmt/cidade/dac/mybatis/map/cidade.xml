<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CidadeMap">


  <!-- Result maps describe the mapping between the columns returned
       from a query, and the class properties.  A result map isn't
       necessary if the columns (or aliases) match to the properties
       exactly. -->
  <resultMap id="CidadeResult" type="Cidade">
    <result property="cidadeId" column="id"/>
    <result property="estado" column="estado"/>
    <result property="cidade" column="cidade"/>
    <result property="version" column="VERSN_LOCK_NUM"/>
    <collection property="acessos" column="id" select="ControleAcessMap.fetchControleAcessByCidade" />
  </resultMap>

  <sql id="allCidadeColumns">
		id, estado, cidade,VERSN_LOCK_NUM
  </sql>

  <sql id="allCidadeColumnsWithQualifier">
		p.id, p.estado, p.cidade,p.VERSN_LOCK_NUM
  </sql>

  <select id="fetchAllCidades" resultMap="CidadeResult">
    SELECT
    <include refid="allCidadeColumns" />
    FROM CIDADE ORDER BY ID ASC
  </select>

  <select id="fetchAllCidadesPagedBatch" resultMap="CidadeResult">
  	<if test="_databaseId == 'Oracle'">
		SELECT * FROM (
		SELECT * FROM (
		SELECT <include refid="allCidadeColumnsWithQualifier" />,
		ROWNUM ROWNUM_ FROM CIDADE p ORDER BY ID ASC
		) WHERE ROWNUM_ <![CDATA[ > ]]>
		( #{_page} * #{_pagesize} )
		) WHERE ROWNUM <![CDATA[ <= ]]>
		#{_pagesize}mo
    </if>

   	 <if test="_databaseId == 'PostgreSQL'">
		SELECT <include refid="allCidadeColumns" />
   		  FROM CIDADE ORDER BY ID ASC
		  OFFSET ( #{_page} * #{_pagesize} )
		  LIMIT #{_pagesize}
    </if>
  </select>

  <select id="fetchCidadeRowCount" resultType="Integer">
      <if test="_databaseId == 'PostgreSQL'">
			SELECT COUNT(*) AS RECORD_COUNT FROM CIDADE WHERE CIDADE IS NOT NULL
      </if>

   	  <if test="_databaseId == 'Oracle'">
		 	SELECT COUNT(ID) AS RECORD_COUNT FROM CIDADE
      </if>
  </select>

  <select id="fetchAllCidadesRequest" parameterType="CidadeInquiryRequest" resultMap="CidadeResult">
  	<if test="_databaseId == 'Oracle'">
		SELECT * FROM (
		SELECT * FROM (
		SELECT <include refid="allCidadeColumnsWithQualifier" />,
		ROWNUM ROWNUM_ FROM CIDADE p ORDER BY ID ASC
		) WHERE ROWNUM_ <![CDATA[ > ]]>
		( #{startPage} * #{pageSize} )
		) WHERE ROWNUM <![CDATA[ <= ]]>
		#{pageSize}
    </if>

   	 <if test="_databaseId == 'PostgreSQL'">
		SELECT <include refid="allCidadeColumns" />
   		  FROM CIDADE ORDER BY ID ASC
		  OFFSET ( #{startPage} * #{pageSize} )
		  LIMIT #{pageSize}
    </if>
  </select>

  <select id="fetchCidadeById" parameterType="Integer" resultMap="CidadeResult">
    SELECT
   <include refid="allCidadeColumns" />
    FROM CIDADE WHERE ID = #{fetchid}
  </select>

  <select id="fetchVersionNumber" parameterType="Cidade" resultType="int">
	SELECT VERSN_LOCK_NUM FROM CIDADE WHERE ID = #{cidadeId}
  </select>

  <select id="insertCidade" parameterType="Cidade" resultType="int" statementType="CALLABLE">
        { call ins_cidade( #{cidade}, #{estado},#{userId} ) }

  </select>

  <select id="updateCidade" parameterType="Cidade" resultType="int" statementType="CALLABLE">
        { call upd_cidade( #{cidadeId},#{cidade}, #{estado},#{userId} ) }

  </select>

   <select id="deleteCidadeById" parameterType="Cidade" resultType="int" statementType="CALLABLE">
        { call del_cidade( #{cidadeId},#{userId} ) }

  </select>


  <delete id="deleteAllCidades">
	DELETE FROM CIDADE
  </delete>
</mapper>
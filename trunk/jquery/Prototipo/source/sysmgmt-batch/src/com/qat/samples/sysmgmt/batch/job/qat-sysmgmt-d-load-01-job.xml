<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- First include the QAT batch level application context. -->
	<import resource="classpath:conf/batch/qat-batch-context.xml" />

	<!-- business area specific context to be used. -->
	<import resource="classpath:conf/web/conf/qat-sysmgmt-base-validators-context.xml" />
	<import resource="classpath:conf/web/conf/qat-sysmgmt-base-resourcebundles-context.xml" />
	<import resource="classpath:conf/web/conf/qat-sysmgmt-base-dac-context.xml" />

	<!-- Next batch specific context to be used. -->
	<import resource="classpath:conf/batch/qat-sysmgmt-base-batch-context.xml" />

	<!-- This is the main Job for this Spring batch job configuration file. We define the flow of steps
		within the job element. -->

	<!-- qatSysMgmtDLoad01Job - is the 1st daily load job for SysMgmt -->
	<batch:job id="qatSysMgmtDLoad01Job" job-repository="jobRepository" parent="qatParentJob">
		<!-- Deletes all Procedure Table Rows -->
		<batch:step id="removeAllProcedureRows" next="loadProcedures" parent="qatParentStep">
			<batch:tasklet ref="removeAllProcedureRowsTasklet">
			</batch:tasklet>
		</batch:step>

		<!-- Reads input file, does some validation logic in the processor and then updates the table and writes
			any errors out to flat file -->
		<batch:step id="loadProcedures" next="createProcedureXMLExtract" parent="qatParentStep">
			<batch:tasklet>
				<batch:chunk reader="procedureFileItemReader" processor="procedureItemProcessor"
					writer="procedureFileItemWriters" commit-interval="1000">
					<batch:streams>
						<batch:stream ref="procedureErrorFileItemWriter" />
					</batch:streams>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>

		<!-- Reads the procedure table and writes the table contents out to an XML file -->
		<batch:step id="createProcedureXMLExtract" next="removeAllDrugPriceRows" parent="qatParentStepNoJta">
			<batch:tasklet>
				<batch:chunk reader="procedureSqlItemReader" writer="procedureXMLWriter"
					commit-interval="1000" />
			</batch:tasklet>
		</batch:step>

		<!-- Deletes all Drug_Price Table Rows -->
		<batch:step id="removeAllDrugPriceRows" next="removeAllDrugRows" parent="qatParentStep">
			<batch:tasklet ref="removeAllDrugPriceRowsTasklet">
			</batch:tasklet>
		</batch:step>


		<!-- Deletes all Drug Table Rows -->
		<batch:step id="removeAllDrugRows" next="loadDrugs" parent="qatParentStep">
			<batch:tasklet ref="removeAllDrugRowsTasklet">
			</batch:tasklet>
		</batch:step>

		<!-- Reads input file, does some validation logic in the processor and then updates the table and writes
			any errors out to flat file -->
		<batch:step id="loadDrugs" next="" parent="qatParentStep">
			<batch:tasklet>
				<batch:chunk reader="drugFileItemReader" processor="drugItemProcessor" writer="drugFileItemWriters"
					commit-interval="100">
					<batch:streams>
						<batch:stream ref="drugErrorFileItemWriter" />
					</batch:streams>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>

	</batch:job>

	<!-- Here comes the Beans... Notice the full class path/name specified in the class attribute and how
		we pass-in or inject the property value. -->

	<bean id="drugItemProcessor" class="com.qat.samples.sysmgmt.batch.processor.DrugItemProcessor">
		<property name="validationController" ref="drugValidationController" />
	</bean>

	<bean id="drugFileItemWriters" class="com.qat.framework.batch.writer.CompositeModelItemWrapperWriter">
		<property name="insertWriter" ref="drugItemWriter" />
		<property name="errorWriter" ref="drugErrorFileItemWriter" />
	</bean>

	<bean id="drugFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" ref="inputDrugCSVFile" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="ndcCode,ndcDesc,ndcSInd1,ndcDPrice1,ndcEffDate1,ndcSInd2,ndcDPrice2,ndcEffDate2" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.qat.samples.sysmgmt.batch.reader.DrugFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="drugErrorFileItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" ref="outputDrugErrorXMLFile" />
		<property name="marshaller" ref="drugMarshaller" />
		<property name="rootTagName" value="drugs" />
		<property name="overwriteOutput" value="true" />
	</bean>

	<bean id="drugMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<map>
				<entry key="drug" value="com.qat.samples.sysmgmt.model.Drug" />
				<entry key="wrapper" value="com.qat.framework.batch.item.ModelItemWrapper" />
				<entry key="drugPrice" value="com.qat.samples.sysmgmt.model.DrugPrice" />
			</map>
		</property>
	</bean>

	<bean id="drugItemWriter" class="com.qat.samples.sysmgmt.batch.writer.DrugItemWriter">
		<property name="drugDAC" ref="drugDACTarget" />
	</bean>

	<bean id="removeAllDrugRowsTasklet" class="com.qat.framework.batch.tasklet.JdbcSqlCommandTasklet">
		<property name="dataSource" ref="qatDataSource" />
		<property name="sqlStatement" value="delete from DRUG" />
		<property name="statementType" value="delete" />
		<property name="rollback" value="false" />
		<!-- <property name="statementType" value="stproc" /> -->
		<!-- <property name="sqlStatement" value="{ CALL SM_TRUNC_TAB_SP(?,?,?) }" /> -->
		<!-- <property name="stProcParameters" value="eds,DRUG,1" /> -->
	</bean>

	<bean id="removeAllDrugPriceRowsTasklet" class="com.qat.framework.batch.tasklet.JdbcSqlCommandTasklet">
		<property name="dataSource" ref="qatDataSource" />
		<property name="sqlStatement" value="delete from DRUG_PRICE" />
		<property name="statementType" value="delete" />
		<property name="rollback" value="false" />
		<!-- <property name="statementType" value="stproc" /> -->
		<!-- <property name="sqlStatement" value="{ CALL SM_TRUNC_TAB_SP(?,?,?) }" /> -->
		<!-- <property name="stProcParameters" value="eds,DRUG_PRICE,1" /> -->
	</bean>

	<bean id="inputDrugCSVFile" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="${ROOT_ENV_SUITE_DIR}/${DATADIR}/drugData.csv" />
	</bean>

	<bean id="outputDrugErrorXMLFile" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="${ROOT_ENV_SUITE_DIR}/${DATADIR}/drugErrorData.xml" />
	</bean>

	<bean id="procedureItemProcessor" class="com.qat.samples.sysmgmt.batch.processor.ProcedureItemProcessor">
		<property name="validationController" ref="procedureValidationController"/>
	</bean>

	<bean id="bundleItemProcessor" class="com.qat.samples.sysmgmt.batch.processor.BundleItemProcessor">
		<property name="validationController" ref="bundleValidationController"/>
	</bean>

	<bean id="procedureFileItemWriters" class="com.qat.framework.batch.writer.CompositeModelItemWrapperWriter">
		<property name="insertWriter" ref="procedureItemWriter" />
		<property name="skipWriter" ref="nullSkipWriter" />
		<property name="errorWriter" ref="procedureErrorFileItemWriter" />
	</bean>

	<bean id="procedureFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" ref="inputProcCSVFile" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="code,description,price" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.qat.framework.batch.reader.BeanModelItemWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="procedure" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="procedure" class="com.qat.samples.sysmgmt.model.Procedure" scope="prototype" />

	<bean id="procedureErrorFileItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" ref="outputProcErrorXMLFile" />
		<property name="marshaller" ref="procedureMarshaller" />
		<property name="rootTagName" value="procedures" />
		<property name="overwriteOutput" value="true" />
	</bean>

	<bean id="procedureSqlItemReader" class="com.qat.framework.batch.reader.MybatisPagingItemReader">
		<property name="sqlSessionFactory" ref="sysMgmt-sqlSessionFactory" />
		<property name="queryId" value="ProcedureMap.fetchAllProceduresPagedBatch" />
		<property name="pageSize" value="1000" />
	</bean>

	<bean id="procedureItemWriter" class="com.qat.samples.sysmgmt.batch.writer.ProcedureItemWriter">
		<property name="procedureDAC" ref="procedureDACTarget" />
	</bean>

	<bean id="nullSkipWriter" class="com.qat.framework.batch.writer.DevNullModelItemWrapperWriter"/>

	<bean id="procedureXMLWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" ref="outputProcXMLFile" />
		<property name="marshaller" ref="procedureMarshaller" />
		<property name="rootTagName" value="procedures" />
		<property name="overwriteOutput" value="true" />
	</bean>

	<bean id="procedureMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<map>
				<entry key="procedure" value="com.qat.samples.sysmgmt.model.Procedure" />
				<entry key="id" value="java.lang.Integer" />
				<entry key="code" value="java.lang.String" />
				<entry key="description" value="java.lang.String" />
				<entry key="price" value="java.lang.Double" />
			</map>
		</property>
	</bean>

	<bean id="removeAllProcedureRowsTasklet" class="com.qat.framework.batch.tasklet.JdbcSqlCommandTasklet">
		<property name="dataSource" ref="qatDataSource" />
		<property name="sqlStatement" value="delete from PROCEDURE" />
		<property name="statementType" value="delete" />
		<property name="rollback" value="false" />
		<!-- <property name="statementType" value="stproc" /> -->
		<!-- <property name="sqlStatement" value="{ CALL SM_TRUNC_TAB_SP(?,?,?) }" /> -->
		<!-- <property name="stProcParameters" value="eds,PROCEDURE,1" /> -->
	</bean>

	<bean id="outputProcXMLFile" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="${ROOT_ENV_SUITE_DIR}/${DATADIR}/procData-out.xml" />
	</bean>

	<bean id="inputProcCSVFile" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="${ROOT_ENV_SUITE_DIR}/${DATADIR}/procData.csv" />
	</bean>

	<bean id="outputProcErrorXMLFile" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="${ROOT_ENV_SUITE_DIR}/${DATADIR}/procErrorData.xml" />
	</bean>
</beans>
unit UBE;
interface
 uses   Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,  ExtCtrls,
  ComCtrls, DB, DBClient,stdctrls;

  function gerarModelo(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryResponse(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryRequest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeResponse(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeRequest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCF(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseBCFImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCL(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCLImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseDAC(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseDACImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseXML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;

implementation

uses BrvFuncoesXE;


function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;
begin
      memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
      memo1.Lines.Add('<!DOCTYPE configuration');
      memo1.Lines.Add('PUBLIC "-//mybatis.org//DTD Config 3.0//EN"');
      memo1.Lines.Add('"http://mybatis.org/dtd/mybatis-3-config.dtd">');

      memo1.Lines.Add('<configuration>');

      memo1.Lines.Add('<settings>');
      memo1.Lines.Add('<setting name="lazyLoadingEnabled" value="false" />');
      memo1.Lines.Add('</settings>');

      memo1.Lines.Add('<typeAliases>');
      memo1.Lines.Add('<!-- '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' mapping -->');
      memo1.Lines.Add('<typeAlias alias="Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" 	type="com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" />');
      memo1.Lines.Add('<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" 			type="com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" />');
      memo1.Lines.Add('<typeAlias alias="FilialRequest" 		type="com.sensus.mlc.filial.model.request.FilialRequest" />');
      memo1.Lines.Add('<typeAlias alias="EnderecoRequest" 		type="com.sensus.mlc.endereco.model.request.EnderecoRequest" />');

      memo1.Lines.Add('<!-- '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' and Smartpoint joint mapping -->');
      memo1.Lines.Add('<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"  memo1.Lines.Add(''type="com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"/>');
      memo1.Lines.Add('<typeAlias alias="Filial" memo1.Lines.Add(''    type="com.sensus.mlc.filial.model.Filial"/>');
      memo1.Lines.Add('<typeAlias alias="Endereco" memo1.Lines.Add(''type="com.sensus.mlc.endereco.model.Endereco"/>');

      memo1.Lines.Add('<!-- Smartpoint mapping -->');
      memo1.Lines.Add('<typeAlias alias="Group" memo1.Lines.Add(''		  type="com.sensus.mlc.group.model.Group" />');
      memo1.Lines.Add('<typeAlias alias="'+Txt+'" memo1.Lines.Add(''	      type="com.sensus.mlc.tag.model.'+Txt+'" />');
      memo1.Lines.Add('<typeAlias alias="StatusMessage" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.StatusMessage" />');
      memo1.Lines.Add('<typeAlias alias="LightParameter" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.LightParameter" />');
      memo1.Lines.Add('<typeAlias alias="PropertyValidValue" 			  type="com.sensus.mlc.smartpoint.model.PropertyValidValue" />');
      memo1.Lines.Add('<typeAlias alias="StatusException" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.StatusException" />');
      memo1.Lines.Add('<typeAlias alias="LightRequest" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.request.LightRequest" />');
      memo1.Lines.Add('<typeAlias alias="EventSchedule" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.EventSchedule" />');
      memo1.Lines.Add('<typeAlias alias="OffsetSchedule" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.OffsetSchedule" />');
      memo1.Lines.Add('<typeAlias alias="CustomSearch" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.CustomSearch" />');
      memo1.Lines.Add('<typeAlias alias="SearchParameter" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.SearchParameter" />');
      memo1.Lines.Add('<typeAlias alias="TimeZoneInfo" memo1.Lines.Add(''  type="com.sensus.mlc.base.model.TimeZoneInfo" />');
      memo1.Lines.Add('<typeAlias alias="SensusPartNumberConfiguration"  type="com.sensus.mlc.smartpoint.model.SensusPartNumberConfiguration" />');
      memo1.Lines.Add('<typeAlias alias="LightHistory" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.LightHistory" />');
      memo1.Lines.Add('<typeAlias alias="Schedule" memo1.Lines.Add(''	  type="com.sensus.mlc.schedule.model.Schedule" />');
      memo1.Lines.Add('<typeAlias alias="Column" memo1.Lines.Add(''		  type="com.sensus.mlc.smartpoint.model.Column" />');
      memo1.Lines.Add('<typeAlias alias="GuaranteeLightExistenceRequest" type="com.sensus.mlc.smartpoint.model.request.GuaranteeLightExistenceRequest" />');
      memo1.Lines.Add('<typeAlias alias="CurrentAlarmWarningMessage" 	  type="com.sensus.mlc.smartpoint.model.CurrentAlarmWarningMessage" />');
      memo1.Lines.Add('<typeAlias alias="CustomSearchRequest" 			  type="com.sensus.mlc.smartpoint.model.request.CustomSearchRequest" />');
      memo1.Lines.Add('<typeAlias alias="TenantRequest" memo1.Lines.Add(''  type="com.sensus.mlc.tenant.model.request.TenantRequest" />');
      memo1.Lines.Add('<typeAlias alias="LightStatusRequest" 			  type="com.sensus.mlc.smartpoint.model.request.LightStatusRequest" />');
      memo1.Lines.Add('<typeAlias alias="LightingControlRequest" 		  type="com.sensus.mlc.base.model.request.LightingControlRequest" />');
      memo1.Lines.Add('<typeAlias alias="ScheduleRequest" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.request.ScheduleRequest" />');
      memo1.Lines.Add('<typeAlias alias="PropertyValidValuesRequest" 	  type="com.sensus.mlc.smartpoint.model.request.PropertyValidValuesRequest" />');
      memo1.Lines.Add('<typeAlias alias="ColumnFilterRequest" 			  type="com.sensus.mlc.smartpoint.model.request.ColumnFilterRequest" />');
      memo1.Lines.Add('<typeAlias alias="ColumnFilterResponse" 		  type="com.sensus.mlc.smartpoint.model.response.ColumnFilterResponse" />');

      memo1.Lines.Add('</typeAliases>');

      memo1.Lines.Add('<mappers>');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/'+Txt+'/dac/mybatis/map/'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.xml"/>');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/filial/dac/mybatis/map/Filial.xml" />');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/endereco/dac/mybatis/map/Endereco.xml" />');
      memo1.Lines.Add('</mappers>');

      memo1.Lines.Add('</configuration>');


      Result := memo1;
end;
function criarCodeClasseXML(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
      memo1.Lines.Add('<!DOCTYPE mapper ');
      memo1.Lines.Add('PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" ');
      memo1.Lines.Add('"http://mybatis.org/dtd/mybatis-3-mapper.dtd">');
      memo1.Lines.Add('<mapper namespace="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      memo1.Lines.Add('<resultMap id="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sResult" type="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      CcDataset.First;
      while CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'true'  then
                  memo1.Lines.Add('<result property="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" column="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" />');
           CcDataset.Next;
      end;

      memo1.Lines.Add('</resultMap>');

      memo1.Lines.Add('<sql id="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms">');

      memo1.Lines.Add('SELECT ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                  memo1.Lines.Add(''+CcDataset.FieldByName('Nome').AsString+',');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</sql>');

      memo1.Lines.Add('<!-- Fetch All '+Txt+'s -->');
      memo1.Lines.Add('<select id="fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s" parameterType="Map" resultMap="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sResult">');

      memo1.Lines.Add('SELECT  <include refid="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms"/>');
      memo1.Lines.Add('FROM '+Txt+';   ');

      memo1.Lines.Add('</select>');

      memo1.Lines.Add('<select id="fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById"  parameterType="Map" resultMap="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Result">');

      memo1.Lines.Add('   select <include refid="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms"/>');
      memo1.Lines.Add('   from '+Txt+' e   ');
      memo1.Lines.Add('   where   ');
      memo1.Lines.Add('   e.codemp = #{codemp}  ');

      memo1.Lines.Add('</select>');

      memo1.Lines.Add('<!-- Insert '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('<select id="insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultType="int">');
      memo1.Lines.Add('SELECT ins_'+Txt+' (   ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                memo1.Lines.Add('#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+verificadorCodeBanco(LowerCase(CcDataset.FieldByName('Tipo').AsString))+'},');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</select>');
      memo1.Lines.Add('<!-- Update '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('<select id="update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultType="int">');
      memo1.Lines.Add('SELECT upd_'+Txt+' (   ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                memo1.Lines.Add('#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+verificadorCodeBanco(LowerCase(CcDataset.FieldByName('Tipo').AsString))+'},');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</select>');
      memo1.Lines.Add('</mapper>');
      Result := memo1;
end;
function criarCodeIClasseDACImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.dac.mybatis;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('import java.util.Date;');
      memo1.Lines.Add('import java.util.HashMap;');
      memo1.Lines.Add('import java.util.List;');
      memo1.Lines.Add('import java.util.Map;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.mybatis.spring.support.SqlSessionDaoSupport;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doInsert;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doQueryForList;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doQueryForObject;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doRemove;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doUpdate;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createInquiryLightRequest;');
      memo1.Lines.Add('import static com.sensus.mlc.smartpoint.dacd.SmartPointDACD.getParametersToFetchAllLights;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* The Class ActionDACImpl.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('* @author - QAT Brazil.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DACImpl extends SqlSessionDaoSupport implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE7. */');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE1. */');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant TAG_NAMESPACE. */');
      memo1.Lines.Add('private static final String EMPRESA_NAMESPACE = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant FETCH_ALL_TAGS. */');
      memo1.Lines.Add('private static final String FETCH_ALL_EMPRESAS = EMPRESA_NAMESPACE + "fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final Integer PARAMSIZE1 = 1;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE6. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE6 = 6;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE6. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE32 = 32;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE7. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE7 = 7;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant TOTAL_COLUMN. */');
      memo1.Lines.Add('private static final Integer TOTAL_COLUMN = 5;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_0. */');
      memo1.Lines.Add('private static final Integer COLUMN_0 = 0;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_1. */');
      memo1.Lines.Add('private static final Integer COLUMN_1 = 1;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_2. */');
      memo1.Lines.Add('private static final Integer COLUMN_2 = 2;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_3. */');
      memo1.Lines.Add('private static final Integer COLUMN_3 = 3;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_4. */');
      memo1.Lines.Add('private static final Integer COLUMN_4 = 4;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_NAME_HEADER. */');
      memo1.Lines.Add('private static final String ACTION_NAME_HEADER = "Action Name";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PAGINATION_TOTAL_ROWS. */');
      memo1.Lines.Add('private static final String PAGINATION_TOTAL_ROWS = EMPRESA_NAMESPACE + "PaginationTotalRows";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ORDERBY. */');
      memo1.Lines.Add('private static final String ORDERBY = "orderBy";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant GROUPID. */');
      memo1.Lines.Add('private static final String EMPRESA_ID = "codEmp";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_PAGE. */');
      memo1.Lines.Add('private static final String START_PAGE = "startPage";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPE_HEADER. */');
      memo1.Lines.Add('private static final String ACTION_TYPE_HEADER = "Action Type";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MODIFIED_BY_HEADER. */');
      memo1.Lines.Add('private static final String MODIFIED_BY_HEADER = "Modified By";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant DATE_MODIFIED_HEADER. */');
      memo1.Lines.Add('private static final String DATE_MODIFIED_HEADER = "Date Modified";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant LOCKED_HEADER. */');
      memo1.Lines.Add('private static final String LOCKED_HEADER = "Locked";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final String TENANT_ID = "tenantId";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ORDER_BY. */');
      memo1.Lines.Add('private static final String ORDER_BY = "order_by";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant SORT_BY. */');
      memo1.Lines.Add('private static final String SORT_BY = "sort_by";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PAGE_SIZE. */');
      memo1.Lines.Add('private static final String PAGE_SIZE = "page_size";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_ROW. */');
      memo1.Lines.Add('private static final String START_ROW = "start_row";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_NAME. */');
      memo1.Lines.Add('private static final String ACTION_NAME = "action_name";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPES. */');
      memo1.Lines.Add('private static final String ACTION_TYPES = "action_types";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant USERS. */');
      memo1.Lines.Add('private static final String USERS = "users";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_ID. */');
      memo1.Lines.Add('private static final String ACTION_ID = "action_id";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPE. */');
      memo1.Lines.Add('private static final String ACTION_TYPE = "action_type";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_DESCRIPTION. */');
      memo1.Lines.Add('private static final String ACTION_DESCRIPTION = "action_description";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_STEP. */');
      memo1.Lines.Add('private static final String START_STEP = "start_step";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant CREATE_USER. */');
      memo1.Lines.Add('private static final String CREATE_USER = "create_user";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant STEP_LIST. */');
      memo1.Lines.Add('private static final String STEP_LIST = "step_list";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant DEMAND_RESET_STEP_LIST. */');
      memo1.Lines.Add('private static final String DEMAND_RESET_STEP_LIST = "1,2,3,4";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant UNSELECTION_PAGINATION_IDS. */');
      memo1.Lines.Add('private static final String UNSELECTION_PAGINATION_IDS = "unselectionPaginationIds";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant INSERT_SMART_POINT_TO_TAG. */');
      memo1.Lines.Add('private static final String INSERT_SMART_POINT_TO_TAG = EMPRESA_NAMESPACE + "insertSmartPointTo'+Txt+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant INSERT_TAG. */');
      memo1.Lines.Add('private static final String INSERT_EMPRESA = EMPRESA_NAMESPACE + "insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant SENSUS_EPM_ACTIONVALIDATOR_ACTION_IS_SCHEDULED. */');
      memo1.Lines.Add('private static final String SENSUS_EPM_ACTIONVALIDATOR_ACTION_IS_SCHEDULED =');
      memo1.Lines.Add('"sensus.epm.actionvalidator.action.is_scheduled";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ADD_ACTION_FAILED. */');
      memo1.Lines.Add('private static final String ADD_ACTION_FAILED = "sensus.epm.actionbclimpl.add.action.failed";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* Prepare data to write file.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('* @param actionList the action list');
      memo1.Lines.Add('* @return the string[][]');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('private String[][] preapreDataToWriteFile(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> actionList)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('String[][] excelData = new String[actionList.size() + 1][TOTAL_COLUMN];');
      memo1.Lines.Add('');
      memo1.Lines.Add('// HEADER');
      memo1.Lines.Add('excelData[0][COLUMN_0] = ACTION_NAME_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_1] = ACTION_TYPE_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_2] = MODIFIED_BY_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_3] = DATE_MODIFIED_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_4] = LOCKED_HEADER;');
      memo1.Lines.Add('');
      memo1.Lines.Add('for (int i = 1; i <= actionList.size(); i++)');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = actionList.get(i - 1);');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_0] = '+Txt+'.getCodemp().toString();');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_1] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getNomeemp()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_1] = '+Txt+'.getRazemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_2] = '+Txt+'.getCnpjemp();');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_3] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getInscemp()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_3] = '+Txt+'.getInscemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_4] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getCodmunic()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_4] = '+Txt+'.getWwwemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('return excelData;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('// Define user from context.');
      memo1.Lines.Add(''+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().setCreateUser('+Txt+'Request.getUserContext().getUserId());');
      memo1.Lines.Add('');
      memo1.Lines.Add('paramMap.put(UNSELECTION_PAGINATION_IDS, null);');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNullOrEmpty('+Txt+'Request.getUnselectionPaginationIds()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(UNSELECTION_PAGINATION_IDS, '+Txt+'Request.getUnselectionPaginationIds());');
      memo1.Lines.Add('}');
      memo1.Lines.Add(''+Txt+'.setCodemp((Integer)doQueryForObject(getSqlSession(), "insertEndereco", '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('response.addResult('+Txt+');');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@SuppressWarnings("unchecked")');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('HashMap<String, Object> paramMap = new HashMap<String, Object>(PARAMSIZE6);');
      memo1.Lines.Add('paramMap.put(TENANT_ID, inquiry'+Txt+'Request.getTenant().getId());');
      memo1.Lines.Add('paramMap.put(PAGE_SIZE, inquiry'+Txt+'Request.getPageSize());');
      memo1.Lines.Add('paramMap.put(START_ROW, inquiry'+Txt+'Request.getStartRow());');
      memo1.Lines.Add('paramMap.put(START_PAGE, inquiry'+Txt+'Request.getStartPage());');
      memo1.Lines.Add('paramMap.put(ORDERBY, '+Txt+'OrderByEnum.NAME_COLUMN.getValue());');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNullOrEmpty(inquiry'+Txt+'Request.getSortExpressions()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(ORDERBY, inquiry'+Txt+'Request.getSortExpressions().get(0));');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNull(inquiry'+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(EMPRESA_ID, inquiry'+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().get(0).getCodemp());');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('doQueryForList(getSqlSession(), FETCH_ALL_EMPRESAS, paramMap, response);');
      memo1.Lines.Add('');
      memo1.Lines.Add('Integer totalRows = (Integer)doQueryForObject(getSqlSession(),');
      memo1.Lines.Add('PAGINATION_TOTAL_ROWS, paramMap);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response.getResultsSetInfo().setTotalRowsAvailable(totalRows);');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('');
      memo1.Lines.Add('response.getResultsList().addAll(');
      memo1.Lines.Add('getSqlSession().selectList("'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Map.fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById", '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResponse generateFileCSV(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResponse response = new InternalResponse();');
      memo1.Lines.Add('');
      memo1.Lines.Add('preapreDataToWriteFile(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s());');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (GenerateFileCSV.generateCSVFile(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getFileName(), excelData))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('response.setStatus(Status.OperationSuccess);');
      memo1.Lines.Add('}');
      memo1.Lines.Add('else');
      memo1.Lines.Add('{');
      memo1.Lines.Add('response.setStatus(Status.ExceptionError);');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Request request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial(Request request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) {');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) {');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      Result := memo1;
end;

 function criarCodeIClasseDAC(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
 begin
        memo1.Lines.Clear;
        memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.dac;');
        memo1.Lines.Add('');
        memo1.Lines.Add('');
        memo1.Lines.Add('import com.sensus.common.model.request.Request;');
        memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
        memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* The Interface IActionDAC.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @author - QAT Brazil.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;');
        memo1.Lines.Add('{');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Update '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Delete '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
        memo1.Lines.Add('* @return the inquiry '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch '+Txt+' by id.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
        memo1.Lines.Add('* @return the internal results response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Generate file csv.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+Txt+' request');
        memo1.Lines.Add('* @return the inquiry '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResponse generateFileCSV(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+' types.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param request the request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Request request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+' filial.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param request the request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial(Request request);');
        memo1.Lines.Add('');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
        memo1.Lines.Add('}');
        memo1.Lines.Add('');
        memo1.Lines.Add('');
        Result := memo1;
 end;

function criarCodeIClasseBCLImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('package com.sensus.mlc.'+lowerCase(TxT)+'.bcl.impl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCActionUtil.createMessageInfoNone;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCActionUtil.createMessageWarningOther;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCActionUtil.generateDescription;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createInquiryLightRequest;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessItemWithFailure;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessRequest;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.generateProcess;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCPropertiesExtractorUtil.extractLightId;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import java.util.ArrayList;');
      memo1.Lines.Add('import java.util.Arrays;');
      memo1.Lines.Add('import java.util.HashMap;');
      memo1.Lines.Add('import java.util.List;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.apache.commons.lang3.math.NumberUtils;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl.');
      memo1.Lines.Add(' *');
      memo1.Lines.Add(' * @author Washington  ');
      memo1.Lines.Add(' *  ');
      memo1.Lines.Add(' */ ');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL    ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The lc help. */ ');
      memo1.Lines.Add('	private LCHelp lcHelp; // injected by Spring through setter ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The '+lowerCase(TxT)+' dac. */ ');
      memo1.Lines.Add('	private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+lowerCase(TxT)+'DAC;'); // injected by Spring through setter
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The tag bcl. */    ');
      memo1.Lines.Add('	private ITagBCL tagBCL; // injected by Spring through setter  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The smart point accessor bcl. */    ');
      memo1.Lines.Add('	private ISmartPointAccessorBCL smartPointAccessorBCL; // injected by Spring through setter  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The smart point updater bcl. */    ');
      memo1.Lines.Add('	private ISmartPointUpdaterBCL smartPointUpdaterBCL; // injected by Spring through setter   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The process bcl. */  ');
      memo1.Lines.Add('	private IProcessBCL processBCL;  // injected by Spring through setter ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant MAX_'+UpperCase(TxT)+'_PER_LIGHT. */  ');
      memo1.Lines.Add('	private static final Integer MAX_'+UpperCase(TxT)+'_PER_LIGHT = 5;');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant MAX_'+UpperCase(TxT)+'_FAILURE. */  ');
      memo1.Lines.Add('	private static final String MAX_'+UpperCase(TxT)+'_FAILURE = "sensus.mlc.mlc_action.add_smp_to_grp.already_in_max_'+lowerCase(TxT)+'s";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant MAX_'+UpperCase(TxT)+'_FAILURE. */  ');
      memo1.Lines.Add('	private static final String LIGHT_DEACTIVATED = "sensus.mlc.mlc_action.add_smp_to_grp.light_deactivated";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant LIGHT_ALREADY_IN_'+UpperCase(TxT)+'. */ ');
      memo1.Lines.Add('	private static final String LIGHT_ALREADY_IN_'+UpperCase(TxT)+' = "sensus.mlc.mlc_action.add_smp_to_grp.already.exist";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant AUTO_'+UpperCase(TxT)+'_REMOVED. */  ');
      memo1.Lines.Add('	private static final String AUTO_'+UpperCase(TxT)+'_REMOVED = "sensus.mlc.tagvalidator.auto'+lowerCase(TxT)+'.removed";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant '+UpperCase(TxT)+'_REMOVED. */      ');
      memo1.Lines.Add('	private static final String '+UpperCase(TxT)+'_REMOVED = "sensus.mlc.'+lowerCase(TxT)+'bcfimpl.mlc'+lowerCase(TxT)+'deleted";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant LIGHT_NOT_IN_THE_'+UpperCase(TxT)+'. */  ');
      memo1.Lines.Add('	private static final String LIGHT_NOT_IN_THE_'+UpperCase(TxT)+' = "sensus.mlc.mlc_action.add_smp_to_grp.not_in_'+lowerCase(TxT)+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant PROCESS_RUNNING. */ ');
      memo1.Lines.Add('	private static final String PROCESS_RUNNING = "sensus.mlc.'+lowerCase(TxT)+'bcfimpl.processrunning";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant ALREADY_IN_'+UpperCase(TxT)+'. */   ');
      memo1.Lines.Add('	private static final String ALREADY_IN_'+UpperCase(TxT)+' = "alreadIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant MAX_'+UpperCase(TxT)+'. */  ');
      memo1.Lines.Add('	private static final String MAX_'+UpperCase(TxT)+' = "max'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant NO_LIGHTS_IN_'+UpperCase(TxT)+'. */   ');
      memo1.Lines.Add('	private static final String NO_LIGHTS_IN_'+UpperCase(TxT)+' = "sensus.mlc.mlc_action.light_status.no.lights_in_'+lowerCase(TxT)+'s";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+'. */   ');
      memo1.Lines.Add('	private static final String DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+' = "sensus.mlc.mlc_action.add_smp_to_grp";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+'_BY_POLE_ID. */ ');
      memo1.Lines.Add('	private static final String DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+'_BY_POLE_ID =  ');
      memo1.Lines.Add('			"sensus.mlc.mlc_action.add_smp_to_grp_by_poleid";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The mlc gateway ws. */  ');
      memo1.Lines.Add('	private MlcServerClient mlcGatewayWs;');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant SMARTPOINT_BCL_BEAN. */  ');
      memo1.Lines.Add('	private static final String SMARTPOINT_ACCESSOR_BCL_BEAN = "smartPointAccessorBCLTarget";');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**   ');
      memo1.Lines.Add('	 * Gets the lc help. ');
      memo1.Lines.Add('	 *             ');
      memo1.Lines.Add('	 * @return the lc help  ');
      memo1.Lines.Add('	 */                    ');
      memo1.Lines.Add('	public LCHelp getLcHelp()  ');
      memo1.Lines.Add('	{                         ');
      memo1.Lines.Add('		return this.lcHelp;');
      memo1.Lines.Add('	}    ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**     ');
      memo1.Lines.Add('	 * Sets the lc help.     ');
      memo1.Lines.Add('	 *    ');
      memo1.Lines.Add('	 * @param lcHelp the new lc help   ');
      memo1.Lines.Add('	 */                                 ');
      memo1.Lines.Add('	public void setLcHelp(LCHelp lcHelp)  ');
      memo1.Lines.Add('	{                                   ');
      memo1.Lines.Add('		this.lcHelp = lcHelp;');
      memo1.Lines.Add('	}                            ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**                     ');
      memo1.Lines.Add('	 * Gets the tag bcl.       ');
      memo1.Lines.Add('	 *                        ');
      memo1.Lines.Add('	 * @return the tag bcl     ');
      memo1.Lines.Add('	 */                        ');
      memo1.Lines.Add('	public ITagBCL getTagBCL()     ');
      memo1.Lines.Add('	{                  ');
      memo1.Lines.Add('		return this.tagBCL;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Sets the tag bcl.');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @param tagBCL the new tag bcl  ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public void setTagBCL(ITagBCL tagBCL) ');
      memo1.Lines.Add('	{    ');
      memo1.Lines.Add('		this.tagBCL = tagBCL;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Sets the '+lowerCase(TxT)+' dac.   ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @param '+lowerCase(TxT)+'DACParam the new '+lowerCase(TxT)+' dac  ');
      memo1.Lines.Add('	 */   ');
      memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+lowerCase(TxT)+'DACParam) ');
      memo1.Lines.Add('	{  ');
      memo1.Lines.Add('		this.'+lowerCase(TxT)+'DAC = '+lowerCase(TxT)+'DACParam;');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**   ');
      memo1.Lines.Add('	 * Gets the '+lowerCase(TxT)+' dac.  ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @return the '+lowerCase(TxT)+' dac ');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC() ');
      memo1.Lines.Add('	{    ');
      memo1.Lines.Add('		return this.'+lowerCase(TxT)+'DAC;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**    ');
      memo1.Lines.Add('	 * Gets the smart point accessor bcl. ');
      memo1.Lines.Add('	 *          ');
      memo1.Lines.Add('	 * @return the smart point accessor bcl  ');
      memo1.Lines.Add('	 */    ');
      memo1.Lines.Add('	public ISmartPointAccessorBCL getSmartPointAccessorBCL()  ');
      memo1.Lines.Add('	{         ');
      memo1.Lines.Add('		if (this.smartPointAccessorBCL == null)    ');
      memo1.Lines.Add('		{                                 ');
      memo1.Lines.Add('			this.smartPointAccessorBCL =    ');
      memo1.Lines.Add('					(ISmartPointAccessorBCL)SensusAppContext.getApplicationContext().getBean(  ');
      memo1.Lines.Add('							SMARTPOINT_ACCESSOR_BCL_BEAN);');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		return this.smartPointAccessorBCL;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**   ');
      memo1.Lines.Add('	 * Sets the smart point accessor bcl. ');
      memo1.Lines.Add('	 *                            ');
      memo1.Lines.Add('	 * @param smartPointAccessorBCL the new smart point accessor bcl ');
      memo1.Lines.Add('	 */                                                   ');
      memo1.Lines.Add('	public void setSmartPointAccessorBCL(ISmartPointAccessorBCL smartPointAccessorBCL) ');
      memo1.Lines.Add('	{                                                          ');
      memo1.Lines.Add('		this.smartPointAccessorBCL = smartPointAccessorBCL;');
      memo1.Lines.Add('	}                                                     ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**     ');
      memo1.Lines.Add('	 * Gets the smart point updater bcl.   ');
      memo1.Lines.Add('	 *                                      ');
      memo1.Lines.Add('	 * @return the smart point updater bcl   ');
      memo1.Lines.Add('	 */                                      ');
      memo1.Lines.Add('	public ISmartPointUpdaterBCL getSmartPointUpdaterBCL()  ');
      memo1.Lines.Add('	{                              ');
      memo1.Lines.Add('		return this.smartPointUpdaterBCL;');
      memo1.Lines.Add('	}     ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**    ');
      memo1.Lines.Add('	 * Sets the smart point updater bcl.                              ');
      memo1.Lines.Add('	 *                                                                ');
      memo1.Lines.Add('	 * @param smartPointUpdaterBCL the new smart point updater bcl    ');
      memo1.Lines.Add('	 */                                                               ');
      memo1.Lines.Add('	public void setSmartPointUpdaterBCL(ISmartPointUpdaterBCL smartPointUpdaterBCL)  ');
      memo1.Lines.Add('	{   ');
      memo1.Lines.Add('		this.smartPointUpdaterBCL = smartPointUpdaterBCL;');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Gets the process bcl.  ');
      memo1.Lines.Add('	 *                      ');
      memo1.Lines.Add('	 * @return the process bcl ');
      memo1.Lines.Add('	 */                        ');
      memo1.Lines.Add('	public IProcessBCL getProcessBCL() ');
      memo1.Lines.Add('	{                             ');
      memo1.Lines.Add('		return this.processBCL;');
      memo1.Lines.Add('	}                       ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**         ');
      memo1.Lines.Add('	 * Sets the process bcl.  ');
      memo1.Lines.Add('	 *           ');
      memo1.Lines.Add('	 * @param processBCL the new process bcl   ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public void setProcessBCL(IProcessBCL processBCL) ');
      memo1.Lines.Add('	{   ');
      memo1.Lines.Add('		this.processBCL = processBCL;');
      memo1.Lines.Add('	}   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**   ');
      memo1.Lines.Add('	 * Sets the mlc gateway ws.     ');
      memo1.Lines.Add('	 *       ');
      memo1.Lines.Add('	 * @param mlcGatewayWs the new mlc gateway ws     ');
      memo1.Lines.Add('	 */                                     ');
      memo1.Lines.Add('	public void setMlcGatewayWs(MlcServerClient mlcGatewayWs)    ');
      memo1.Lines.Add('	{                          ');
      memo1.Lines.Add('		this.mlcGatewayWs = mlcGatewayWs;');
      memo1.Lines.Add('	}                 ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**      ');
      memo1.Lines.Add('	 * Gets the mlc gateway ws.   ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @return the mlc gateway ws   ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public MlcServerClient getMlcGatewayWs() ');
      memo1.Lines.Add('	{                                ');
      memo1.Lines.Add('		return this.mlcGatewayWs;');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/* ');
      memo1.Lines.Add('	 * (non-Javadoc)    ');
      memo1.Lines.Add('	 * @see com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+lowerCase(TxT)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)   ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	@Override   ');
      memo1.Lines.Add('	public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request) ');
      memo1.Lines.Add('	{  ');
      memo1.Lines.Add('		// build a list of '+lowerCase(TxT)+'s based on the user selection - Select All requirement ');
      memo1.Lines.Add('		List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+lowerCase(TxT)+'List = fetchSelected'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request request = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+lowerCase(TxT)+'Request.getUserContext());');
      memo1.Lines.Add('		InternalResponse response = new InternalResponse();');
      memo1.Lines.Add('');
      memo1.Lines.Add('		for ('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+lowerCase(TxT)+' : '+lowerCase(TxT)+'List)  ');
      memo1.Lines.Add('		{    ');
      memo1.Lines.Add('			request.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+');');
      memo1.Lines.Add('			if (!get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchCanDelete(request))');
      memo1.Lines.Add('			{  ');
      memo1.Lines.Add('				// There are Processes running, return with an error   ');
      memo1.Lines.Add('				response.setStatus(Status.ValidationError);');
      memo1.Lines.Add('				response.addMessage(PROCESS_RUNNING, MessageSeverity.Info, MessageLevel.None, ');
      memo1.Lines.Add('						new Object[] {'+lowerCase(TxT)+'.getName()});');
      memo1.Lines.Add('				continue;');
      memo1.Lines.Add('			}     ');
      memo1.Lines.Add('			'+lowerCase(TxT)+'Request.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+');');
      memo1.Lines.Add('');
      memo1.Lines.Add('			response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('			if (response.getStatus().equals(Status.OperationSuccess))    ');
      memo1.Lines.Add('			{            ');
      memo1.Lines.Add('				response.addMessage('+UpperCase(TxT)+'_REMOVED, MessageSeverity.Info, MessageLevel.None,  ');
      memo1.Lines.Add('						new Object[] {'+lowerCase(TxT)+'.getName()});');
      memo1.Lines.Add('');
      memo1.Lines.Add('				removeTagFrom'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+'Request.getUserContext(), response, '+lowerCase(TxT)+'.getName());');
      memo1.Lines.Add('			}          ');
      memo1.Lines.Add('');
      memo1.Lines.Add('			// create a Process for this action '+lowerCase(TxT)+'      ');
      memo1.Lines.Add('			InternalResponse '+lowerCase(TxT)+'Process = insertProcess('+lowerCase(TxT)+'Request, LCActionTypeEnum.DEL_GRP);');
      memo1.Lines.Add('			response.addMessages('+lowerCase(TxT)+'Process.getMessageInfoList());');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/*  ');
      memo1.Lines.Add('	 * (non-Javadoc)  ');
      memo1.Lines.Add('	 * @see com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+lowerCase(TxT)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)    ');
      memo1.Lines.Add('	 */   ');
      memo1.Lines.Add('	@Override    ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request) ');
      memo1.Lines.Add('	{   ');
      memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (!response.isInError())  ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			// create a Process for the created '+lowerCase(TxT)+' ');
      memo1.Lines.Add('			InternalResponse processResponse = insertProcess('+lowerCase(TxT)+'Request, LCActionTypeEnum.INSERT_'+UpperCase(TxT)+');');
      memo1.Lines.Add('			response.addMessages(processResponse.getMessageInfoList());');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	}   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/*    ');
      memo1.Lines.Add('	 * (non-Javadoc)  ');
      memo1.Lines.Add('	 * @see com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+lowerCase(TxT)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)  ');
      memo1.Lines.Add('	 */    ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public InternalResponse update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request)   ');
      memo1.Lines.Add('	{  ');
      memo1.Lines.Add('		InternalResponse response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (!response.isInError()) ');
      memo1.Lines.Add('		{    ');
      memo1.Lines.Add('			InternalResponse processResponse = insertProcess('+lowerCase(TxT)+'Request, LCActionTypeEnum.UPDATE_'+UpperCase(TxT)+');');
      memo1.Lines.Add('');
      memo1.Lines.Add('			response.addMessages(processResponse.getMessageInfoList());');
      memo1.Lines.Add('		}     ');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('	}   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/*  ');
      memo1.Lines.Add('	 * (non-Javadoc)   ');
      memo1.Lines.Add('	 * @see    ');
      memo1.Lines.Add('	 * com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.mlc.base.model.request.InquiryPaginationRequest)  ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(InquiryPaginationRequest inquiryPaginationRequest)  ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(inquiryPaginationRequest);');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/*  ');
      memo1.Lines.Add('	 * (non-Javadoc)  ');
      memo1.Lines.Add('	 * @see com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById(com.sensus.mlc.'+lowerCase(TxT)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)     ');
      memo1.Lines.Add('	 */   ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request) ');
      memo1.Lines.Add('	{     ');
      memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/*  ');
      memo1.Lines.Add('	 * (non-Javadoc)  ');
      memo1.Lines.Add('	 * @see com.sensus.mlc.'+lowerCase(TxT)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByIdList(com.sensus.mlc.'+lowerCase(TxT)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)  ');
      memo1.Lines.Add('	 */   ');
      memo1.Lines.Add('	@Override   ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByIdList('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request) ');
      memo1.Lines.Add('	{');
      memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByIdList('+lowerCase(TxT)+'Request);');
      memo1.Lines.Add('	}   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	private InternalResultsResponse<Process> insertProcess('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request, LCActionTypeEnum lcActionType)   ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		return insertProcess('+lowerCase(TxT)+'Request,   ');
      memo1.Lines.Add('				lcActionType,  ');
      memo1.Lines.Add('				NumberUtils.INTEGER_ZERO,  ');
      memo1.Lines.Add('				new ArrayList<Light>(),   ');
      memo1.Lines.Add('				new ArrayList<Light>(),    ');
      memo1.Lines.Add('				new ArrayList<Light>());');
      memo1.Lines.Add('	}    ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Insert process.   ');
      memo1.Lines.Add('	 *    ');
      memo1.Lines.Add('	 * @param '+lowerCase(TxT)+'Request the '+lowerCase(TxT)+' request   ');
      memo1.Lines.Add('	 * @param lcActionType the lc action type  ');
      memo1.Lines.Add('	 * @param lightAmount the light amount ');
      memo1.Lines.Add('	 * @param lightsAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' the count already in '+lowerCase(TxT)+' ');
      memo1.Lines.Add('	 * @param lightsWithMax'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Allowed the count max per light ');
      memo1.Lines.Add('	 * @return the internal results response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	private InternalResultsResponse<Process> insertProcess('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowerCase(TxT)+'Request, LCActionTypeEnum lcActionType,  ');
      memo1.Lines.Add('			Integer lightAmount, List<Light> lightsAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', List<Light> lightsWithMax'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Allowed,  ');
      memo1.Lines.Add('			List<Light> deactivatedLights)  ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+lowerCase(TxT)+' = '+lowerCase(TxT)+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'();');
      memo1.Lines.Add('		List<LCActionParameter> actionParameters = new ArrayList<LCActionParameter>();');
      memo1.Lines.Add('		actionParameters.add(new LCActionParameter(PropertyEnum.'+UpperCase(TxT)+'_ID, String.valueOf('+lowerCase(TxT)+'.getId())));');
      memo1.Lines.Add('		actionParameters.add(new LCActionParameter(PropertyEnum.'+UpperCase(TxT)+'_NAME, '+lowerCase(TxT)+'.getName()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('		LCAction action = new LCAction(lcActionType);');
      memo1.Lines.Add('		action.setActionParameters(actionParameters);');
      memo1.Lines.Add('		Process process = generateProcess(false, action, lightAmount);');
      memo1.Lines.Add('		process.setIsProcessComplete(true);');
      memo1.Lines.Add('		process.setEndTime(LCDateUtil.getNewDateUTC());');
      memo1.Lines.Add('		InternalResultsResponse<Process> processResponse = new InternalResultsResponse<Process>();');
      memo1.Lines.Add('		setProcessDescription(    ');
      memo1.Lines.Add('				process,   ');
      memo1.Lines.Add('				'+lowerCase(TxT)+'.getName(),   ');
      memo1.Lines.Add('				lightAmount,  ');
      memo1.Lines.Add('				lightsAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.size(),   ');
      memo1.Lines.Add('				lightsWithMax'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Allowed.size(),  ');
      memo1.Lines.Add('				deactivatedLights.size(),  ');
      memo1.Lines.Add('				processResponse);');
      memo1.Lines.Add('');
      memo1.Lines.Add('		ProcessRequest processRequest = createProcessRequest('+lowerCase(TxT)+'Request, process);');
      memo1.Lines.Add('		processRequest.setProcessItemFailureList( ');
      memo1.Lines.Add('				createProcessItemWithFailure(   ');
      memo1.Lines.Add('						deactivatedLights,        ');
      memo1.Lines.Add('						ProcessItemStatusEnum.MLCFAILURE,    ');
      memo1.Lines.Add('						ProcessStatusReasonEnum.LIGHT_DEACTIVATED));');
      memo1.Lines.Add('');
      memo1.Lines.Add('		processRequest.getProcessItemFailureList().addAll(    ');
      memo1.Lines.Add('				createProcessItemWithFailure(       ');
      memo1.Lines.Add('						lightsAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+',   ');
      memo1.Lines.Add('						ProcessItemStatusEnum.MLCFAILURE, ');
      memo1.Lines.Add('						ProcessStatusReasonEnum.LIGHT_BELONG_'+UpperCase(TxT)+'));');
      memo1.Lines.Add('');
      memo1.Lines.Add('		processRequest.getProcessItemFailureList().addAll(    ');
      memo1.Lines.Add('				createProcessItemWithFailure(      ');
      memo1.Lines.Add('						lightsWithMax'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Allowed, ');
      memo1.Lines.Add('						ProcessItemStatusEnum.MLCFAILURE,          ');
      memo1.Lines.Add('						ProcessStatusReasonEnum.LIGHT_WITH_MAX_'+UpperCase(TxT)+'_ALLOWED));');
      memo1.Lines.Add('');
      memo1.Lines.Add('		InternalResultsResponse<Process> internalResponse = new InternalResultsResponse<Process>();');
      memo1.Lines.Add('		internalResponse = getProcessBCL().insertProcess(processRequest);');
      memo1.Lines.Add('		internalResponse.setStatus(processResponse.getStatus());');
      memo1.Lines.Add('		internalResponse.addMessages(processResponse.getMessageInfoList());');
      memo1.Lines.Add('		return internalResponse;');
      memo1.Lines.Add('	}      ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**   ');
      memo1.Lines.Add('	 * Insert '+lowerCase(TxT)+' process. ');
      memo1.Lines.Add('	 *    ');
      memo1.Lines.Add('	 * @param '+lowerCase(TxT)+' the '+lowerCase(TxT)+' ');
      memo1.Lines.Add('	 * @param userContext the user context   ');
      memo1.Lines.Add('	 * @param tenant the tenant  ');
      memo1.Lines.Add('	 * @param action'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' the action '+lowerCase(TxT)+' ');
      memo1.Lines.Add('	 * @param countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' the count already in '+lowerCase(TxT)+' (in order to give a specific error message according  ');
      memo1.Lines.Add('	 *            Business Requirement)    ');
      memo1.Lines.Add('	 * @param countMaxPerLight the count max per light (in order to give a specific error message according Business   ');
      memo1.Lines.Add('	 *            Requirement)    ');
      memo1.Lines.Add('	 * @param lightList the light list ');
      memo1.Lines.Add('	 * @return the internal response  ');
      memo1.Lines.Add('	 */   ');
      memo1.Lines.Add('	private InternalResponse insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Process('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+lowerCase(TxT)+', UserContext userContext, Tenant tenant,');
      memo1.Lines.Add('			LCActionTypeEnum action'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', Integer countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', Integer countMaxPerLight, List<Light> lightList)  ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		List<LCActionParameter> actionParameters = new ArrayList<LCActionParameter>();');
      memo1.Lines.Add('		LCActionParameter actionParameter'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Id =   ');
      memo1.Lines.Add('				new LCActionParameter(PropertyEnum.'+UpperCase(TxT)+'_ID, String.valueOf('+lowerCase(TxT)+'.getId()));');
      memo1.Lines.Add('		LCActionParameter actionParameter'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Name =     ');
      memo1.Lines.Add('				new LCActionParameter(PropertyEnum.'+UpperCase(TxT)+'_NAME, '+lowerCase(TxT)+'.getName());');
      memo1.Lines.Add('		LCAction action = new LCAction(action'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+');');
      memo1.Lines.Add('');
      memo1.Lines.Add('		actionParameters.add(actionParameter'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Id);');
      memo1.Lines.Add('		actionParameters.add(actionParameter'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Name);');
      memo1.Lines.Add('		action.setActionParameters(actionParameters);');
      memo1.Lines.Add('');
      memo1.Lines.Add('		Process process = getLcHelp().generateProcess(null, action, lightList);');
      memo1.Lines.Add('		process.setIsProcessComplete(true);');
      memo1.Lines.Add('		process.setIsMonitoredInstance(false);');
      memo1.Lines.Add('		process.setEndTime(LCDateUtil.getNewDateUTC());');
      memo1.Lines.Add('');
      memo1.Lines.Add('		ProcessRequest processRequest = new ProcessRequest(userContext);');
      memo1.Lines.Add('		processRequest.setProcess(process);');
      memo1.Lines.Add('		processRequest.setProcessItemStatusEnum(ProcessItemStatusEnum.SUCCESS);');
      memo1.Lines.Add('');
      memo1.Lines.Add('		Integer lightAmount = 0;');
      memo1.Lines.Add('		if (!ValidationUtil.isNullOrEmpty(lightList))   ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			lightAmount = lightList.size();');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		setProcessDescription(process, '+lowerCase(TxT)+'.getName(), lightAmount, countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', countMaxPerLight);');
      memo1.Lines.Add('		return getProcessBCL().insertProcess(processRequest);');
      memo1.Lines.Add('	}');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**');
      memo1.Lines.Add('	 * Sets the process description.   ');
      memo1.Lines.Add('	 *      ');
      memo1.Lines.Add('	 * @param process the process  ');
      memo1.Lines.Add('	 * @param '+lowerCase(TxT)+'Name the '+lowerCase(TxT)+' name   ');
      memo1.Lines.Add('	 * @param lightAmount the light amount   ');
      memo1.Lines.Add('	 * @param countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' the count already in '+lowerCase(TxT)+' ');
      memo1.Lines.Add('	 * @param countMaxPerLight the count max per light ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	private void setProcessDescription(    ');
      memo1.Lines.Add('			Process process,   ');
      memo1.Lines.Add('			String '+lowerCase(TxT)+'Name,  ');
      memo1.Lines.Add('			Integer lightAmount,  ');
      memo1.Lines.Add('			int countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', ');
      memo1.Lines.Add('			int countMaxPerLight)  ');
      memo1.Lines.Add('	{    ');
      memo1.Lines.Add('		setProcessDescription(     ');
      memo1.Lines.Add('				process,      ');
      memo1.Lines.Add('				'+lowerCase(TxT)+'Name,  ');
      memo1.Lines.Add('				lightAmount,    ');
      memo1.Lines.Add('				countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+', ');
      memo1.Lines.Add('				countMaxPerLight,    ');
      memo1.Lines.Add('				NumberUtils.INTEGER_ZERO,    ');
      memo1.Lines.Add('				new InternalResultsResponse<Process>());');
      memo1.Lines.Add('	}   ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Sets the process description.  ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param process the process ');
      memo1.Lines.Add('	 * @param '+lowerCase(TxT)+'Name the '+lowerCase(TxT)+' name ');
      memo1.Lines.Add('	 * @param lightAmount the light amount   ');
      memo1.Lines.Add('	 * @param countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' the count already in '+lowerCase(TxT)+' ');
      memo1.Lines.Add('	 * @param countMaxPerLight the count max per light    ');
      memo1.Lines.Add('	 * @param processResponse the process response     ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	private void setProcessDescription(  ');
      memo1.Lines.Add('			Process process,');
      memo1.Lines.Add('			String '+lowerCase(TxT)+'Name,  ');
      memo1.Lines.Add('			Integer lightAmount,    ');
      memo1.Lines.Add('			int countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+',');
      memo1.Lines.Add('			int countMaxPerLight,');
      memo1.Lines.Add('			int countDeactivated,');
      memo1.Lines.Add('			InternalResultsResponse<Process> processResponse)');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (ValidationUtil.isNull(process)) ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			return;');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (process.getLcAction().getActionType() != LCActionTypeEnum.ADD_SMP_TO_GRP)');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			process.setDescription(generateDescription(process, lightAmount));');
      memo1.Lines.Add('			return;');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		// create process description based on the max count per light ');
      memo1.Lines.Add('		if (lightAmount > 1)  ');
      memo1.Lines.Add('		{                ');
      memo1.Lines.Add('			process.setDescription( ');
      memo1.Lines.Add('					createMessageWarningOther( ');
      memo1.Lines.Add('							DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+', ');
      memo1.Lines.Add('							lightAmount,   ');
      memo1.Lines.Add('							'+lowerCase(TxT)+'Name).getText());');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if ((lightAmount == 1) && (countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' == 0) && (countMaxPerLight == 0) && (countDeactivated == 0)) ');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('			process.setDescription(    ');
      memo1.Lines.Add('					createMessageWarningOther( ');
      memo1.Lines.Add('							DESCRIPTION_LABEL_KEY_ADD_SMP_TO_'+UpperCase(TxT)+'_BY_POLE_ID,  ');
      memo1.Lines.Add('							'+lowerCase(TxT)+'Name).getText());');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' > 0)  ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			Message message = createMessageInfoNone(LIGHT_ALREADY_IN_'+UpperCase(TxT)+', '+lowerCase(TxT)+'Name);');
      memo1.Lines.Add('			process.setDescription(process.getDescription() + " - [" + countAlreadyIn'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' + "] " + message.getText());');
      memo1.Lines.Add('			addMessageInfoIntoProcessResponse(lightAmount, processResponse, LIGHT_ALREADY_IN_'+UpperCase(TxT)+', '+lowerCase(TxT)+'Name);');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (countMaxPerLight > 0)  ');
      memo1.Lines.Add('		{                ');
      memo1.Lines.Add('			Message message = createMessageInfoNone(MAX_'+UpperCase(TxT)+'_FAILURE, countMaxPerLight);');
      memo1.Lines.Add('			process.setDescription(process.getDescription() + " - " + message.getText());');
      memo1.Lines.Add('			addMessageInfoIntoProcessResponse(lightAmount, processResponse, MAX_'+UpperCase(TxT)+'_FAILURE, countMaxPerLight);');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		if (countDeactivated > 0) ');
      memo1.Lines.Add('		{   ');
      memo1.Lines.Add('			addMessageInfoIntoProcessResponse(lightAmount, processResponse, LIGHT_DEACTIVATED);');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Adds the message info into process response. ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @param lightAmount the light amount  ');
      memo1.Lines.Add('	 * @param processResponse the process response ');
      memo1.Lines.Add('	 * @param message the message        ');
      memo1.Lines.Add('	 * @param args the args  ');
      memo1.Lines.Add('	 */    ');
      memo1.Lines.Add('	public void addMessageInfoIntoProcessResponse( ');
      memo1.Lines.Add('			Integer lightAmount, ');
      memo1.Lines.Add('			InternalResultsResponse<Process> processResponse,  ');
      memo1.Lines.Add('			String message, ');
      memo1.Lines.Add('			Object... args)  ');
      memo1.Lines.Add('	{                ');
      memo1.Lines.Add('		if (ValidationUtil.isNullOrZero(lightAmount) || (lightAmount > 1)) ');
      memo1.Lines.Add('		{       ');
      memo1.Lines.Add('			return;');
      memo1.Lines.Add('		}    ');
      memo1.Lines.Add('');
      memo1.Lines.Add('		processResponse.addMessage(message, MessageSeverity.None, MessageLevel.None, args);');
      memo1.Lines.Add('		processResponse.setStatus(Status.ExceptionError);');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchSelected'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+lowercase(Txt)+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('	Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request();');
      memo1.Lines.Add('	inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.setPageSize(0);');
      memo1.Lines.Add('	inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.setSelectionPaginationIds(dominiosRequest.getSelectionPaginationIds());');
      memo1.Lines.Add('	inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.setPaginationAllSelected(dominiosRequest.getPaginationAllSelected());');
      memo1.Lines.Add('	inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.setTenant(dominiosRequest.getTenant());');
      memo1.Lines.Add('');
      memo1.Lines.Add('	return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request).getResultsList();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('}  ');
	    memo1.Lines.Add(' ');
	    memo1.Lines.Add(' ');
      memo1.Lines.Add(' ');
      Result := memo1;
end;




function criarCodeIClasseBCL(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse; ');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('// TODO: Auto-generated Javadoc ');
      memo1.Lines.Add('/**');
      memo1.Lines.Add(' * The Interface IActionBCL.');
      memo1.Lines.Add(' * ');
      memo1.Lines.Add(' * @author - QAT Brazil. ');
      memo1.Lines.Add(' * ');
      memo1.Lines.Add(' */ ');
      memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Insert '+Txt+'. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request  ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Update '+Txt+'. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Delete '+Txt+'. ');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+'.');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param inquiry'+Txt+'Request the inquiry'+Txt+' request ');
      memo1.Lines.Add('	 * @return the inquiry '+Txt+' response ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch '+Txt+' by id. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
      memo1.Lines.Add('	 * @return the internal results response   ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+' types. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param request the request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request);  ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+' filial. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param request the request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('} ');
      Result := memo1;
end;
function criarCodeClasseBCFImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcf.impl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.slf4j.Logger;');
      memo1.Lines.Add('import org.slf4j.LoggerFactory;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.common.util.SensusInterfaceUtil;');
      memo1.Lines.Add('import com.sensus.mlc.base.model.MLCPersistanceActionEnum;');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCHelp;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.process.model.response.ProcessResponse;');
      memo1.Lines.Add('import com.sensus.mlc.tag.bcf.impl.'+Txt+'BCFImpl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant NAME_LENGTH. */');
      memo1.Lines.Add('	private static final Integer NAME_LENGTH = 255;');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant SENSUS_EPM_ACTIONVALIDATOR_NAME_INVALID. */ ');
      memo1.Lines.Add('	private static final String SENSUS_EPM_ACTIONVALIDATOR_NAME_INVALID = ');
      memo1.Lines.Add('			"sensus.epm.actionvalidator.name.invalid"; ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant DEFAULT_GROUP_BCF_EXCEPTION_MSG. */ ');
      memo1.Lines.Add('	private static final String DEFAULT_EMPRESA_BCF_EXCEPTION_MSG = "sensus.mlc.groupbcfimpl.defaultexception"; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant DEFAULT_GROUP_BCL_EXCEPTION_MSG. */ ');
      memo1.Lines.Add('	private static final String DEFAULT_EMPRESA_BCL_EXCEPTION_MSG = "sensus.mlc.groupbclimpl.defaultexception";');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant LOG. */');
      memo1.Lines.Add('	private static final Logger LOG = LoggerFactory.getLogger('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFImpl.class); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL '+Txt+'BCL; // injected by Spring through setter');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('	{');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('     ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, new Object[] {MLCPersistanceActionEnum.INSERT}))');
      memo1.Lines.Add('			{');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList()); ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	}');
      memo1.Lines.Add('');
      memo1.Lines.Add('	@Override');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('	{');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.UPDATE)) ');
      memo1.Lines.Add('			{  ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCL_EXCEPTION_MSG);');
      memo1.Lines.Add('			}');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response;  ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('	{  ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('		try  ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.DELETE)) ');
      memo1.Lines.Add('			{  ');
      memo1.Lines.Add('				InternalResponse internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request); ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}  ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		catch (Exception ex)');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse =  ');
      memo1.Lines.Add('						get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				response.setResultsSetInfo(internalResponse.getResultsSetInfo());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('		catch (Exception ex)');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.FETCH_BY_ID)) ');
      memo1.Lines.Add('			{ ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			} ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		catch (Exception ex)  ');
      memo1.Lines.Add('		{      ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);  ');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('		return response;  ');
      memo1.Lines.Add('	}');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) { ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{    ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, MLCPersistanceActionEnum.FETCH)) ');
      memo1.Lines.Add('			{ ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse =  ');
      memo1.Lines.Add('						get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+Txt+'Request);  ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());   ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}  ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL() ');
      memo1.Lines.Add('	{       ');
      memo1.Lines.Add('		return '+Txt+'BCL; ');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL '+Txt+'BCL) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		this.'+Txt+'BCL = '+Txt+'BCL; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('}  ');
      Result := memo1;
end;

function criarCodeIClasseBCF(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcf;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.process.model.response.ProcessResponse;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add(' * The Interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF.');
      memo1.Lines.Add(' *');
      memo1.Lines.Add(' * @author Washington.Costa');
      memo1.Lines.Add(' */');
      memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF ');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Insert '+Txt+'.');
      memo1.Lines.Add('	 *');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/**');
      memo1.Lines.Add('	 * Update '+Txt+'.');
      memo1.Lines.Add('	 *');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request');
      memo1.Lines.Add('	 * @return the '+Txt+' response');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Delete '+Txt+'.  ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Fetch all '+Txt+'. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' request   ');
      memo1.Lines.Add('	 * @return the inquiry '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch '+Txt+' by id. ');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('} ');
      Result := memo1;
end;

function criarCodeRequest(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Clear;
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.request;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.request.LightSelectionRequest;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends LightSelectionRequest');
       memo1.Lines.Add('{');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private Integer parentRetry;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'  '+LowerCase(Txt)+';');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeResponse(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Clear;
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.response;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.common.model.response.Response;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends Response');
       memo1.Lines.Add('{');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private Integer parentRetry;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+' ;');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeInquiryRequest(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Clear;
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.request;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.BaseSearch;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.request.InquiryPaginationRequest;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends InquiryPaginationRequest');
       memo1.Lines.Add('{');
       memo1.Lines.Add('    private BaseSearch baseSearch;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private String fileName;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    Integer processId;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+';');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeInquiryResponse(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Clear;
       memo1.Lines.Add('package com.sensus.mlc.'+lowerCase(Txt)+'.model.response;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.common.model.response.InquiryResponse');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends InquiryResponse');
       memo1.Lines.Add('{');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+lowerCase(Txt)+' ;');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
	     memo1.Lines.Add('    public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'() {');
       memo1.Lines.Add('      return '+Txt+';');
       memo1.Lines.Add('    }');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('    public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+Txt+') {');
       memo1.Lines.Add('        this.'+Txt+' = '+Txt+';');
       memo1.Lines.Add(     '}');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('    public String toString() {');
       memo1.Lines.Add('    return "Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response ['+Txt+'=" + '+Txt);
       memo1.Lines.Add('      + ", get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
       memo1.Lines.Add('    + "]";');
       memo1.Lines.Add('    }');
       memo1.Lines.Add('');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function gerarModelo(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
BEGIN
     try
         memo1.Lines.Clear;
         memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' extends SensusModel'); //escreve no arquivo e desce uma linha
         memo1.Lines.Add('{');
         CcDataset.First;
         while not CcDataset.Eof do
         begin
               if CcDataset.FieldByName('S/N').AsString = 'S'  then
                      memo1.Lines.Add('    private '+verificadorCode(CcDataset.FieldByName('Tipo').AsString)+' '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +';');
               CcDataset.Next;
         end;
          memo1.Lines.Add('}');
          Result := memo1;
     finally

     end;

END;


end.

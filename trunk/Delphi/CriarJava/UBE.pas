unit UBE;
interface
 uses   Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,  ExtCtrls,
  ComCtrls, DB, DBClient,stdctrls;

  function gerarModelo(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryResponse(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryRequest(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeResponse(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeRequest(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCF(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseBCFImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeIClasseBCL(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeIClasseBCLImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeIClasseDAC(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeIClasseDACImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeClasseXML(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
  function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;

implementation

uses BrvFuncoesXE;


function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
	 memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
	 memo1.Lines.Add('<!DOCTYPE configuration');
	 memo1.Lines.Add('PUBLIC "-//mybatis.org//DTD Config 3.0//EN"');
	 memo1.Lines.Add('"http://mybatis.org/dtd/mybatis-3-config.dtd">');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('<configuration>');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('<settings>');
	 memo1.Lines.Add('	<setting name="lazyLoadingEnabled" value="false" />');
	 memo1.Lines.Add('</settings>');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('<typeAliases>');
	 memo1.Lines.Add('	<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"  type="com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"/>');
	 memo1.Lines.Add('	<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request"  type="com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request"/>');
	 memo1.Lines.Add('	<typeAlias alias="Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" type="com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" />');
	 memo1.Lines.Add('	<typeAlias alias="Device" type="com.sensus.cbof.model.Device" />');
	 memo1.Lines.Add('	<typeAlias alias="Group" type="com.sensus.dm.common.group.model.Group" />');
	 memo1.Lines.Add('	<typeAlias alias="GroupRequest" type="com.sensus.dm.common.group.model.request.GroupRequest" />');
	 memo1.Lines.Add('	<typeAlias alias="InquiryGroupRequest" type="com.sensus.dm.common.group.model.request.InquiryGroupRequest" />');
	 memo1.Lines.Add('</typeAliases>');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('<mappers>');
	 memo1.Lines.Add('	<mapper resource="com/sensus/dm/common/'+LowerCase(Txt)+'/dac/mybatis/map/'+LowerCase(Txt)+'.xml"/>');
	 memo1.Lines.Add('	<mapper resource="com/sensus/dm/common/group/dac/mybatis/map/group.xml" />');
	 memo1.Lines.Add('</mappers>');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('</configuration>');

      Result := memo1;
end;
function criarCodeClasseXML(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
      memo1.Lines.Add('<!DOCTYPE mapper');
      memo1.Lines.Add('	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"');
      memo1.Lines.Add('	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">');
      memo1.Lines.Add('	');
      memo1.Lines.Add('<mapper namespace = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<resultMap id="listAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Results" type="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" >');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
                  if CcDataset.FieldByName('S/N').AsString = 'S'  then
      memo1.Lines.Add('		<result property="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" column="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" />');
      CcDataset.Next;
      end;
      memo1.Lines.Add('	</resultMap>');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<sql id="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms">');
      CcDataset.First;
            while not CcDataset.Eof do
            begin
                  if CcDataset.FieldByName('S/N').AsString = 'S'  then
      memo1.Lines.Add('     	'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',');
                 CcDataset.Next;
            end;
      memo1.Lines.Add('	</sql>');
      memo1.Lines.Add('	');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Insert '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('	<select id="insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="Map" resultType="int">');
      memo1.Lines.Add('		SELECT ins_'+LowerCase(Txt)+' (');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
                  if CcDataset.FieldByName('S/N').AsString = 'S'  then
      memo1.Lines.Add('		#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+UPPERCase(verificadorCodeBanco(CcDataset.FieldByName('TIPO').AsString))+'},');
      CcDataset.Next;
      end;
      memo1.Lines.Add(')');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Update '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('	<select id="update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="Map" resultType="int">');
      memo1.Lines.Add('		SELECT upd_'+LowerCase(Txt)+' (');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
                  if CcDataset.FieldByName('S/N').AsString = 'S'  then
      memo1.Lines.Add('		#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+UPPERCase(verificadorCodeBanco(CcDataset.FieldByName('TIPO').AsString))+'},');
      CcDataset.Next;
      end;
      memo1.Lines.Add(')');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Delete '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('	<select id="delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      memo1.Lines.Add('		SELECT del_'+LowerCase(Txt)+' (#{id})');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('	');
      memo1.Lines.Add('	<!-- Fetch All '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s -->');
      memo1.Lines.Add('	<select id="fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s" parameterType="Map" resultMap="listAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Results">');
      memo1.Lines.Add('	');
      memo1.Lines.Add('		SELECT  <include refid="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms"/>');
      memo1.Lines.Add('		  FROM '+LowerCase(Txt)+'');
      memo1.Lines.Add('	');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Pagination Total Rows -->');
      memo1.Lines.Add('	<select id="PaginationTotalRows" parameterType="Map" resultType="int">');
      memo1.Lines.Add('		SELECT count(1) ');
      memo1.Lines.Add('		  FROM (SELECT tenant_id ');
      memo1.Lines.Add('				  FROM '+LowerCase(Txt)+' ');
      memo1.Lines.Add('				 WHERE tenant_id = #{tenantId,jdbcType=INTEGER}) AS TAGPAGE');
      memo1.Lines.Add('	</select>	');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Fetch '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' By type -->');
      memo1.Lines.Add('	<select id="fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByType" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request"  resultMap="listAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Results" >');
      memo1.Lines.Add('		SELECT  <include refid="allCustomList'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columns"/>');
      memo1.Lines.Add('		  FROM '+LowerCase(Txt)+'');
      memo1.Lines.Add('		 WHERE name = #{'+LowerCase(Txt)+'.name,jdbcType=VARCHAR}');
      memo1.Lines.Add('		   AND tenant_id = #{tenant.id,jdbcType=INTEGER}');
      memo1.Lines.Add('	');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Fetch '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' By Id -->');
      memo1.Lines.Add('	<select id="fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultMap="listAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Results" >');
      memo1.Lines.Add('		SELECT <include refid="allCustomList'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columns"/>');
      memo1.Lines.Add('		  FROM '+LowerCase(Txt)+'');
      memo1.Lines.Add('		 WHERE '+LowerCase(Txt)+'_id = #{id,jdbcType=INTEGER};');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('');
      memo1.Lines.Add('	<!-- Fetch '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' By Id -->');
      memo1.Lines.Add('	<select id="fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameById" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultMap="listAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Results" >');
      memo1.Lines.Add('		SELECT <include refid="allCustomList'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columns"/>');
      memo1.Lines.Add('		  FROM '+LowerCase(Txt)+'');
      memo1.Lines.Add('		 WHERE '+LowerCase(Txt)+'_id = #{id,jdbcType=INTEGER};');
      memo1.Lines.Add('	</select>');
      memo1.Lines.Add('</mapper>');
      memo1.Lines.Add('');
      Result := memo1;
end;
function criarCodeIClasseDACImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.dac.mybatis;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import java.util.HashMap;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import org.mybatis.spring.support.SqlSessionDaoSupport;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import com.sensus.cbof.model.Device;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse.Status;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
	 memo1.Lines.Add('import com.sensus.common.util.SensusMyBatisDacHelper;');
	 memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.util.DMConvertUtil;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.schedule.model.request.ScheduleRequest;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('/**');
	 memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DACImpl.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' * @author Washington');
	 memo1.Lines.Add(' */');
	 memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DACImpl extends SqlSessionDaoSupport implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
	 memo1.Lines.Add('{');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// Symbols, characters and etc (not i18n).');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant '+UpperCase(Txt)+'_TYPE_VALUE. */');
	 memo1.Lines.Add('	private static final Integer '+UpperCase(Txt)+'_TYPE_VALUE = 1;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE2. */');
	 memo1.Lines.Add('	private static final Integer PARAMSIZE2 = 2;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE3. */');
	 memo1.Lines.Add('	private static final Integer PARAMSIZE3 = 3;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE4. */');
	 memo1.Lines.Add('	private static final Integer PARAMSIZE4 = 4;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE5. */');
	 memo1.Lines.Add('	private static final int PARAMSIZE5 = 5;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE6. */');
	 memo1.Lines.Add('	private static final Integer PARAMSIZE6 = 6;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PARAMSIZE10. */');
	 memo1.Lines.Add('	private static final Integer PARAMSIZE10 = 10;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// Not i18n messages/words.');
	 memo1.Lines.Add('	');
		CcDataset.First;
		while not CcDataset.Eof do
		begin
			if CcDataset.FieldByName('S/N').AsString = 'S'  then
			begin	
					memo1.Lines.Add('	 /** The Constant '+ UpperCase(CcDataset.FieldByName('Nome').AsString) +'. */');
					memo1.Lines.Add('    private static final String '+ UpperCase(CcDataset.FieldByName('Nome').AsString) +' = '+ lowerCase(CcDataset.FieldByName('Nome').AsString) +';');
			end;
		CcDataset.Next;
		end;
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// MyBatis mapping IDs.');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant '+UpperCase(Txt)+'_MAP. */');
	 memo1.Lines.Add('	private static final String '+UpperCase(Txt)+'_MAP = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Map.";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant DELETE_'+UpperCase(Txt)+'. */');
	 memo1.Lines.Add('	private static final String DELETE_'+UpperCase(Txt)+' = '+UpperCase(Txt)+'_MAP + "delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant FETCH_ALL_'+UpperCase(Txt)+'S. */');
	 memo1.Lines.Add('	private static final String FETCH_ALL_'+UpperCase(Txt)+'S = '+UpperCase(Txt)+'_MAP + "fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant FETCH_DEVICES_BY_'+UpperCase(Txt)+'S. */');
	 memo1.Lines.Add('	private static final String FETCH_DEVICES_BY_'+UpperCase(Txt)+'S = '+UpperCase(Txt)+'_MAP + "fetchDevicesByName";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant INSERT_'+UpperCase(Txt)+'. */');
	 memo1.Lines.Add('	private static final String INSERT_'+UpperCase(Txt)+' = '+UpperCase(Txt)+'_MAP + "insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PAGINATION_TOTAL_ROWS. */');
	 memo1.Lines.Add('	private static final String PAGINATION_TOTAL_ROWS = '+UpperCase(Txt)+'_MAP + "paginationTotalRows";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant UPDATE_'+UpperCase(Txt)+'. */');
	 memo1.Lines.Add('	private static final String UPDATE_'+UpperCase(Txt)+' = '+UpperCase(Txt)+'_MAP + "update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant FETCH_SCHEDULE_BY_ID. */');
	 memo1.Lines.Add('	private static final String FETCH_SCHEDULE_BY_ID = '+UpperCase(Txt)+'_MAP + "fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// Public interface:');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC#delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		HashMap<String, Object> paramMap = new HashMap<String, Object>(PARAMSIZE2);');
	 memo1.Lines.Add('		paramMap.put('+UpperCase(Txt)+'SET_ID, '+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getId());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		Integer result = (Integer)SensusMyBatisDacHelper.doQueryForObject(getSqlSession(), DELETE_'+UpperCase(Txt)+', paramMap);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResponse response = new InternalResponse();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (ValidationUtil.isNullOrZero(result))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			response.setStatus(InternalResponse.Status.NoRowsRemovedError);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC#insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		HashMap<String, Object> paramMap = new HashMap<String, Object>(PARAMSIZE10);');
	 memo1.Lines.Add('		');
	CcDataset.First;
	while not CcDataset.Eof do
	begin
		if CcDataset.FieldByName('S/N').AsString = 'S'  then
		begin	
			paramMap.put('+ UpperCase(CcDataset.FieldByName('Nome').AsString) +', groupRequest.getFirstGroup().getBrvFuncoesXE.PrimeiraMaiscula(Txt)+'());
		end;
	CcDataset.Next;
	end;
	 memo1.Lines.Add('		paramMap.put(CUSTOMER_ID, '+LowerCase(Txt)+'Request.getTenant().getKey()););
	 memo1.Lines.Add('		paramMap.put(INSERT_TYPE, '+UpperCase(Txt)+'););
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNull('+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getDeviceType())));
	 memo1.Lines.Add('		{);
	 memo1.Lines.Add('			paramMap.put(DEVICE_TYPE, '+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getDeviceType().getValue()););
	 memo1.Lines.Add('			paramMap.put(HAN_DEVICE_TYPE, '+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getHanDeviceTypeValue()););
	 memo1.Lines.Add('		});
	 memo1.Lines.Add(''););
	 memo1.Lines.Add('		Integer '+LowerCase(Txt)+'Id =);
	 memo1.Lines.Add('				(Integer)SensusMyBatisDacHelper.doQueryForObject(getSqlSession(), INSERT_'+UpperCase(Txt)+', paramMap););
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>(););
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNull('+LowerCase(Txt)+'Id)));
	 memo1.Lines.Add('		{);
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().setId('+LowerCase(Txt)+'Id););
	 memo1.Lines.Add('			response.addResult('+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()););
	 memo1.Lines.Add('			return response;);
	 memo1.Lines.Add('		});
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		response.setStatus(Status.NoRowsInsertedError););
	 memo1.Lines.Add('		return response;);
	 memo1.Lines.Add('	});
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*);
	 memo1.Lines.Add('	 * (non-Javadoc));
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC#update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request));
	 memo1.Lines.Add('	 */);
	 memo1.Lines.Add('	@Override);
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request));
	 memo1.Lines.Add('	{);
	 memo1.Lines.Add('		HashMap<String, Object> paramMap = new HashMap<String, Object>(PARAMSIZE6););
	 memo1.Lines.Add('');
	CcDataset.First;
	while not CcDataset.Eof do
	begin
	if CcDataset.FieldByName('S/N').AsString = 'S'  then
	begin
	paramMap.put('+ UpperCase(CcDataset.FieldByName('Nome').AsString) +', groupRequest.getFirstGroup().getBrvFuncoesXE.PrimeiraMaiscula(Txt)+'());
	end;
	CcDataset.Next;
	end;
	 memo1.Lines.Add('		paramMap.put(MODIFY_USER, '+LowerCase(Txt)+'Request.getUserContext().getUserId());');
	 memo1.Lines.Add('		paramMap.put(OLD_NAME, '+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getOldName());');
	 memo1.Lines.Add('		paramMap.put(SUB'+UpperCase(Txt)+'_TYPE, '+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum().getValue());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		Integer result = (Integer)SensusMyBatisDacHelper.doQueryForObject(getSqlSession(), UPDATE_'+UpperCase(Txt)+', paramMap);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (ValidationUtil.isNullOrZero(result))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			response.setStatus(Status.NoRowsUpdatedError);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		else');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			response.getResultsList().add('+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC#fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@SuppressWarnings("unchecked")');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.isPreQueryCount())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			response.getResultsSetInfo().setTotalRowsAvailable(');
	 memo1.Lines.Add('					(Integer)SensusMyBatisDacHelper.doQueryForObject(');
	 memo1.Lines.Add('							getSqlSession(), PAGINATION_TOTAL_ROWS, inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (ValidationUtil.isNullOrZero(response.getResultsSetInfo().getTotalRowsAvailable()))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				return response;');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		response.addResults(');
	 memo1.Lines.Add('				SensusMyBatisDacHelper.doQueryForList(getSqlSession(), FETCH_ALL_'+UpperCase(Txt)+'S, inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC#fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@SuppressWarnings("unchecked")');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchDevicesByName('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<Device>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		response.getResultsList().addAll(SensusMyBatisDacHelper.doQueryForList(getSqlSession(),');
	 memo1.Lines.Add('				FETCH_DEVICES_BY_'+UpperCase(Txt)+'S, '+LowerCase(Txt)+'Request));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.schedule.dac.IScheduleDAC#fetchScheduleById(com.sensus.dm.common.schedule.model.request');
	 memo1.Lines.Add('	 * .ScheduleRequest)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchScheduleById(ScheduleRequest scheduleRequest)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		SensusMyBatisDacHelper.doQueryForList(');
	 memo1.Lines.Add('				getSqlSession(), FETCH_SCHEDULE_BY_ID, scheduleRequest.getSchedule().getDmAction(), response);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		DMConvertUtil.checkResult(response);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('}');
	 memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      Result := memo1;
end;

 function criarCodeIClasseDAC(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
 begin
         memo1.Lines.Clear;
         memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.dac;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
		 memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('/**');
		 memo1.Lines.Add(' * The Interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC.');
		 memo1.Lines.Add(' * ');
		 memo1.Lines.Add(' * @author - Washington.');
		 memo1.Lines.Add(' */');
		 memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
		 memo1.Lines.Add('{');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Fetch all '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal results response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
		 memo1.Lines.Add('	');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Fetch devices by '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal results response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchDevicesById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
		 memo1.Lines.Add('	');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Fetch devices by '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 *'); 
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal results response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchDevicesByName('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Insert '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal results response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Delete '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Update '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
		 memo1.Lines.Add('	 * @return the internal results response');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('}');
        Result := memo1;
 end;

function criarCodeIClasseBCLImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.impl;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import java.io.File;');
	 memo1.Lines.Add('import java.math.BigInteger;');
	 memo1.Lines.Add('import java.util.ArrayList;');
	 memo1.Lines.Add('import java.util.Arrays;');
	 memo1.Lines.Add('import java.util.Calendar;');
	 memo1.Lines.Add('import java.util.List;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import org.slf4j.Logger;');
	 memo1.Lines.Add('import org.slf4j.LoggerFactory;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import com.sensus.cbof.model.Device;');
	 memo1.Lines.Add('import com.sensus.cbof.model.Radio;');
	 memo1.Lines.Add('import com.sensus.common.csv.CSVColumn;');
	 memo1.Lines.Add('import com.sensus.common.model.Message;');
	 memo1.Lines.Add('import com.sensus.common.model.Message.MessageLevel;');
	 memo1.Lines.Add('import com.sensus.common.model.Message.MessageSeverity;');
	 memo1.Lines.Add('import com.sensus.common.model.SortExpression;');
	 memo1.Lines.Add('import com.sensus.common.model.SortExpression.Direction;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse.Status;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
	 memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil;');
	 memo1.Lines.Add('import com.sensus.dm.common.action.model.AddDeviceTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action;');
	 memo1.Lines.Add('import com.sensus.dm.common.action.model.Create'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action;');
	 memo1.Lines.Add('import com.sensus.dm.common.action.model.Edit'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action;');
	 memo1.Lines.Add('import com.sensus.dm.common.action.model.Remove'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.util.DMConvertUtil;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.util.DMUtil;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.util.csv.model.CsvColumnEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.bcl.IDeviceBCL;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.DeviceSearch;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.ServiceTypeEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.DeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.InquiryDeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.bcl.IProcessBCL;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.DMProcess;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.ProcessItem;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.ProcessItemStatusEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.ProcessStatusEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.ProcessType;');
	 memo1.Lines.Add('import com.sensus.dm.common.process.model.request.ProcessRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.property.model.Property;');
	 memo1.Lines.Add('import com.sensus.dm.common.property.model.PropertyEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.tenant.model.request.TenantRequest;');
	 memo1.Lines.Add('import com.sensus.dm.elec.action.bcl.IActionBCL;');
	 memo1.Lines.Add('import com.sensus.dm.elec.device.bcl.IElectricMeterBCL;');
	 memo1.Lines.Add('import com.sensus.dm.elec.device.model.HanDeviceSearch;');
	 memo1.Lines.Add('import com.sensus.dm.gas.device.bcl.IGasMeterBCL;');
	 memo1.Lines.Add('import com.sensus.dm.water.device.bcl.IWaterMeterBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('// TODO: Auto-generated Javadoc');
	 memo1.Lines.Add('/**');
	 memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' * @author Washington.');
	 memo1.Lines.Add(' */');
	 memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL');
	 memo1.Lines.Add('{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The log. */');
	 memo1.Lines.Add('	private static transient Logger LOG = LoggerFactory.getLogger('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl.class);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant FLEXNET_ID. */');
	 memo1.Lines.Add('	private static final String FLEXNET_ID = "flexnet_id";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant STR_CSV. */');
	 memo1.Lines.Add('	private static final String STR_CSV = ".csv";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant STR_HIFEN. */');
	 memo1.Lines.Add('	private static final String STR_HIFEN = "-";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant STR_COMMA. */');
	 memo1.Lines.Add('	private static final String STR_COMMA = ",";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant INT_0. */');
	 memo1.Lines.Add('	private static final Integer INT_0 = 0;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PROCESS_NAME_SEPARATOR. */');
	 memo1.Lines.Add('	private static final String PROCESS_NAME_SEPARATOR = "|";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant PROCESSING_'+UpperCase(Txt)+'. */');
	 memo1.Lines.Add('	private static final String PROCESSING_'+UpperCase(Txt)+' =');
	 memo1.Lines.Add('			"sensus.epm.scheduledeventvalidator.process.existingActionInProcessing'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant FILE_CREATION_FAILED. */');
	 memo1.Lines.Add('	private static final String FILE_CREATION_FAILED = "sensus.epm.processbclimpl.file.creation.failed";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant '+UpperCase(Txt)+'_ELECTRIC_COLUMNS_TO_EXPORT. */');
	 memo1.Lines.Add('	private static final String[] '+UpperCase(Txt)+'_ELECTRIC_COLUMNS_TO_EXPORT = {CsvColumnEnum.NAME.getValue(),');
	 memo1.Lines.Add('			CsvColumnEnum.DESCRIPTION.getValue(), CsvColumnEnum.DEVICE_TYPE.getValue(),');
	 memo1.Lines.Add('			CsvColumnEnum.'+UpperCase(Txt)+'_TYPE.getValue(),');
	 memo1.Lines.Add('			CsvColumnEnum.DEVICE_COUNT.getValue(), CsvColumnEnum.DATE_ADDED.getValue()};');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant '+UpperCase(Txt)+'_COLUMNS_TO_EXPORT. */');
	 memo1.Lines.Add('	private static final String[] '+UpperCase(Txt)+'_COLUMNS_TO_EXPORT = {CsvColumnEnum.NAME.getValue(),');
	 memo1.Lines.Add('			CsvColumnEnum.DESCRIPTION.getValue(), CsvColumnEnum.'+UpperCase(Txt)+'_TYPE.getValue(),');
	 memo1.Lines.Add('			CsvColumnEnum.DEVICE_COUNT.getValue(), CsvColumnEnum.DATE_ADDED.getValue()};');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// Spring injection points:');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The temp upload file path. */');
	 memo1.Lines.Add('	private String tempUploadFilePath;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The '+LowerCase(Txt)+' dac. */');
	 memo1.Lines.Add('	private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+LowerCase(Txt)+'DAC;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The action bcl. */');
	 memo1.Lines.Add('	private IActionBCL actionBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The electric meter bcl. */');
	 memo1.Lines.Add('	private IElectricMeterBCL electricMeterBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The device bcl. */');
	 memo1.Lines.Add('	private IDeviceBCL deviceBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The water meter bcl. */');
	 memo1.Lines.Add('	private IWaterMeterBCL waterMeterBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The gas meter bcl. */');
	 memo1.Lines.Add('	private IGasMeterBCL gasMeterBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The process bcl. */');
	 memo1.Lines.Add('	private IProcessBCL processBCL;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The all possible columns. */');
	 memo1.Lines.Add('	private List<CSVColumn> allPossibleColumns;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the temp upload file path.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the temp upload file path');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public String getTempUploadFilePath()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return tempUploadFilePath;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the temp upload file path.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param tempUploadFilePath the new temp upload file path');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setTempUploadFilePath(String tempUploadFilePath)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.tempUploadFilePath = tempUploadFilePath;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+' dac.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' dac');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return '+LowerCase(Txt)+'DAC;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+' dac.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'DAC the new '+LowerCase(Txt)+' dac');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+LowerCase(Txt)+'DAC)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.'+LowerCase(Txt)+'DAC = '+LowerCase(Txt)+'DAC;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the action bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the action bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IActionBCL getActionBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return actionBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the action bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param actionBCL the new action bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setActionBCL(IActionBCL actionBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.actionBCL = actionBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the electric meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the electric meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IElectricMeterBCL getElectricMeterBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return electricMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the electric meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param electricMeterBCL the new electric meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setElectricMeterBCL(IElectricMeterBCL electricMeterBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.electricMeterBCL = electricMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the device bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the device bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IDeviceBCL getDeviceBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return deviceBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the device bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param deviceBCL the new device bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setDeviceBCL(IDeviceBCL deviceBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.deviceBCL = deviceBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the water meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the water meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IWaterMeterBCL getWaterMeterBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return waterMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the water meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param waterMeterBCL the new water meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setWaterMeterBCL(IWaterMeterBCL waterMeterBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.waterMeterBCL = waterMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the gas meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the gas meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IGasMeterBCL getGasMeterBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return gasMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the gas meter bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param gasMeterBCL the new gas meter bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setGasMeterBCL(IGasMeterBCL gasMeterBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.gasMeterBCL = gasMeterBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the process bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the process bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public IProcessBCL getProcessBCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return processBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the process bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param processBCL the new process bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setProcessBCL(IProcessBCL processBCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.processBCL = processBCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the all possible columns.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the all possible columns');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public List<CSVColumn> getAllPossibleColumns()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return allPossibleColumns;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the all possible columns.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param allPossibleColumns the new all possible columns');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setAllPossibleColumns(List<CSVColumn> allPossibleColumns)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.allPossibleColumns = allPossibleColumns;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// -------------------------------------------------------------------------');
	 memo1.Lines.Add('	// Public interface:');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResponse response = new InternalResponse();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		for ('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+' : '+LowerCase(Txt)+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			// Are there something running for this '+LowerCase(Txt)+' ?');
	 memo1.Lines.Add('			response = fetchMessageProcessing('+LowerCase(Txt)+');');
	 memo1.Lines.Add('			if (response.isInError())');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				return response;');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			// the '+LowerCase(Txt)+' still exists');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'Response =');
	 memo1.Lines.Add('					fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+LowerCase(Txt)+', '+LowerCase(Txt)+'Request.getServiceTypeEnum(),');
	 memo1.Lines.Add('							'+LowerCase(Txt)+'Request.getTenant()));');
	 memo1.Lines.Add('			if ('+LowerCase(Txt)+'Response.isInError())');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			// deletes the '+LowerCase(Txt)+'');
	 memo1.Lines.Add('			response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+LowerCase(Txt)+'));');
	 memo1.Lines.Add('			if (response.isInError())');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				return response;');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			// insert process for del '+LowerCase(Txt)+'');
	 memo1.Lines.Add('			InternalResultsResponse<DMProcess> processResponse =');
	 memo1.Lines.Add('					insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Process('+LowerCase(Txt)+'Response.getFirstResult(), '+LowerCase(Txt)+'Request.getIsMonitored(),');
	 memo1.Lines.Add('							Remove'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action.ACTION, ProcessStatusEnum.COMPLETED,');
	 memo1.Lines.Add('							null, '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (processResponse.isInError())');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				response.setStatus(processResponse.getStatus());');
	 memo1.Lines.Add('				response.addMessages(processResponse.getMessageInfoList());');
	 memo1.Lines.Add('				return response;');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResultsResponse<Boolean> canInsertResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchCan'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BeInserted('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'Response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (ValidationUtil.isNull(canInsertResponse) || !canInsertResponse.getFirstResult())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.setStatus(canInsertResponse.getStatus());');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.addMessages(canInsertResponse.getMessageInfoList());');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// insert '+LowerCase(Txt)+'');
	 memo1.Lines.Add('		'+LowerCase(Txt)+'Response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('		if ('+LowerCase(Txt)+'Response.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// insert process for '+LowerCase(Txt)+' creation');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResultsResponse<DMProcess> processResponse =');
	 memo1.Lines.Add('				insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Process('+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(), false,');
	 memo1.Lines.Add('						Create'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action.ACTION, ProcessStatusEnum.COMPLETED,');
	 memo1.Lines.Add('						null, '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (processResponse.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.setStatus(processResponse.getStatus());');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.addMessages(processResponse.getMessageInfoList());');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		'+LowerCase(Txt)+'Request.setProcessId(processResponse.getFirstResult().getId());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNullOrEmpty('+LowerCase(Txt)+'Request.getUploadIds())');
	 memo1.Lines.Add('				|| !ValidationUtil.isNull('+LowerCase(Txt)+'Request.getIdsFile()))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			addDevicesTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request, '+LowerCase(Txt)+'Response);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'Response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!validateUpdate'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Response, '+LowerCase(Txt)+'Request))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// inserts the '+LowerCase(Txt)+'');
	 memo1.Lines.Add('		'+LowerCase(Txt)+'Response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('		if ('+LowerCase(Txt)+'Response.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// insert process for edit '+LowerCase(Txt)+'');
	 memo1.Lines.Add('		InternalResultsResponse<DMProcess> processResponse =');
	 memo1.Lines.Add('				insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Process('+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(), false,');
	 memo1.Lines.Add('						Edit'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Action.ACTION, ProcessStatusEnum.COMPLETED, null, '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (processResponse.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.setStatus(processResponse.getStatus());');
	 memo1.Lines.Add('			'+LowerCase(Txt)+'Response.addMessages(processResponse.getMessageInfoList());');
	 memo1.Lines.Add('			return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNull('+LowerCase(Txt)+'Request.is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Replace()) && '+LowerCase(Txt)+'Request.is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Replace())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Replace('+LowerCase(Txt)+'Response, processResponse, '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// uploading the devices, in order to add to database further');
	 memo1.Lines.Add('		if ((!ValidationUtil.isNull('+LowerCase(Txt)+'Request.getIdsFile())');
	 memo1.Lines.Add('				&& !ValidationUtil.isNull('+LowerCase(Txt)+'Request.getIdFileType())');
	 memo1.Lines.Add('				&& !ValidationUtil.isNull('+LowerCase(Txt)+'Response.getFirstResult()))');
	 memo1.Lines.Add('				|| (!ValidationUtil.isNull('+LowerCase(Txt)+'Request.getIdFileType())');
	 memo1.Lines.Add('				&& !ValidationUtil.isNull('+LowerCase(Txt)+'Request.getUploadIds())))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			addDevicesTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request, '+LowerCase(Txt)+'Response);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return '+LowerCase(Txt)+'Response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByDevice(com.sensus.dm.common.device.model.request.DeviceRequest');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch '+LowerCase(Txt)+'s by id.');
	 memo1.Lines.Add('	 *');
	 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sById(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sById(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('	');
	 memo1.Lines.Add('	');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch '+LowerCase(Txt)+'s by name.');
	 memo1.Lines.Add('	 *');
	 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByName(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByName(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#generateFileCSV(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResponse generate'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sCSV(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		// Get '+LowerCase(Txt)+'s and generate file csv with this information');
	 memo1.Lines.Add('		InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s = fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (LOG.isDebugEnabled())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			LOG.debug("Get all '+LowerCase(Txt)+'s filtered finished");');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (ServiceTypeEnum.ELECTRIC.equals(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getServiceTypeEnum()))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			DMUtil.generateCSV(getAllPossibleColumns(), '+UpperCase(Txt)+'_ELECTRIC_COLUMNS_TO_EXPORT,');
	 memo1.Lines.Add('					responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s.getResultsList(), inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		else');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			DMUtil.generateCSV(getAllPossibleColumns(), '+UpperCase(Txt)+'_COLUMNS_TO_EXPORT, responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s.getResultsList(),');
	 memo1.Lines.Add('					inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			return responseAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s;');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// update process as complete');
	 memo1.Lines.Add('		return getProcessBCL().updateProcess(');
	 memo1.Lines.Add('				new ProcessRequest(DMUtil.generateProcess(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getProcessId(),');
	 memo1.Lines.Add('						ProcessStatusEnum.COMPLETED),');
	 memo1.Lines.Add('						inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getUserContext(), inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getFileName()));');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL#fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public InternalResultsResponse<Device> fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch message processing.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
	 memo1.Lines.Add('	 * @return the internal response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	private InternalResponse fetchMessageProcessing('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+')');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		List<Property> properties = new ArrayList<Property>();');
	 memo1.Lines.Add('		properties.add(new Property(PropertyEnum.'+UpperCase(Txt)+'_ID.getValue(), '+LowerCase(Txt)+'.getId().toString()));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		InternalResponse response = getProcessBCL().fetchCheckProcessing(');
	 memo1.Lines.Add('				new ProcessRequest(new DMProcess(ProcessStatusEnum.IN_PROCESS, properties)));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (response.isInError())');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			response.addMessage(PROCESSING_'+UpperCase(Txt)+',');
	 memo1.Lines.Add('					Message.MessageSeverity.Error,');
	 memo1.Lines.Add('					Message.MessageLevel.FieldValidation);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Insert '+LowerCase(Txt)+' process.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
	 memo1.Lines.Add('	 * @param isMonitored the is monitored');
	 memo1.Lines.Add('	 * @param actionType the action type');
	 memo1.Lines.Add('	 * @param processStatusEnum the process status enum');
	 memo1.Lines.Add('	 * @param processItems the process items');
	 memo1.Lines.Add('	 * @param tenantRequest the tenant request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	private InternalResultsResponse<DMProcess> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Process('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+', Boolean isMonitored, String actionType,');
	 memo1.Lines.Add('			ProcessStatusEnum processStatusEnum,');
	 memo1.Lines.Add('			List<ProcessItem> processItems, TenantRequest tenantRequest)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		List<Property> properties = new ArrayList<Property>();');
	 memo1.Lines.Add('		properties.add(new Property(PropertyEnum.'+UpperCase(Txt)+'_ID.getValue(), '+LowerCase(Txt)+'.getId()');
	 memo1.Lines.Add('				.toString()));');
	 memo1.Lines.Add('		properties.add(new Property(PropertyEnum.'+UpperCase(Txt)+'_NAME.getValue(), '+LowerCase(Txt)+'.getName()));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNull('+LowerCase(Txt)+'.getDeviceType()))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			properties.add(new Property(PropertyEnum.DEVICE_TYPE.getValue(), '+LowerCase(Txt)+'.getDeviceType().toString()));');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		if (!ValidationUtil.isNull('+LowerCase(Txt)+'.getHanDeviceType()))');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			properties.add(new Property(PropertyEnum.HAN_DEVICE_TYPE.getValue(), '+LowerCase(Txt)+'.getHanDeviceType().toString()));');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		// create a Process for '+LowerCase(Txt)+'');
	 memo1.Lines.Add('		return getProcessBCL().insertProcess(');
	 memo1.Lines.Add('				new ProcessRequest(DMUtil.generateProcess(isMonitored, true, null,');
	 memo1.Lines.Add('						new ProcessType(actionType), processItems, processStatusEnum, properties), tenantRequest');
	 memo1.Lines.Add('						.getUserContext(),');
	 memo1.Lines.Add('						tenantRequest.getServiceTypeEnum(), tenantRequest.getTenant()));');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('}');
	 memo1.Lines.Add('');
     memo1.Lines.Add(' ');
     Result := memo1;
end;




function criarCodeIClasseBCL(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
     memo1.Lines.Clear;
	 memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.bcl;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import com.sensus.cbof.model.Device;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.DeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.InquiryDeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('/**');
	 memo1.Lines.Add(' * The Interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' * @author Washington.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' */');
	 memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL');
	 memo1.Lines.Add('{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch all '+LowerCase(Txt)+'s.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param inquiryPaginationRequest the inquiry pagination request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiryPaginationRequest);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Delete '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Update '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch '+LowerCase(Txt)+'s by device.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param deviceRequest the device request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sById(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Insert '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch devices by '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the internal results response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchDevicesByName('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('}');
	 memo1.Lines.Add('');
      Result := memo1;
end;
function criarCodeClasseBCFImpl(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.impl;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import org.slf4j.Logger;');
	 memo1.Lines.Add('import org.slf4j.LoggerFactory;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import com.sensus.cbof.model.Device;');
	 memo1.Lines.Add('import com.sensus.cbof.model.DeviceTypeEnum;');
	 memo1.Lines.Add('import com.sensus.cbof.model.Radio;');
	 memo1.Lines.Add('import com.sensus.common.model.SortExpression;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
	 memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
	 memo1.Lines.Add('import com.sensus.common.util.SensusInterfaceUtil;');
	 memo1.Lines.Add('import com.sensus.common.validation.ValidationContext;');
	 memo1.Lines.Add('import com.sensus.common.validation.ValidationController;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.model.BaseSearch;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.model.DMPersistanceActionEnum;');
	 memo1.Lines.Add('import com.sensus.dm.common.base.model.request.DeviceManagerInquiryRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.DeviceSearch;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.DeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.request.InquiryDeviceRequest;');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.response.DeviceResponse;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
	 memo1.Lines.Add('import com.sensus.dm.common.tenant.model.request.TenantRequest;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('/**');
	 memo1.Lines.Add(' * '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' BCF implementation.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' * @author Washington.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' */');
	 memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF');
	 memo1.Lines.Add('{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG. */');
	 memo1.Lines.Add('	private static final String DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG = "sensus.dm.elec.'+LowerCase(Txt)+'bcfimpl.defaultexception";');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The Constant LOG. */');
	 memo1.Lines.Add('	private static final Logger LOG = LoggerFactory.getLogger('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFImpl.class);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The '+LowerCase(Txt)+' bcl. */');
	 memo1.Lines.Add('	private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL '+LowerCase(Txt)+'BCL; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The tenant request validation controller. */');
	 memo1.Lines.Add('	private ValidationController tenantRequestValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The order by validation controller. */');
	 memo1.Lines.Add('	private ValidationController orderByValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The page size validation controller. */');
	 memo1.Lines.Add('	private ValidationController pageSizeValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The base search validation controller. */');
	 memo1.Lines.Add('	private ValidationController baseSearchValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The device search validation controller. */');
	 memo1.Lines.Add('	private ValidationController deviceSearchValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/** The inquiry device request validation controller. */');
	 memo1.Lines.Add('	private ValidationController inquiryDeviceRequestValidationController; // injected by Spring through setter');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public ValidationController getTenantRequestValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return tenantRequestValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public void setTenantRequestValidationController(ValidationController tenantRequestValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.tenantRequestValidationController = tenantRequestValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public ValidationController getOrderByValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return orderByValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public void setOrderByValidationController(ValidationController orderByValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.orderByValidationController = orderByValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public ValidationController getPageSizeValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return pageSizeValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public void setPageSizeValidationController(ValidationController pageSizeValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.pageSizeValidationController = pageSizeValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public ValidationController getBaseSearchValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return baseSearchValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	public void setBaseSearchValidationController(ValidationController baseSearchValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.baseSearchValidationController = baseSearchValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the device search validation controller.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the device search validation controller');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public ValidationController getDeviceSearchValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return deviceSearchValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the device search validation controller.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param deviceSearchValidationController the new device search validation controller');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setDeviceSearchValidationController(ValidationController deviceSearchValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.deviceSearchValidationController = deviceSearchValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the inquiry device request validation controller.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the inquiry device request validation controller');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public ValidationController getInquiryDeviceRequestValidationController()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return inquiryDeviceRequestValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the inquiry device request validation controller.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param inquiryDeviceRequestValidationController the new inquiry device request validation controller');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void setInquiryDeviceRequestValidationController(');
	 memo1.Lines.Add('			ValidationController inquiryDeviceRequestValidationController)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		this.inquiryDeviceRequestValidationController = inquiryDeviceRequestValidationController;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+' bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param param'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL the new '+LowerCase(Txt)+' bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL param'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+LowerCase(Txt)+'BCL = param'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+' bcl.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' bcl');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL()');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		return '+LowerCase(Txt)+'BCL;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.FETCH_ALL_'+UpperCase(Txt)+'S);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(SortExpression.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getSortExpressions());');
	 memo1.Lines.Add('			context.putObjectToBeValidated(DeviceManagerInquiryRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(BaseSearch.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getDeviceSearch());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context)');
	 memo1.Lines.Add('					&& getOrderByValidationController().validate(context)');
	 memo1.Lines.Add('					&& getPageSizeValidationController().validate(context)');
	 memo1.Lines.Add('					&& getBaseSearchValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					true);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.FETCH_BY_ID);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(), request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(), request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(request);');
	 memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(internalResponse.getResultsList());');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByDevice(com.sensus.dm.common.device.model.request.DeviceRequest');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByDevice(DeviceRequest deviceRequest)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.FETCH_ALL_'+UpperCase(Txt)+'S_BY_DEVICE);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					deviceRequest);');
	 memo1.Lines.Add('			Device device = deviceRequest.getFirstDevice();');
	 memo1.Lines.Add('			context.putObjectToBeValidated(Device.class.getSimpleName(),');
	 memo1.Lines.Add('					device);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				Radio radio = device.getRadio();');
	 memo1.Lines.Add('				context.putObjectToBeValidated(Radio.class.getSimpleName(), radio);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('					internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByDevice(deviceRequest);');
	 memo1.Lines.Add('					response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(internalResponse.getResultsList());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByName(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByName(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.FETCH_BY_NAME);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(), inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(), inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(internalResponse.getResultsList());');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.INSERT_'+UpperCase(Txt)+');');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(internalResponse.getResultsList());');
	 memo1.Lines.Add('				response.setProcessId('+LowerCase(Txt)+'Request.getProcessId());');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.UPDATE);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(internalResponse.getResultsList());');
	 memo1.Lines.Add('				response.setProcessId('+LowerCase(Txt)+'Request.getProcessId());');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResponse internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.DELETE);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#insertDeviceTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public DeviceResponse insertDeviceTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(InquiryDeviceRequest inquiryDeviceRequest)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		DeviceResponse response = new DeviceResponse();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResponse internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.ADD_SMP_TO_GRP);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiryDeviceRequest);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiryDeviceRequest.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('			context.putObjectToBeValidated(SortExpression.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiryDeviceRequest.getSortExpressions());');
	 memo1.Lines.Add('			context.putObjectToBeValidated(DeviceSearch.class.getSimpleName(),');
	 memo1.Lines.Add('					inquiryDeviceRequest.getDeviceSearch());');
	 memo1.Lines.Add('			context.putObjectToBeValidated(InquiryDeviceRequest.class.getSimpleName(), inquiryDeviceRequest);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context)');
	 memo1.Lines.Add('					&& getOrderByValidationController().validate(context)');
	 memo1.Lines.Add('					&& getInquiryDeviceRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				if (!validateHanDevice(response, internalResponse, inquiryDeviceRequest, context))');
	 memo1.Lines.Add('				{');
	 memo1.Lines.Add('					return response;');
	 memo1.Lines.Add('				}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().insertDeviceTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiryDeviceRequest);');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/*');
	 memo1.Lines.Add('	 * (non-Javadoc)');
	 memo1.Lines.Add('	 * @see');
	 memo1.Lines.Add('	 * com.sensus.dm.common.'+LowerCase(Txt)+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
	 memo1.Lines.Add('	 * )');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	@Override');
	 memo1.Lines.Add('	public DeviceResponse fetchDevicesById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request)');
	 memo1.Lines.Add('	{');
	 memo1.Lines.Add('		DeviceResponse response = new DeviceResponse();');
	 memo1.Lines.Add('		try');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			InternalResultsResponse<Device> internalResponse = null;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			ValidationContext context = new ValidationContext();');
	 memo1.Lines.Add('			context.getValidationArguments().put(DMPersistanceActionEnum.getDefaultName(),');
	 memo1.Lines.Add('					DMPersistanceActionEnum.FETCH_DEVICES);');
	 memo1.Lines.Add('			context.putObjectToBeValidated(TenantRequest.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('			context.putObjectToBeValidated('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.class.getSimpleName(),');
	 memo1.Lines.Add('					'+LowerCase(Txt)+'Request.getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'());');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			if (getTenantRequestValidationController().validate(context))');
	 memo1.Lines.Add('			{');
	 memo1.Lines.Add('				internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchDevicesById('+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('				response.setDevices(internalResponse.getResultsList());');
	 memo1.Lines.Add('			}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleOperationStatusAndMessages(response, internalResponse, context.getMessages(),');
	 memo1.Lines.Add('					false);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		catch (Exception ex)');
	 memo1.Lines.Add('		{');
	 memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_'+UpperCase(Txt)+'_BCF_EXCEPTION_MSG);');
	 memo1.Lines.Add('		}');
	 memo1.Lines.Add('		return response;');
	 memo1.Lines.Add('	}');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('}');

      Result := memo1;
end;

function criarCodeIClasseBCF(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.bcf;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('import com.sensus.dm.common.device.model.response.DeviceResponse;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
	 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('/**');
	 memo1.Lines.Add(' * The Interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' * @author Washington.');
	 memo1.Lines.Add(' * ');
	 memo1.Lines.Add(' */');
	 memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF');
	 memo1.Lines.Add('{');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch all '+LowerCase(Txt)+'s.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the inquiry '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch '+LowerCase(Txt)+' by id.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch '+LowerCase(Txt)+' by name.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByName(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Insert '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Update '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Delete '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('	/**');
	 memo1.Lines.Add('	 * Fetch devices by '+LowerCase(Txt)+'.');
	 memo1.Lines.Add('	 * ');
	 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Request the '+LowerCase(Txt)+' request');
	 memo1.Lines.Add('	 * @return the device response');
	 memo1.Lines.Add('	 */');
	 memo1.Lines.Add('	DeviceResponse fetchDevicesBy'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+LowerCase(Txt)+'Request);');
	 memo1.Lines.Add('');
	 memo1.Lines.Add('}');
	 memo1.Lines.Add('');
      Result := memo1;
end;

function criarCodeRequest(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
         memo1.Lines.Clear;
         memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.model.request;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import java.util.ArrayList;');
		 memo1.Lines.Add('import java.util.List;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import com.sensus.common.model.UserContext;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
		 memo1.Lines.Add('import com.sensus.dm.common.tenant.model.request.TenantRequest;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('/**');
		 memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.');
		 memo1.Lines.Add(' * ');
		 memo1.Lines.Add(' * @author Washington');
		 memo1.Lines.Add(' */');
		 memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends TenantRequest');
		 memo1.Lines.Add('{');
		 memo1.Lines.Add('	/** The '+LowerCase(Txt)+'s. */');
		 memo1.Lines.Add('	private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The retrieve history. */');
		 memo1.Lines.Add('	private Boolean retrieveHistory = false;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+')');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+');');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param userContext the user context');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request(UserContext userContext)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		setUserContext(userContext);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 * @param userContext the user context');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+', UserContext userContext)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+');');
		 memo1.Lines.Add('		setUserContext(userContext);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the first '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the first '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		if (get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() != null && !get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().isEmpty())');
		 memo1.Lines.Add('		{');
		 memo1.Lines.Add('			return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().get(0);');
		 memo1.Lines.Add('		}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('		return null;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'s the new '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.'+LowerCase(Txt)+'s = '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Adds the '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+')');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		if (get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() == null)');
		 memo1.Lines.Add('		{');
		 memo1.Lines.Add('			set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(new ArrayList<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>());');
		 memo1.Lines.Add('		}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('		get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().add('+LowerCase(Txt)+');');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the retrieve history.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the retrieve history');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Boolean getRetrieveHistory()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return retrieveHistory;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the retrieve history.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param retrieveHistory the new retrieve history');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void setRetrieveHistory(Boolean retrieveHistory)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.retrieveHistory = retrieveHistory;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	@Override');
		 memo1.Lines.Add('	public String toString()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request [get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() + ", getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()=" + getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
		 memo1.Lines.Add('				+ ", getRetrieveHistory()=" + getRetrieveHistory() + ", toString()=" + super.toString() + "]";');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('}');
		 memo1.Lines.Add('');

      memo1.Lines.Add('');
      Result := memo1;
end;

function criarCodeResponse(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
         memo1.Lines.Clear;
         memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.model.response;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import java.util.List;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import javax.xml.bind.annotation.XmlElement;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import com.sensus.common.model.response.Response;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('/**');
		 memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response.');
		 memo1.Lines.Add(' * ');
		 memo1.Lines.Add(' * @author - Washington');
		 memo1.Lines.Add(' */');
		 memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends Response');
		 memo1.Lines.Add('{');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The '+LowerCase(Txt)+'s. */');
		 memo1.Lines.Add('	@XmlElement(nillable = true)');
		 memo1.Lines.Add('	private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The is '+LowerCase(Txt)+' name unique. */');
		 memo1.Lines.Add('	private Boolean is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The process id. */');
		 memo1.Lines.Add('	private Integer processId;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'Objects the new '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'Objects)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		'+LowerCase(Txt)+'s = '+LowerCase(Txt)+'Objects;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the checks if is '+LowerCase(Txt)+' name unique.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the checks if is '+LowerCase(Txt)+' name unique');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Boolean getIs'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the checks if is '+LowerCase(Txt)+' name unique.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique the new checks if is '+LowerCase(Txt)+' name unique');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void setIs'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique(Boolean is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique = is'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the process id.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the process id');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Integer getProcessId()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return processId;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the process id.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param processId the new process id');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void setProcessId(Integer processId)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.processId = processId;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	@Override');
		 memo1.Lines.Add('	public String toString()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response [get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() + ", getMessageIterator()=" + getMessageIterator()');
		 memo1.Lines.Add('				+ ", getMessageList()=" + getMessageList() + ", getMessageInfoList()=" + getMessageInfoList()');
		 memo1.Lines.Add('				+ ", getProcessId()=" + getProcessId()');
		 memo1.Lines.Add('				+ ", isOperationSuccess()=" + isOperationSuccess() + ", getIs'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique()="');
		 memo1.Lines.Add('				+ getIs'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'NameUnique() + "]";');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('}');

      memo1.Lines.Add('');
       Result := memo1;
end;

function criarCodeInquiryRequest(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
         memo1.Lines.Clear;
	     memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.model.request;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import java.util.ArrayList;');
		 memo1.Lines.Add('import java.util.List;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import com.sensus.dm.common.base.model.request.InquiryPaginationRequest;');
		 memo1.Lines.Add('import com.sensus.dm.common.device.model.DeviceSearch;');
		 memo1.Lines.Add('import com.sensus.dm.common.device.model.ServiceTypeEnum;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum;');
		 memo1.Lines.Add('import com.sensus.dm.common.tenant.model.DMTenant;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('/**');
		 memo1.Lines.Add(' * The Class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.');
		 memo1.Lines.Add(' * ');
		 memo1.Lines.Add(' * @author Washington');
		 memo1.Lines.Add(' */');
		 memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends InquiryPaginationRequest');
		 memo1.Lines.Add('{');
		 memo1.Lines.Add('	/** The Constant FIRST. */');
		 memo1.Lines.Add('	private static final Integer FIRST = 0;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The '+LowerCase(Txt)+' type enum. */');
		 memo1.Lines.Add('	private '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum '+LowerCase(Txt)+'TypeEnum;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The device search. */');
		 memo1.Lines.Add('	private DeviceSearch deviceSearch;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The '+LowerCase(Txt)+'s. */');
		 memo1.Lines.Add('	private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+')');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+');');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 * @param tenant the tenant');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+', DMTenant tenant)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+');');
		 memo1.Lines.Add('		setTenant(tenant);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 * @param serviceTypeEnum the service type enum');
		 memo1.Lines.Add('	 * @param tenant the tenant');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+', ServiceTypeEnum serviceTypeEnum, DMTenant tenant)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+LowerCase(Txt)+');');
		 memo1.Lines.Add('		setServiceTypeEnum(serviceTypeEnum);');
		 memo1.Lines.Add('		setTenant(tenant);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param serviceTypeEnum the service type enum');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request(ServiceTypeEnum serviceTypeEnum)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		setServiceTypeEnum(serviceTypeEnum);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Instantiates a new inquiry '+LowerCase(Txt)+' request.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param deviceSearchParam the device search param');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request(DeviceSearch deviceSearchParam)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		setDeviceSearch(deviceSearchParam);');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+' type enum.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+' type enum');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return '+LowerCase(Txt)+'TypeEnum;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+' type enum.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'TypeEnum the new '+LowerCase(Txt)+' type enum');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum '+LowerCase(Txt)+'TypeEnum)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.'+LowerCase(Txt)+'TypeEnum = '+LowerCase(Txt)+'TypeEnum;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the device search.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the device search');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public DeviceSearch getDeviceSearch()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return deviceSearch;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the device search.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param deviceSearch the new device search');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void setDeviceSearch(DeviceSearch deviceSearch)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.deviceSearch = deviceSearch;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'s the new '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.'+LowerCase(Txt)+'s = '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the first '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the first '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		if ((get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() != null) && !get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().isEmpty())');
		 memo1.Lines.Add('		{');
		 memo1.Lines.Add('			return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().get(FIRST);');
		 memo1.Lines.Add('		}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('		return null;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Adds the '+LowerCase(Txt)+'.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+' the '+LowerCase(Txt)+'');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void add'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+LowerCase(Txt)+')');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		if (get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() == null)');
		 memo1.Lines.Add('		{');
		 memo1.Lines.Add('			set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(new ArrayList<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>());');
		 memo1.Lines.Add('		}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('		get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().add('+LowerCase(Txt)+');');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	@Override');
		 memo1.Lines.Add('	public String toString()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return "Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request [get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'TypeEnum() + ", getDeviceSearch()="');
		 memo1.Lines.Add('				+ getDeviceSearch()');
		 memo1.Lines.Add('				+ ", get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s() + ", getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()=" + getFirst'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'() + ", toString()="');
		 memo1.Lines.Add('				+ super.toString() + "]";');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('}');
		 memo1.Lines.Add('');

       Result := memo1;
end;

function criarCodeInquiryResponse(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
         memo1.Lines.Clear;
         memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(Txt)+'.model.response;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import java.util.ArrayList;');
		 memo1.Lines.Add('import java.util.Collection;');
		 memo1.Lines.Add('import java.util.List;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import javax.xml.bind.annotation.XmlElement;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('import com.sensus.common.model.response.InquiryResponse;');
		 memo1.Lines.Add('import com.sensus.dm.common.'+LowerCase(Txt)+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('/**');
		 memo1.Lines.Add(' * The Class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response.');
		 memo1.Lines.Add(' * ');
		 memo1.Lines.Add(' * @author - Washington');
		 memo1.Lines.Add(' */');
		 memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends InquiryResponse');
		 memo1.Lines.Add('{');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The '+LowerCase(Txt)+'s. */');
		 memo1.Lines.Add('	@XmlElement(nillable = true)');
		 memo1.Lines.Add('	private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/** The file name. */');
		 memo1.Lines.Add('	private String fileName;');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return '+LowerCase(Txt)+'s;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the '+LowerCase(Txt)+'s.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param '+LowerCase(Txt)+'List the new '+LowerCase(Txt)+'s');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'List)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		'+LowerCase(Txt)+'s = '+LowerCase(Txt)+'List;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Gets the file name.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @return the file name');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public String getFileName()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return fileName;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/**');
		 memo1.Lines.Add('	 * Sets the file name.');
		 memo1.Lines.Add('	 * ');
		 memo1.Lines.Add('	 * @param fileName the new file name');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	public void setFileName(String fileName)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		this.fileName = fileName;');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/*');
		 memo1.Lines.Add('	 * (non-Javadoc)');
		 memo1.Lines.Add('	 * @see com.sensus.common.model.response.InquiryResponse#addResults(java.util.Collection)');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	@SuppressWarnings({"rawtypes", "unchecked"})');
		 memo1.Lines.Add('	@Override');
		 memo1.Lines.Add('	public void addResults(Collection coll)');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(new ArrayList<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>(coll));');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('');
		 memo1.Lines.Add('	/*');
		 memo1.Lines.Add('	 * (non-Javadoc)');
		 memo1.Lines.Add('	 * @see java.lang.Object#toString()');
		 memo1.Lines.Add('	 */');
		 memo1.Lines.Add('	@Override');
		 memo1.Lines.Add('	public String toString()');
		 memo1.Lines.Add('	{');
		 memo1.Lines.Add('		return "Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response ['+LowerCase(Txt)+'s=" + '+LowerCase(Txt)+'s + ", fileName=" + fileName + ", get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()');
		 memo1.Lines.Add('				+ ", getFileName()=" + getFileName() + "]";');
		 memo1.Lines.Add('	}');
		 memo1.Lines.Add('}');
         Result := memo1;
end;

function gerarModelo(Txt,pacote:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
var controte : integer;
tostring : string;
BEGIN
     try
         memo1.Lines.Clear;
         memo1.Lines.Add('package com.sensus.dm.common.'+LowerCase(pacote)+'.model;');
         memo1.Lines.Add('import java.util.List;');
         memo1.Lines.Add('@SuppressWarnings("serial")');
         memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' extends SensusModel'); //escreve no arquivo e desce uma linha
         memo1.Lines.Add('{');
         memo1.Lines.Add('/** The Constant FIRST. */');
	       memo1.Lines.Add('private static final Integer FIRST = 0; ');
         CcDataset.First;
         while not CcDataset.Eof do
         begin
               if CcDataset.FieldByName('S/N').AsString = 'S'  then
                      memo1.Lines.Add('    private '+verificadorCode(CcDataset.FieldByName('Tipo').AsString)+' '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +';');
               CcDataset.Next;
         end;
         CcDataset.First;
         while not CcDataset.Eof do
         begin
               if CcDataset.FieldByName('S/N').AsString = 'S'  then
               begin
                      memo1.Lines.Add('    /** ');
                      memo1.Lines.Add('    * Gets the '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +'.');
                      memo1.Lines.Add('    * ');
                      memo1.Lines.Add('    * @return the '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +' ');
                      memo1.Lines.Add('    */');
                      memo1.Lines.Add('    	public '+verificadorCode(CcDataset.FieldByName('Tipo').AsString)+' get'+BrvFuncoesXE.PrimeiraMaiscula(CcDataset.FieldByName('Nome').AsString)+'() ');
                      memo1.Lines.Add('    { ');
                      memo1.Lines.Add('    	return this.'+ LowerCase(CcDataset.FieldByName('Nome').AsString) +'; ');
                      memo1.Lines.Add('    } ');
                      memo1.Lines.Add('');
                      memo1.Lines.Add('    /** ');
                      memo1.Lines.Add('     * Sets the '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +'.');
                      memo1.Lines.Add('     *');
                      memo1.Lines.Add('     * @param '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +' the new '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +' ');
                      memo1.Lines.Add('     */');
                      memo1.Lines.Add('    public void set'+BrvFuncoesXE.PrimeiraMaiscula(CcDataset.FieldByName('Nome').AsString)+'('+verificadorCode(CcDataset.FieldByName('Tipo').AsString)+' '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +')');
                      memo1.Lines.Add('    {');
                      memo1.Lines.Add('    	this.'+ LowerCase(CcDataset.FieldByName('Nome').AsString) +' = '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +'; ');
                      memo1.Lines.Add('    }  ');
               end;
               CcDataset.Next;
         end;
          controte := 0;
          tostring := '';
           CcDataset.First;
         while not CcDataset.Eof do
         begin
               if CcDataset.FieldByName('S/N').AsString = 'S'  then
                begin
                  if Pos('List', CcDataset.FieldByName('Tipo').AsString) <> 0 then
                  begin
                  memo1.Lines.Add('          	/**    ');
                  memo1.Lines.Add('	 * Adds the '+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))));
                  memo1.Lines.Add('	 *   ');
                  memo1.Lines.Add('	 * @param '+BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))+' the '+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))));
                  memo1.Lines.Add('	 */ ');
                  memo1.Lines.Add('	public void add'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'('+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+' '+BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))+') ');
                  memo1.Lines.Add('	{ ');
                  memo1.Lines.Add('		if (get'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s() == null) ');
                  memo1.Lines.Add('		{');
                  memo1.Lines.Add('			set'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s(new ArrayList<'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'>()); ');
                  memo1.Lines.Add('		}  ');
                  memo1.Lines.Add('      ');
                  memo1.Lines.Add('		get'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s().add('+BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))+'); ');
                  memo1.Lines.Add('	} ');
                  memo1.Lines.Add('   ');
                  memo1.Lines.Add('	/**');
                  memo1.Lines.Add('	 * Gets the first '+BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))+'.');
                  memo1.Lines.Add('	 *');
                  memo1.Lines.Add('	 * @return the first '+BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString))+'');
                  memo1.Lines.Add('	 */');
                  memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+' getFirst'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'()');
                  memo1.Lines.Add('	{    ');
                  memo1.Lines.Add('		if ((get'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s() != null) && !get'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s().isEmpty())   ');
                  memo1.Lines.Add('		{    ');
                  memo1.Lines.Add('			return get'+BrvFuncoesXE.PrimeiraMaiscula(BrvFuncoesXE.retornatipoArray(LowerCase(CcDataset.FieldByName('tipo').AsString)))+'s().get(FIRST); ');
                  memo1.Lines.Add('		}     ');
                  memo1.Lines.Add('       ');
                  memo1.Lines.Add('		return null; ');
                  memo1.Lines.Add('	}  ');
                end;
              end;
              CcDataset.Next;
         end;
          controte := 0;
          tostring := '';
          CcDataset.First;
          memo1.Lines.Add('/* ');
          memo1.Lines.Add('* (non-Javadoc) ');
          memo1.Lines.Add('* @see com.sensus.common.model.SensusModel#toString() ');
          memo1.Lines.Add('*/ ');
          memo1.Lines.Add('@Override ');
          memo1.Lines.Add('public String toString()  ');
          memo1.Lines.Add('{');
          tostring := 'return "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'[';
          CcDataset.First;
          while not CcDataset.Eof do
          begin
                if CcDataset.FieldByName('S/N').AsString = 'S'  then
                begin
                      if controte = 0 then
                          tostring := tostring + ' get'+BrvFuncoesXE.PrimeiraMaiscula(LowerCase(CcDataset.FieldByName('Nome').AsString))+'()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(LowerCase(CcDataset.FieldByName('Nome').AsString))+'()'
                      else
                          tostring := tostring + '+ ", get'+BrvFuncoesXE.PrimeiraMaiscula(LowerCase(CcDataset.FieldByName('Nome').AsString))+'()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(LowerCase(CcDataset.FieldByName('Nome').AsString))+'()';
                controte := controte + 1;
                end;
                CcDataset.Next;
          end;
          memo1.Lines.Add(tostring);
          memo1.Lines.Add('+"]";');
          memo1.Lines.Add('}');
          memo1.Lines.Add('}');
          Result := memo1;
     finally

     end;

END;


end.

unit UBE;
interface
 uses   Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs,  ExtCtrls,
  ComCtrls, DB, DBClient,stdctrls;

  function gerarModelo(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryResponse(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeInquiryRequest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeResponse(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeRequest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCF(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseBCFImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCL(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseBCLImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseDAC(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeIClasseDACImpl(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseXML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
  function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;

implementation

uses BrvFuncoesXE;


function criarCodeClasseSqlMapConfigXml(Txt:String;memo1 :TMemo):TMemo;
begin
      memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
      memo1.Lines.Add('<!DOCTYPE configuration');
      memo1.Lines.Add('PUBLIC "-//mybatis.org//DTD Config 3.0//EN"');
      memo1.Lines.Add('"http://mybatis.org/dtd/mybatis-3-config.dtd">');

      memo1.Lines.Add('<configuration>');

      memo1.Lines.Add('<settings>');
      memo1.Lines.Add('<setting name="lazyLoadingEnabled" value="false" />');
      memo1.Lines.Add('</settings>');

      memo1.Lines.Add('<typeAliases>');
      memo1.Lines.Add('<!-- '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' mapping -->');
      memo1.Lines.Add('<typeAlias alias="Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" 	type="com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" />');
      memo1.Lines.Add('<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" 			type="com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request" />');
      memo1.Lines.Add('<typeAlias alias="FilialRequest" 		type="com.sensus.mlc.filial.model.request.FilialRequest" />');
      memo1.Lines.Add('<typeAlias alias="EnderecoRequest" 		type="com.sensus.mlc.endereco.model.request.EnderecoRequest" />');

      memo1.Lines.Add('<!-- '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' and Smartpoint joint mapping -->');
      memo1.Lines.Add('<typeAlias alias="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"  memo1.Lines.Add(''type="com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'"/>');
      memo1.Lines.Add('<typeAlias alias="Filial" memo1.Lines.Add(''    type="com.sensus.mlc.filial.model.Filial"/>');
      memo1.Lines.Add('<typeAlias alias="Endereco" memo1.Lines.Add(''type="com.sensus.mlc.endereco.model.Endereco"/>');

      memo1.Lines.Add('<!-- Smartpoint mapping -->');
      memo1.Lines.Add('<typeAlias alias="Group" memo1.Lines.Add(''		  type="com.sensus.mlc.group.model.Group" />');
      memo1.Lines.Add('<typeAlias alias="'+Txt+'" memo1.Lines.Add(''	      type="com.sensus.mlc.tag.model.'+Txt+'" />');
      memo1.Lines.Add('<typeAlias alias="StatusMessage" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.StatusMessage" />');
      memo1.Lines.Add('<typeAlias alias="LightParameter" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.LightParameter" />');
      memo1.Lines.Add('<typeAlias alias="PropertyValidValue" 			  type="com.sensus.mlc.smartpoint.model.PropertyValidValue" />');
      memo1.Lines.Add('<typeAlias alias="StatusException" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.StatusException" />');
      memo1.Lines.Add('<typeAlias alias="LightRequest" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.request.LightRequest" />');
      memo1.Lines.Add('<typeAlias alias="EventSchedule" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.EventSchedule" />');
      memo1.Lines.Add('<typeAlias alias="OffsetSchedule" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.OffsetSchedule" />');
      memo1.Lines.Add('<typeAlias alias="CustomSearch" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.CustomSearch" />');
      memo1.Lines.Add('<typeAlias alias="SearchParameter" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.SearchParameter" />');
      memo1.Lines.Add('<typeAlias alias="TimeZoneInfo" memo1.Lines.Add(''  type="com.sensus.mlc.base.model.TimeZoneInfo" />');
      memo1.Lines.Add('<typeAlias alias="SensusPartNumberConfiguration"  type="com.sensus.mlc.smartpoint.model.SensusPartNumberConfiguration" />');
      memo1.Lines.Add('<typeAlias alias="LightHistory" memo1.Lines.Add(''  type="com.sensus.mlc.smartpoint.model.LightHistory" />');
      memo1.Lines.Add('<typeAlias alias="Schedule" memo1.Lines.Add(''	  type="com.sensus.mlc.schedule.model.Schedule" />');
      memo1.Lines.Add('<typeAlias alias="Column" memo1.Lines.Add(''		  type="com.sensus.mlc.smartpoint.model.Column" />');
      memo1.Lines.Add('<typeAlias alias="GuaranteeLightExistenceRequest" type="com.sensus.mlc.smartpoint.model.request.GuaranteeLightExistenceRequest" />');
      memo1.Lines.Add('<typeAlias alias="CurrentAlarmWarningMessage" 	  type="com.sensus.mlc.smartpoint.model.CurrentAlarmWarningMessage" />');
      memo1.Lines.Add('<typeAlias alias="CustomSearchRequest" 			  type="com.sensus.mlc.smartpoint.model.request.CustomSearchRequest" />');
      memo1.Lines.Add('<typeAlias alias="TenantRequest" memo1.Lines.Add(''  type="com.sensus.mlc.tenant.model.request.TenantRequest" />');
      memo1.Lines.Add('<typeAlias alias="LightStatusRequest" 			  type="com.sensus.mlc.smartpoint.model.request.LightStatusRequest" />');
      memo1.Lines.Add('<typeAlias alias="LightingControlRequest" 		  type="com.sensus.mlc.base.model.request.LightingControlRequest" />');
      memo1.Lines.Add('<typeAlias alias="ScheduleRequest" memo1.Lines.Add(''  type="com.sensus.mlc.schedule.model.request.ScheduleRequest" />');
      memo1.Lines.Add('<typeAlias alias="PropertyValidValuesRequest" 	  type="com.sensus.mlc.smartpoint.model.request.PropertyValidValuesRequest" />');
      memo1.Lines.Add('<typeAlias alias="ColumnFilterRequest" 			  type="com.sensus.mlc.smartpoint.model.request.ColumnFilterRequest" />');
      memo1.Lines.Add('<typeAlias alias="ColumnFilterResponse" 		  type="com.sensus.mlc.smartpoint.model.response.ColumnFilterResponse" />');

      memo1.Lines.Add('</typeAliases>');

      memo1.Lines.Add('<mappers>');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/'+Txt+'/dac/mybatis/map/'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.xml"/>');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/filial/dac/mybatis/map/Filial.xml" />');
      memo1.Lines.Add('<mapper resource="com/sensus/mlc/endereco/dac/mybatis/map/Endereco.xml" />');
      memo1.Lines.Add('</mappers>');

      memo1.Lines.Add('</configuration>');


      Result := memo1;
end;
function criarCodeClasseXML(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('<?xml version="1.0" encoding="UTF-8"?>');
      memo1.Lines.Add('<!DOCTYPE mapper ');
      memo1.Lines.Add('PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" ');
      memo1.Lines.Add('"http://mybatis.org/dtd/mybatis-3-mapper.dtd">');
      memo1.Lines.Add('<mapper namespace="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      memo1.Lines.Add('<resultMap id="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sResult" type="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'">');
      CcDataset.First;
      while CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'true'  then
                  memo1.Lines.Add('<result property="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" column="'+LowerCase(CcDataset.FieldByName('Nome').AsString)+'" />');
           CcDataset.Next;
      end;

      memo1.Lines.Add('</resultMap>');

      memo1.Lines.Add('<sql id="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms">');

      memo1.Lines.Add('SELECT ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                  memo1.Lines.Add(''+CcDataset.FieldByName('Nome').AsString+',');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</sql>');

      memo1.Lines.Add('<!-- Fetch All '+Txt+'s -->');
      memo1.Lines.Add('<select id="fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s" parameterType="Map" resultMap="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sResult">');

      memo1.Lines.Add('SELECT  <include refid="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms"/>');
      memo1.Lines.Add('FROM '+Txt+';   ');

      memo1.Lines.Add('</select>');

      memo1.Lines.Add('<select id="fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById"  parameterType="Map" resultMap="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Result">');

      memo1.Lines.Add('   select <include refid="all'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Columms"/>');
      memo1.Lines.Add('   from '+Txt+' e   ');
      memo1.Lines.Add('   where   ');
      memo1.Lines.Add('   e.codemp = #{codemp}  ');

      memo1.Lines.Add('</select>');

      memo1.Lines.Add('<!-- Insert '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('<select id="insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultType="int">');
      memo1.Lines.Add('SELECT ins_'+Txt+' (   ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                memo1.Lines.Add('#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+verificadorCodeBanco(LowerCase(CcDataset.FieldByName('Tipo').AsString))+'},');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</select>');
      memo1.Lines.Add('<!-- Update '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' -->');
      memo1.Lines.Add('<select id="update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" parameterType="'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'" resultType="int">');
      memo1.Lines.Add('SELECT upd_'+Txt+' (   ');
      CcDataset.First;
      while not CcDataset.Eof do
      begin
            if CcDataset.FieldByName('S/N').AsString = 'S'  then
                memo1.Lines.Add('#{'+LowerCase(CcDataset.FieldByName('Nome').AsString)+',jdbcType='+verificadorCodeBanco(LowerCase(CcDataset.FieldByName('Tipo').AsString))+'},');
           CcDataset.Next;
      end;
      memo1.Lines.Add('</select>');
      memo1.Lines.Add('</mapper>');
      Result := memo1;
end;
function criarCodeIClasseDACImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.dac.mybatis;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('import java.util.Date;');
      memo1.Lines.Add('import java.util.HashMap;');
      memo1.Lines.Add('import java.util.List;');
      memo1.Lines.Add('import java.util.Map;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.mybatis.spring.support.SqlSessionDaoSupport;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doInsert;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doQueryForList;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doQueryForObject;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doRemove;');
      memo1.Lines.Add('import static com.sensus.common.util.SensusMyBatisDacHelper.doUpdate;');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createInquiryLightRequest;');
      memo1.Lines.Add('import static com.sensus.mlc.smartpoint.dacd.SmartPointDACD.getParametersToFetchAllLights;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* The Class ActionDACImpl.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('* @author - QAT Brazil.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DACImpl extends SqlSessionDaoSupport implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE7. */');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE1. */');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant TAG_NAMESPACE. */');
      memo1.Lines.Add('private static final String EMPRESA_NAMESPACE = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'.";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant FETCH_ALL_TAGS. */');
      memo1.Lines.Add('private static final String FETCH_ALL_EMPRESAS = EMPRESA_NAMESPACE + "fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final Integer PARAMSIZE1 = 1;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE6. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE6 = 6;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE6. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE32 = 32;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PARAMSIZE7. */');
      memo1.Lines.Add('private static final Integer PARAMSIZE7 = 7;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant TOTAL_COLUMN. */');
      memo1.Lines.Add('private static final Integer TOTAL_COLUMN = 5;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_0. */');
      memo1.Lines.Add('private static final Integer COLUMN_0 = 0;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_1. */');
      memo1.Lines.Add('private static final Integer COLUMN_1 = 1;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_2. */');
      memo1.Lines.Add('private static final Integer COLUMN_2 = 2;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_3. */');
      memo1.Lines.Add('private static final Integer COLUMN_3 = 3;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant COLUMN_4. */');
      memo1.Lines.Add('private static final Integer COLUMN_4 = 4;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_NAME_HEADER. */');
      memo1.Lines.Add('private static final String ACTION_NAME_HEADER = "Action Name";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PAGINATION_TOTAL_ROWS. */');
      memo1.Lines.Add('private static final String PAGINATION_TOTAL_ROWS = EMPRESA_NAMESPACE + "PaginationTotalRows";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ORDERBY. */');
      memo1.Lines.Add('private static final String ORDERBY = "orderBy";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant GROUPID. */');
      memo1.Lines.Add('private static final String EMPRESA_ID = "codEmp";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_PAGE. */');
      memo1.Lines.Add('private static final String START_PAGE = "startPage";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPE_HEADER. */');
      memo1.Lines.Add('private static final String ACTION_TYPE_HEADER = "Action Type";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MODIFIED_BY_HEADER. */');
      memo1.Lines.Add('private static final String MODIFIED_BY_HEADER = "Modified By";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant DATE_MODIFIED_HEADER. */');
      memo1.Lines.Add('private static final String DATE_MODIFIED_HEADER = "Date Modified";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant LOCKED_HEADER. */');
      memo1.Lines.Add('private static final String LOCKED_HEADER = "Locked";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final String TENANT_ID = "tenantId";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ORDER_BY. */');
      memo1.Lines.Add('private static final String ORDER_BY = "order_by";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant SORT_BY. */');
      memo1.Lines.Add('private static final String SORT_BY = "sort_by";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant PAGE_SIZE. */');
      memo1.Lines.Add('private static final String PAGE_SIZE = "page_size";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_ROW. */');
      memo1.Lines.Add('private static final String START_ROW = "start_row";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_NAME. */');
      memo1.Lines.Add('private static final String ACTION_NAME = "action_name";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPES. */');
      memo1.Lines.Add('private static final String ACTION_TYPES = "action_types";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant USERS. */');
      memo1.Lines.Add('private static final String USERS = "users";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_ID. */');
      memo1.Lines.Add('private static final String ACTION_ID = "action_id";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_TYPE. */');
      memo1.Lines.Add('private static final String ACTION_TYPE = "action_type";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ACTION_DESCRIPTION. */');
      memo1.Lines.Add('private static final String ACTION_DESCRIPTION = "action_description";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant START_STEP. */');
      memo1.Lines.Add('private static final String START_STEP = "start_step";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant CREATE_USER. */');
      memo1.Lines.Add('private static final String CREATE_USER = "create_user";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant STEP_LIST. */');
      memo1.Lines.Add('private static final String STEP_LIST = "step_list";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant DEMAND_RESET_STEP_LIST. */');
      memo1.Lines.Add('private static final String DEMAND_RESET_STEP_LIST = "1,2,3,4";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant UNSELECTION_PAGINATION_IDS. */');
      memo1.Lines.Add('private static final String UNSELECTION_PAGINATION_IDS = "unselectionPaginationIds";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant INSERT_SMART_POINT_TO_TAG. */');
      memo1.Lines.Add('private static final String INSERT_SMART_POINT_TO_TAG = EMPRESA_NAMESPACE + "insertSmartPointTo'+Txt+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant INSERT_TAG. */');
      memo1.Lines.Add('private static final String INSERT_EMPRESA = EMPRESA_NAMESPACE + "insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant SENSUS_EPM_ACTIONVALIDATOR_ACTION_IS_SCHEDULED. */');
      memo1.Lines.Add('private static final String SENSUS_EPM_ACTIONVALIDATOR_ACTION_IS_SCHEDULED =');
      memo1.Lines.Add('"sensus.epm.actionvalidator.action.is_scheduled";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant ADD_ACTION_FAILED. */');
      memo1.Lines.Add('private static final String ADD_ACTION_FAILED = "sensus.epm.actionbclimpl.add.action.failed";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* Prepare data to write file.');
      memo1.Lines.Add('*');
      memo1.Lines.Add('* @param actionList the action list');
      memo1.Lines.Add('* @return the string[][]');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('private String[][] preapreDataToWriteFile(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> actionList)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('String[][] excelData = new String[actionList.size() + 1][TOTAL_COLUMN];');
      memo1.Lines.Add('');
      memo1.Lines.Add('// HEADER');
      memo1.Lines.Add('excelData[0][COLUMN_0] = ACTION_NAME_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_1] = ACTION_TYPE_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_2] = MODIFIED_BY_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_3] = DATE_MODIFIED_HEADER;');
      memo1.Lines.Add('excelData[0][COLUMN_4] = LOCKED_HEADER;');
      memo1.Lines.Add('');
      memo1.Lines.Add('for (int i = 1; i <= actionList.size(); i++)');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = actionList.get(i - 1);');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_0] = '+Txt+'.getCodemp().toString();');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_1] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getNomeemp()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_1] = '+Txt+'.getRazemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_2] = '+Txt+'.getCnpjemp();');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_3] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getInscemp()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_3] = '+Txt+'.getInscemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('excelData[i][COLUMN_4] = null;');
      memo1.Lines.Add('if (!ValidationUtil.isNull('+Txt+'.getCodmunic()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('excelData[i][COLUMN_4] = '+Txt+'.getWwwemp();');
      memo1.Lines.Add('}');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('return excelData;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('// Define user from context.');
      memo1.Lines.Add(''+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().setCreateUser('+Txt+'Request.getUserContext().getUserId());');
      memo1.Lines.Add('');
      memo1.Lines.Add('paramMap.put(UNSELECTION_PAGINATION_IDS, null);');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNullOrEmpty('+Txt+'Request.getUnselectionPaginationIds()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(UNSELECTION_PAGINATION_IDS, '+Txt+'Request.getUnselectionPaginationIds());');
      memo1.Lines.Add('}');
      memo1.Lines.Add(''+Txt+'.setCodemp((Integer)doQueryForObject(getSqlSession(), "insertEndereco", '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('response.addResult('+Txt+');');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@SuppressWarnings("unchecked")');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('HashMap<String, Object> paramMap = new HashMap<String, Object>(PARAMSIZE6);');
      memo1.Lines.Add('paramMap.put(TENANT_ID, inquiry'+Txt+'Request.getTenant().getId());');
      memo1.Lines.Add('paramMap.put(PAGE_SIZE, inquiry'+Txt+'Request.getPageSize());');
      memo1.Lines.Add('paramMap.put(START_ROW, inquiry'+Txt+'Request.getStartRow());');
      memo1.Lines.Add('paramMap.put(START_PAGE, inquiry'+Txt+'Request.getStartPage());');
      memo1.Lines.Add('paramMap.put(ORDERBY, '+Txt+'OrderByEnum.NAME_COLUMN.getValue());');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNullOrEmpty(inquiry'+Txt+'Request.getSortExpressions()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(ORDERBY, inquiry'+Txt+'Request.getSortExpressions().get(0));');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (!ValidationUtil.isNull(inquiry'+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s()))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('paramMap.put(EMPRESA_ID, inquiry'+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s().get(0).getCodemp());');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('doQueryForList(getSqlSession(), FETCH_ALL_EMPRESAS, paramMap, response);');
      memo1.Lines.Add('');
      memo1.Lines.Add('Integer totalRows = (Integer)doQueryForObject(getSqlSession(),');
      memo1.Lines.Add('PAGINATION_TOTAL_ROWS, paramMap);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response.getResultsSetInfo().setTotalRowsAvailable(totalRows);');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = new InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('');
      memo1.Lines.Add('response.getResultsList().addAll(');
      memo1.Lines.Add('getSqlSession().selectList("'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Map.fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById", '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResponse generateFileCSV(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('InternalResponse response = new InternalResponse();');
      memo1.Lines.Add('');
      memo1.Lines.Add('preapreDataToWriteFile(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s());');
      memo1.Lines.Add('');
      memo1.Lines.Add('if (GenerateFileCSV.generateCSVFile(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request.getFileName(), excelData))');
      memo1.Lines.Add('{');
      memo1.Lines.Add('response.setStatus(Status.OperationSuccess);');
      memo1.Lines.Add('}');
      memo1.Lines.Add('else');
      memo1.Lines.Add('{');
      memo1.Lines.Add('response.setStatus(Status.ExceptionError);');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Request request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial(Request request)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) {');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('@Override');
      memo1.Lines.Add('public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) {');
      memo1.Lines.Add('// TODO Auto-generated method stub');
      memo1.Lines.Add('return null;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      Result := memo1;
end;

 function criarCodeIClasseDAC(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
 begin

        memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.dac');
        memo1.Lines.Add('');
        memo1.Lines.Add('');
        memo1.Lines.Add('import com.sensus.common.model.request.Request');
        memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse');
        memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
        memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* The Interface IActionDAC.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @author - QAT Brazil.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
        memo1.Lines.Add('{');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Update '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Delete '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+'.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
        memo1.Lines.Add('* @return the inquiry '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch '+Txt+' by id.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
        memo1.Lines.Add('* @return the internal results response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Generate file csv.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry '+Txt+' request');
        memo1.Lines.Add('* @return the inquiry '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public InternalResponse generateFileCSV(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+' types.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param request the request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Request request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('/**');
        memo1.Lines.Add('* Fetch all '+Txt+' filial.');
        memo1.Lines.Add('*');
        memo1.Lines.Add('* @param request the request');
        memo1.Lines.Add('* @return the '+Txt+' response');
        memo1.Lines.Add('*/');
        memo1.Lines.Add('public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial(Request request)');
        memo1.Lines.Add('');
        memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
        memo1.Lines.Add('}');
        memo1.Lines.Add('');
        memo1.Lines.Add('');
        Result := memo1;
 end;

function criarCodeIClasseBCLImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin

      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcl.impl; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessItemWithFailure; ');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessRequest; ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('import java.util.ArrayList; ');
      memo1.Lines.Add('import java.util.List; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import org.apache.commons.logging.Log; ');
      memo1.Lines.Add('import org.apache.commons.logging.LogFactory; ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse; ');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse; ');
      memo1.Lines.Add('import com.sensus.common.util.SensusAppContext; ');
      memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil; ');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCDateUtil;   ');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCHelp;        ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC;  ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';    ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;  ');
      memo1.Lines.Add('import com.sensus.mlc.process.bcl.IProcessBCL;    ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCAction;  ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCActionParameter;  ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCActionTypeEnum;  ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.Process;   ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.ProcessItemStatusEnum; ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.ProcessStatusReasonEnum; ');
      memo1.Lines.Add('import com.sensus.mlc.process.model.request.ProcessRequest; ');
      memo1.Lines.Add('import com.sensus.mlc.schedule.bcl.IScheduleBCL;  ');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.Light; ');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.PropertyEnum; ');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.SearchParameter;');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add(' * Action BCL implementation class. ');
      memo1.Lines.Add(' * ');
      memo1.Lines.Add(' * @author QAT. ');
      memo1.Lines.Add(' */');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL ');
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcl.impl');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessItemWithFailure');
      memo1.Lines.Add('import static com.sensus.mlc.base.util.LCHelp.createProcessRequest');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import java.util.ArrayList');
      memo1.Lines.Add('import java.util.List');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import org.apache.commons.logging.Log');
      memo1.Lines.Add('import org.apache.commons.logging.LogFactory');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse');
      memo1.Lines.Add('import com.sensus.common.util.SensusAppContext');
      memo1.Lines.Add('import com.sensus.common.validation.ValidationUtil');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCDateUtil');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCHelp');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.dac.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request');
      memo1.Lines.Add('import com.sensus.mlc.process.bcl.IProcessBCL');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCAction');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCActionParameter');
      memo1.Lines.Add('import com.sensus.mlc.process.model.LCActionTypeEnum');
      memo1.Lines.Add('import com.sensus.mlc.process.model.Process');
      memo1.Lines.Add('import com.sensus.mlc.process.model.ProcessItemStatusEnum');
      memo1.Lines.Add('import com.sensus.mlc.process.model.ProcessStatusReasonEnum');
      memo1.Lines.Add('import com.sensus.mlc.process.model.request.ProcessRequest');
      memo1.Lines.Add('import com.sensus.mlc.schedule.bcl.IScheduleBCL');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.Light');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.PropertyEnum');
      memo1.Lines.Add('import com.sensus.mlc.smartpoint.model.SearchParameter');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* Action BCL implementation class. ');
      memo1.Lines.Add('*');
      memo1.Lines.Add('* @author Washington ');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The LOG. */  ');
      memo1.Lines.Add('private static transient Log LOG = LogFactory.getLog('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCLImpl.class)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The '+Txt+' dac. */ ');
      memo1.Lines.Add('private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+Txt+'DAC // injected by Spring through setter ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant PROCESS_BCL_BEAN. */ ');
      memo1.Lines.Add('private static final String PROCESS_BCL_BEAN = "processBCLTarget"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant SCHEDULE_BCL_BEAN. */ ');
      memo1.Lines.Add('private static final String SCHEDULE_BCL_BEAN = "scheduleBCLTarget"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant ACTION_PROVIDER_TYPE. */ ');
      memo1.Lines.Add('private static final String ACTION_PROVIDER_TYPE = "EPM.TASK"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant ADD_PROPERTY_TO_ACTION_FAILED. */ ');
      memo1.Lines.Add('private static final String ADD_PROPERTY_TO_ACTION_FAILED =  ');
      memo1.Lines.Add('"sensus.epm.actionbclimpl.add.property.to.action.failed"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant UPDATE_PROPERTY_TO_ACTION_FAILED. */  ');
      memo1.Lines.Add('private static final String UPDATE_PROPERTY_TO_ACTION_FAILED = ');
      memo1.Lines.Add('"sensus.epm.actionbclimpl.update.property.to.action.failed"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant DELETE_PROPERTY_FROM_ACTION_FAILED. */   ');
      memo1.Lines.Add('private static final String DELETE_PROPERTY_FROM_ACTION_FAILED = ');
      memo1.Lines.Add('"sensus.epm.actionbclimpl.delete.property.from.action.failed"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant PROPERTY_DAC_BEAN. */ ');
      memo1.Lines.Add('private static final String PROPERTY_DAC_BEAN = "propertyDACTarget"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant GET_ACTION_TO_CLONE_FAILED. */     ');
      memo1.Lines.Add('private static final String GET_ACTION_TO_CLONE_FAILED = "sensus.epm.actionbclimpl.get.action.to.clone.failed"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant APPLY_ACTION_FAILED. */   ');
      memo1.Lines.Add('private static final String APPLY_ACTION_FAILED =  ');
      memo1.Lines.Add('"sensus.epm.actionbclimpl.apply.action.failed"');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/** The Constant DATE_RAND_DIVISION. */  ');
      memo1.Lines.Add('private static final Integer DATE_RAND_DIVISION = 0xFFFFF');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Gets the process bcl. ');
      memo1.Lines.Add('*   ');
      memo1.Lines.Add('* @return the process bcl ');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('public IProcessBCL getProcessBCL() ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('return (IProcessBCL)SensusAppContext.getApplicationContext().getBean(PROCESS_BCL_BEAN)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/**');
      memo1.Lines.Add('* Gets the schedule bcl. ');
      memo1.Lines.Add('* ');
      memo1.Lines.Add('* @return the schedule bcl ');
      memo1.Lines.Add('*/');
      memo1.Lines.Add('public IScheduleBCL getScheduleBCL()');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('return (IScheduleBCL)SensusAppContext.getApplicationContext().getBean(SCHEDULE_BCL_BEAN)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)  ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (!response.isInError())  ');
      memo1.Lines.Add('{    ');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = response.getFirstResult()');
      memo1.Lines.Add(''+Txt+'Request.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+')');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('SearchParameter '+Txt+'Parameter =  ');
      memo1.Lines.Add('new SearchParameter(PropertyEnum.EMPRESA_ID, String.valueOf('+Txt+'.getCodemp()))');
      memo1.Lines.Add(''+Txt+'Request.getSearchLight().addSearchParameter('+Txt+'Parameter)');
      memo1.Lines.Add('InternalResultsResponse<Process> processResponse =   ');
      memo1.Lines.Add('insertProcess('+Txt+'Request, LCActionTypeEnum.INSERT_EMPRESA, null)');
      memo1.Lines.Add(''+Txt+'Request.getSearchLight().getSearchParameters().remove('+Txt+'Parameter)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('response.setStatus(processResponse.getStatus())');
      memo1.Lines.Add('response.addMessages(processResponse.getMessageInfoList())');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('return response');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('InternalResponse groupResponse = new InternalResponse()');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResultsResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (!ValidationUtil.isNull(groupResponse))  ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('internalResultsResponse.addMessages(groupResponse.getMessageInfoList())');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('return internalResultsResponse');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override  ');
      memo1.Lines.Add('public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> tagResponse =  ');
      memo1.Lines.Add('(InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>)get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request)');
      memo1.Lines.Add('InternalResponse response = new InternalResponse()');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (tagResponse.isInError())  ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('return response');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (tagResponse.isInError()) ');
      memo1.Lines.Add('{      ');
      memo1.Lines.Add('return response');
      memo1.Lines.Add('}   ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = tagResponse.getFirstResult()');
      memo1.Lines.Add(''+Txt+'Request.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+')');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('SearchParameter tagParameter =  ');
      memo1.Lines.Add('new SearchParameter(PropertyEnum.EMPRESA_ID, String.valueOf('+Txt+'.getCodemp()))');
      memo1.Lines.Add(''+Txt+'Request.getSearchLight().addSearchParameter(tagParameter)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('InternalResultsResponse<Process> processResponse = ');
      memo1.Lines.Add('insertProcess('+Txt+'Request, LCActionTypeEnum.DELETE_TAG, null)');
      memo1.Lines.Add(''+Txt+'Request.getSearchLight().getSearchParameters().remove(tagParameter)');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (processResponse.isInError())  ');
      memo1.Lines.Add('{       ');
      memo1.Lines.Add('response.setStatus(processResponse.getStatus())');
      memo1.Lines.Add('response.addMessages(processResponse.getMessageInfoList())');
      memo1.Lines.Add('}');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('return response');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request) ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+Txt+'Request)');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override  ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+Txt+'Request)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC() ');
      memo1.Lines.Add('{');
      memo1.Lines.Add('return '+Txt+'DAC');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'DAC '+Txt+'DAC) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('this.'+Txt+'DAC = '+Txt+'DAC');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override  ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request)  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('// TODO Auto-generated method stub  ');
      memo1.Lines.Add('return null');
      memo1.Lines.Add('}         ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('private InternalResultsResponse<Process> insertProcess('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request,  ');
      memo1.Lines.Add('LCActionTypeEnum lcActionType, ');
      memo1.Lines.Add('String processDescription)   ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('return insertProcess('+Txt+'Request, lcActionType, processDescription, null)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('/**   ');
      memo1.Lines.Add('* Insert process. ');
      memo1.Lines.Add('*   ');
      memo1.Lines.Add('* @param tagRequest the tag request ');
      memo1.Lines.Add('* @param lcActionType the lc action type   ');
      memo1.Lines.Add('* @param processDescription the process description   ');
      memo1.Lines.Add('* @return the internal results response  ');
      memo1.Lines.Add('*/         ');
      memo1.Lines.Add('private InternalResultsResponse<Process> insertProcess('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request tagRequest, LCActionTypeEnum lcActionType,  ');
      memo1.Lines.Add('String processDescription, List<Light> deactivatedLights) ');
      memo1.Lines.Add('{');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = tagRequest.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('List<LCActionParameter> actionParameters = new ArrayList<LCActionParameter>()');
      memo1.Lines.Add('actionParameters.add(new LCActionParameter(PropertyEnum.TAG_ID, String.valueOf('+Txt+'.getCodemp())))');
      memo1.Lines.Add('actionParameters.add(new LCActionParameter(PropertyEnum.TAG_NAME, '+Txt+'.getCnpjemp()))');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('LCAction action = new LCAction(lcActionType)');
      memo1.Lines.Add('action.setActionParameters(actionParameters)');
      memo1.Lines.Add('action.setDescription("INSERT EMPRESA")');
      memo1.Lines.Add('Process process = LCHelp.generateProcess(false, action, 0)');
      memo1.Lines.Add('process.setIsProcessComplete(true)');
      memo1.Lines.Add('process.setIsSubmitted(true)');
      memo1.Lines.Add('process.setDescription("insert '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'")');
      memo1.Lines.Add('process.setRniCorrelationId("")');
      memo1.Lines.Add(' ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('process.setEndTime(LCDateUtil.getNewDateUTC())');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('if (!ValidationUtil.isNullOrEmpty(processDescription))  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('process.setDescription(processDescription)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('ProcessRequest processRequest = createProcessRequest(tagRequest, process)');
      memo1.Lines.Add('processRequest.setProcessItemFailureList( ');
      memo1.Lines.Add('createProcessItemWithFailure(  ');
      memo1.Lines.Add('	deactivatedLights,     ');
      memo1.Lines.Add('	ProcessItemStatusEnum.MLCFAILURE,  ');
      memo1.Lines.Add('	ProcessStatusReasonEnum.LIGHT_DEACTIVATED))');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('return getProcessBCL().insertProcess(processRequest)');
      memo1.Lines.Add('} ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('@Override  ');
      memo1.Lines.Add('public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('// TODO Auto-generated method stub  ');
      memo1.Lines.Add('return null');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add(' ');
      Result := memo1;
end;


function criarCodeIClasseBCL(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse; ');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request; ');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('// TODO: Auto-generated Javadoc ');
      memo1.Lines.Add('/**');
      memo1.Lines.Add(' * The Interface IActionBCL.');
      memo1.Lines.Add(' * ');
      memo1.Lines.Add(' * @author - QAT Brazil. ');
      memo1.Lines.Add(' * ');
      memo1.Lines.Add(' */ ');
      memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Insert '+Txt+'. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request  ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Update '+Txt+'. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Delete '+Txt+'. ');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResponse delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+'.');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param inquiry'+Txt+'Request the inquiry'+Txt+' request ');
      memo1.Lines.Add('	 * @return the inquiry '+Txt+' response ');
      memo1.Lines.Add('	 */  ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch '+Txt+' by id. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param inquiry'+Txt+'Request the inquiry'+Txt+' request');
      memo1.Lines.Add('	 * @return the internal results response   ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+' types. ');
      memo1.Lines.Add('	 * ');
      memo1.Lines.Add('	 * @param request the request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Types(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request);  ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch all '+Txt+' filial. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param request the request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('} ');
      Result := memo1;
end;
function criarCodeClasseBCFImpl(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('');
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcf.impl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.slf4j.Logger;');
      memo1.Lines.Add('import org.slf4j.LoggerFactory;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResponse;');
      memo1.Lines.Add('import com.sensus.common.model.response.InternalResultsResponse;');
      memo1.Lines.Add('import com.sensus.common.util.SensusInterfaceUtil;');
      memo1.Lines.Add('import com.sensus.mlc.base.model.MLCPersistanceActionEnum;');
      memo1.Lines.Add('import com.sensus.mlc.base.util.LCHelp;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcl.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.process.model.response.ProcessResponse;');
      memo1.Lines.Add('import com.sensus.mlc.tag.bcf.impl.'+Txt+'BCFImpl;');
      memo1.Lines.Add('');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant NAME_LENGTH. */');
      memo1.Lines.Add('	private static final Integer NAME_LENGTH = 255;');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant SENSUS_EPM_ACTIONVALIDATOR_NAME_INVALID. */ ');
      memo1.Lines.Add('	private static final String SENSUS_EPM_ACTIONVALIDATOR_NAME_INVALID = ');
      memo1.Lines.Add('			"sensus.epm.actionvalidator.name.invalid"; ');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** The Constant DEFAULT_GROUP_BCF_EXCEPTION_MSG. */ ');
      memo1.Lines.Add('	private static final String DEFAULT_EMPRESA_BCF_EXCEPTION_MSG = "sensus.mlc.groupbcfimpl.defaultexception"; ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant DEFAULT_GROUP_BCL_EXCEPTION_MSG. */ ');
      memo1.Lines.Add('	private static final String DEFAULT_EMPRESA_BCL_EXCEPTION_MSG = "sensus.mlc.groupbclimpl.defaultexception";');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	/** The Constant LOG. */');
      memo1.Lines.Add('	private static final Logger LOG = LoggerFactory.getLogger('+Txt+'BCFImpl.class); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL '+Txt+'BCL; // injected by Spring through setter');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('	{');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('     ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, new Object[] {MLCPersistanceActionEnum.INSERT}))');
      memo1.Lines.Add('			{');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList()); ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	}');
      memo1.Lines.Add('');
      memo1.Lines.Add('	@Override');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('	{');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.UPDATE)) ');
      memo1.Lines.Add('			{  ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCL_EXCEPTION_MSG);');
      memo1.Lines.Add('			}');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response;  ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('	{  ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('		try  ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.DELETE)) ');
      memo1.Lines.Add('			{  ');
      memo1.Lines.Add('				InternalResponse internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request); ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}  ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		catch (Exception ex)');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+Txt+'Request) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse =  ');
      memo1.Lines.Add('						get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				response.setResultsSetInfo(internalResponse.getResultsSetInfo());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('		catch (Exception ex)');
      memo1.Lines.Add('		{ ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		return response;');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	@Override  ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, '+Txt+'Request, MLCPersistanceActionEnum.FETCH_BY_ID)) ');
      memo1.Lines.Add('			{ ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+Txt+'Request); ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			} ');
      memo1.Lines.Add('		}  ');
      memo1.Lines.Add('		catch (Exception ex)  ');
      memo1.Lines.Add('		{      ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG);  ');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('		return response;  ');
      memo1.Lines.Add('	}');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	@Override ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request) { ');
      memo1.Lines.Add('		'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response(); ');
      memo1.Lines.Add('		try ');
      memo1.Lines.Add('		{    ');
      memo1.Lines.Add('			if (LCHelp.checkValidation(response, inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, MLCPersistanceActionEnum.FETCH)) ');
      memo1.Lines.Add('			{ ');
      memo1.Lines.Add('				InternalResultsResponse<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> internalResponse =  ');
      memo1.Lines.Add('						get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Filial('+Txt+'Request);  ');
      memo1.Lines.Add('				response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(internalResponse.getResultsList());   ');
      memo1.Lines.Add('				LCHelp.treatReturnFromBCL(response, internalResponse, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('			}  ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		catch (Exception ex) ');
      memo1.Lines.Add('		{  ');
      memo1.Lines.Add('			SensusInterfaceUtil.handleException(LOG, response, ex, DEFAULT_EMPRESA_BCF_EXCEPTION_MSG); ');
      memo1.Lines.Add('		} ');
      memo1.Lines.Add('		return response; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL() ');
      memo1.Lines.Add('	{       ');
      memo1.Lines.Add('		return '+Txt+'BCL; ');
      memo1.Lines.Add('	}  ');
      memo1.Lines.Add('    ');
      memo1.Lines.Add('	public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCL '+Txt+'BCL) ');
      memo1.Lines.Add('	{ ');
      memo1.Lines.Add('		this.'+Txt+'BCL = '+Txt+'BCL; ');
      memo1.Lines.Add('	} ');
      memo1.Lines.Add('}  ');
      Result := memo1;
end;

function criarCodeIClasseBCF(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
      memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.bcf;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.request.Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.process.model.response.ProcessResponse;');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add(' * The Interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF.');
      memo1.Lines.Add(' *');
      memo1.Lines.Add(' * @author Washington.Costa');
      memo1.Lines.Add(' */');
      memo1.Lines.Add('public interface I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF ');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Insert '+Txt+'.');
      memo1.Lines.Add('	 *');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request');
      memo1.Lines.Add('	 * @return the '+Txt+' response ');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/**');
      memo1.Lines.Add('	 * Update '+Txt+'.');
      memo1.Lines.Add('	 *');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request');
      memo1.Lines.Add('	 * @return the '+Txt+' response');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request);');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Delete '+Txt+'.  ');
      memo1.Lines.Add('	 *     ');
      memo1.Lines.Add('	 * @param '+Txt+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response');
      memo1.Lines.Add('	 */');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/**  ');
      memo1.Lines.Add('	 * Fetch all '+Txt+'. ');
      memo1.Lines.Add('	 *  ');
      memo1.Lines.Add('	 * @param inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' request   ');
      memo1.Lines.Add('	 * @return the inquiry '+Txt+' response ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request); ');
      memo1.Lines.Add('   ');
      memo1.Lines.Add('	/** ');
      memo1.Lines.Add('	 * Fetch '+Txt+' by id. ');
      memo1.Lines.Add('	 *   ');
      memo1.Lines.Add('	 * @param '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request the '+Txt+' request ');
      memo1.Lines.Add('	 * @return the '+Txt+' response  ');
      memo1.Lines.Add('	 */ ');
      memo1.Lines.Add('	public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request); ');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('} ');
      Result := memo1;
end;

function criarCodeRequest(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.request;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.request.LightSelectionRequest;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends LightSelectionRequest');
       memo1.Lines.Add('');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private Integer parentRetry;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'  '+LowerCase(Txt)+';');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeResponse(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.response;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.common.model.response.Response;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends Response');
       memo1.Lines.Add('');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private Integer parentRetry;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+'s ;');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeInquiryRequest(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Add('package com.sensus.mlc.'+Txt+'.model.request;');
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.BaseSearch;');
       memo1.Lines.Add('import com.sensus.mlc.base.model.request.InquiryPaginationRequest;');
       memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+';');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request extends InquiryPaginationRequest');
       memo1.Lines.Add('');
       memo1.Lines.Add('    private BaseSearch baseSearch;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private String fileName;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    Integer processId;');
       memo1.Lines.Add('    ');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+LowerCase(Txt)+';');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function criarCodeInquiryResponse(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
begin
       memo1.Lines.Add('import java.util.List;');
       memo1.Lines.Add('import com.sensus.common.model.response.InquiryResponse');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('public class Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response extends InquiryResponse');
       memo1.Lines.Add('');
       memo1.Lines.Add('    private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+lowerCase(Txt)+' ;');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
	     memo1.Lines.Add('    public List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'() {');
       memo1.Lines.Add('      return '+Txt+';');
       memo1.Lines.Add('    }');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('    public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+Txt+') {');
       memo1.Lines.Add('        this.'+Txt+' = '+Txt+';');
       memo1.Lines.Add(     '}');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('    public String toString() {');
       memo1.Lines.Add('    return "Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response ['+Txt+'=" + '+Txt);
       memo1.Lines.Add('      + ", get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()=" + get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'()');
       memo1.Lines.Add('    + "]";');
       memo1.Lines.Add('');
       memo1.Lines.Add('');
       memo1.Lines.Add('}');
       Result := memo1;
end;

function gerarModelo(Txt:String;CcDataset:TClientDataSet;memo1 :Tmemo):Tmemo;
BEGIN
     try
         memo1.Lines.Clear;
         memo1.Lines.Add('public class '+Txt+' extends SensusModel'); //escreve no arquivo e desce uma linha
         memo1.Lines.Add('{');
         CcDataset.First;
         while not CcDataset.Eof do
         begin
               if CcDataset.FieldByName('S/N').AsString = 'S'  then
                      memo1.Lines.Add('    private '+verificadorCode(CcDataset.FieldByName('Tipo').AsString)+' '+ LowerCase(CcDataset.FieldByName('Nome').AsString) +';');
               CcDataset.Next;
         end;
          memo1.Lines.Add('}');
          Result := memo1;
     finally

     end;

END;


end.

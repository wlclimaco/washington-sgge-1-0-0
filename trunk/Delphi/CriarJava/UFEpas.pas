unit UFEpas;

interface

uses  SysUtils,DBClient, DB,StdCtrls;

    function criarCodeClasseAPIControler(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseTest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseTestMock(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseHTMLCreate(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseHTML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseMainJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseInitJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseSelenium(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;

implementation

uses BrvFuncoesXE;

function criarCodeClasseAPIControler(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin

      memo1.Lines.Add('package com.sensus.mlc.wui.'+Txt+';');
      memo1.Lines.Add('import javax.servlet.http.HttpServletRequest;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.slf4j.Logger;');
      memo1.Lines.Add('import org.slf4j.LoggerFactory;');
      memo1.Lines.Add('import org.springframework.stereotype.Controller;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestBody;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestMapping;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestMethod;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.ResponseBody;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.response.Response;');
      memo1.Lines.Add('import com.sensus.common.util.SensusInterfaceUtil;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.wui.BaseController;');
      memo1.Lines.Add('import com.sensus.mlc.wui.light.LightAPIController;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add('* @author QATEmployee ');
      memo1.Lines.Add('* ');
      memo1.Lines.Add('*/ ');
      memo1.Lines.Add('@Controller');
      memo1.Lines.Add('@RequestMapping("/api/'+Txt+'") ');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIController extends BaseController  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/* ');
      memo1.Lines.Add('* URLs Mapping   ');
      memo1.Lines.Add('*/  ');
      memo1.Lines.Add('/** The Constant MAP_FETCH. */ ');
      memo1.Lines.Add('private static final String MAP_FETCH = "/fetch";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final String MAP_FETCHALL = "/fetchall";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_DELETE. */ ');
      memo1.Lines.Add('private static final String MAP_DELETE = "/delete";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_INSERT. */  ');
      memo1.Lines.Add('private static final String MAP_INSERT = "/insert";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_INSERT. */  ');
      memo1.Lines.Add('private static final String MAP_UPDATE = "/update";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF '+Txt+'BCF;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant LOG. */');
      memo1.Lines.Add('private static final Logger LOG = LoggerFactory.getLogger(LightAPIController.class);');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant CONTROLLER_EXCEPTION_MSG. */  ');
      memo1.Lines.Add('public static final String CONTROLLER_EXCEPTION_MSG = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIController";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF() { ');
      memo1.Lines.Add('return '+Txt+'BCF;');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF '+Txt+'BCF) {  ');
      memo1.Lines.Add('this.'+Txt+'BCF = '+Txt+'BCF;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_INSERT, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody   ');
      memo1.Lines.Add('public Response insert(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('catch (Exception e)');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Update '+Txt+'.  ');
      memo1.Lines.Add('*    ');
      memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request  ');
      memo1.Lines.Add('* @return the '+Txt+' response  ');
      memo1.Lines.Add('*/  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_UPDATE, method = RequestMethod.POST)  ');
      memo1.Lines.Add('@ResponseBody  ');
      memo1.Lines.Add('public Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Delete filial. ');
      memo1.Lines.Add('*      ');
      memo1.Lines.Add('* @param filialRequest the filial request ');
      memo1.Lines.Add('* @return the filial response    ');
      memo1.Lines.Add('*/      ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_DELETE, method = RequestMethod.POST)  ');
      memo1.Lines.Add('@ResponseBody  ');
      memo1.Lines.Add('public Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add('* Fetch all filial.  ');
      memo1.Lines.Add('*  ');
      memo1.Lines.Add('* @param inquiryfilialRequest the inquiryfilial request  ');
      memo1.Lines.Add('* @return the inquiry filial response  ');
      memo1.Lines.Add('*/ ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_FETCHALL, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody ');
      memo1.Lines.Add('public Response fetch(@RequestBody Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Fetch filial by id. ');
      memo1.Lines.Add('* ');
      memo1.Lines.Add('* @param filialRequest the filial request   ');
      memo1.Lines.Add('* @return the filial response   ');
      memo1.Lines.Add('*/    ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_FETCH, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody ');
      memo1.Lines.Add('public Response fetch(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request)   ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try   ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      Result := memo1;
end;
function criarCodeClasseTest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseTest'+Txt+';');
end;
function criarCodeClasseTestMock(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseTestMock'+Txt+';');
end;
function criarCodeClasseHTMLCreate(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseHTMLCreate'+Txt+';');
end;
function criarCodeClasseHTML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseHTML'+Txt+';');
end;
function criarCodeClasseMainJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseMainJS'+Txt+';');
end;
function criarCodeClasseInitJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseInitJS'+Txt+';');
end;
function criarCodeClasseSelenium(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseSelenium'+Txt+';');
end;

end.

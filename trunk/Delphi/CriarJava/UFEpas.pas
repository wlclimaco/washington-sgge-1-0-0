unit UFEpas;

interface

uses  SysUtils,DBClient, DB,StdCtrls;

    function criarCodeClasseAPIControler(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseTest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseTestMock(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseHTMLCreate(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseHTML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseMainJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseInitJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
    function criarCodeClasseSelenium(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;

implementation

uses BrvFuncoesXE;

function criarCodeClasseAPIControler(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin

      memo1.Lines.Add('package com.sensus.mlc.wui.'+Txt+';');
      memo1.Lines.Add('import javax.servlet.http.HttpServletRequest;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.slf4j.Logger;');
      memo1.Lines.Add('import org.slf4j.LoggerFactory;');
      memo1.Lines.Add('import org.springframework.stereotype.Controller;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestBody;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestMapping;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.RequestMethod;');
      memo1.Lines.Add('import org.springframework.web.bind.annotation.ResponseBody;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.model.response.Response;');
      memo1.Lines.Add('import com.sensus.common.util.SensusInterfaceUtil;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.request.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.'+Txt+'.model.response.Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response;');
      memo1.Lines.Add('import com.sensus.mlc.wui.BaseController;');
      memo1.Lines.Add('import com.sensus.mlc.wui.light.LightAPIController;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add('* @author Washington ');
      memo1.Lines.Add('* ');
      memo1.Lines.Add('*/ ');
      memo1.Lines.Add('@Controller');
      memo1.Lines.Add('@RequestMapping("/api/'+Txt+'") ');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIController extends BaseController  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/* ');
      memo1.Lines.Add('* URLs Mapping   ');
      memo1.Lines.Add('*/  ');
      memo1.Lines.Add('/** The Constant MAP_FETCH. */ ');
      memo1.Lines.Add('private static final String MAP_FETCH = "/fetch";');
      memo1.Lines.Add('');
      memo1.Lines.Add('private static final String MAP_FETCHALL = "/fetchall";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_DELETE. */ ');
      memo1.Lines.Add('private static final String MAP_DELETE = "/delete";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_INSERT. */  ');
      memo1.Lines.Add('private static final String MAP_INSERT = "/insert";');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant MAP_INSERT. */  ');
      memo1.Lines.Add('private static final String MAP_UPDATE = "/update";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('private I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF '+Txt+'BCF;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant LOG. */');
      memo1.Lines.Add('private static final Logger LOG = LoggerFactory.getLogger(LightAPIController.class);');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** The Constant CONTROLLER_EXCEPTION_MSG. */  ');
      memo1.Lines.Add('public static final String CONTROLLER_EXCEPTION_MSG = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIController";');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('public I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF() { ');
      memo1.Lines.Add('return '+Txt+'BCF;');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('public void set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF(I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF '+Txt+'BCF) {  ');
      memo1.Lines.Add('this.'+Txt+'BCF = '+Txt+'BCF;');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_INSERT, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody   ');
      memo1.Lines.Add('public Response insert(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('catch (Exception e)');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Update '+Txt+'.  ');
      memo1.Lines.Add('*    ');
      memo1.Lines.Add('* @param '+Txt+'Request the '+Txt+' request  ');
      memo1.Lines.Add('* @return the '+Txt+' response  ');
      memo1.Lines.Add('*/  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_UPDATE, method = RequestMethod.POST)  ');
      memo1.Lines.Add('@ResponseBody  ');
      memo1.Lines.Add('public Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try  ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Delete filial. ');
      memo1.Lines.Add('*      ');
      memo1.Lines.Add('* @param filialRequest the filial request ');
      memo1.Lines.Add('* @return the filial response    ');
      memo1.Lines.Add('*/      ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_DELETE, method = RequestMethod.POST)  ');
      memo1.Lines.Add('@ResponseBody  ');
      memo1.Lines.Add('public Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('}');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/** ');
      memo1.Lines.Add('* Fetch all filial.  ');
      memo1.Lines.Add('*  ');
      memo1.Lines.Add('* @param inquiryfilialRequest the inquiryfilial request  ');
      memo1.Lines.Add('* @return the inquiry filial response  ');
      memo1.Lines.Add('*/ ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_FETCHALL, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody ');
      memo1.Lines.Add('public Response fetch(@RequestBody Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, HttpServletRequest request) ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('');
      memo1.Lines.Add('Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('setUserContext(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('catch (Exception e) ');
      memo1.Lines.Add('{   ');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**  ');
      memo1.Lines.Add('* Fetch filial by id. ');
      memo1.Lines.Add('* ');
      memo1.Lines.Add('* @param filialRequest the filial request   ');
      memo1.Lines.Add('* @return the filial response   ');
      memo1.Lines.Add('*/    ');
      memo1.Lines.Add('');
      memo1.Lines.Add('@RequestMapping(value = MAP_FETCH, method = RequestMethod.POST) ');
      memo1.Lines.Add('@ResponseBody ');
      memo1.Lines.Add('public Response fetch(@RequestBody '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request, HttpServletRequest request)   ');
      memo1.Lines.Add('{ ');
      memo1.Lines.Add('');
      memo1.Lines.Add(''+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('try   ');
      memo1.Lines.Add('{  ');
      memo1.Lines.Add('setUserContext('+Txt+'Request, request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('response = get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF().fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+Txt+'Request);');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('catch (Exception e)');
      memo1.Lines.Add('{');
      memo1.Lines.Add('SensusInterfaceUtil.handleException(LOG, response, e, DEFAULT_EXCEPTION_MSG,  ');
      memo1.Lines.Add('			new String[] {CONTROLLER_EXCEPTION_MSG});');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('return response;');
      memo1.Lines.Add('');
      memo1.Lines.Add('} ');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('');
      memo1.Lines.Add('}  ');
      Result := memo1;
end;
function criarCodeClasseTest(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('package com.sensus.mlc.wui.'+Txt+'s.unittest;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import static org.hamcrest.Matchers.containsString;');
      memo1.Lines.Add('import static org.hamcrest.Matchers.equalTo;');
      memo1.Lines.Add('import static org.hamcrest.Matchers.hasSize;');
      memo1.Lines.Add('import static org.hamcrest.Matchers.nullValue;');
      memo1.Lines.Add('import static org.springframework.test.web.server.result.MockMvcResultMatchers.jsonPath;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import org.junit.Test;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.common.util.SensusAppContext;');
      memo1.Lines.Add('import com.sensus.mlc.wui.'+Txt+'s.GroupAPIController;');
      memo1.Lines.Add('import com.sensus.mlc.wui.util.AbstractTestBase;');
      memo1.Lines.Add('import com.sensus.mlc.wui.util.ModeEnum;');
      memo1.Lines.Add('import com.sensus.mlc.wui.util.TestMessageEnum;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIControllerTest.');
      memo1.Lines.Add(' */');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIControllerTest extends AbstractTestBase');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/** The fetch all. */');
      memo1.Lines.Add('		private final String FETCH_ALL = "/api/'+Txt+'/fetchall";');
      memo1.Lines.Add('     ');
      memo1.Lines.Add('		/** The fetch. */  ');
      memo1.Lines.Add('		private final String FETCH = "/api/'+Txt+'/fetch";');
      memo1.Lines.Add('     ');
      memo1.Lines.Add('		/** The insert. */   ');
      memo1.Lines.Add('		private final String INSERT = "/api/'+Txt+'/insert";');
      memo1.Lines.Add('     ');
      memo1.Lines.Add('		/** The update. */  ');
      memo1.Lines.Add('		private final String UPDATE = "/api/'+Txt+'/update";');
      memo1.Lines.Add('             ');
      memo1.Lines.Add('		/** The delete. */ ');
      memo1.Lines.Add('		private final String DELETE = "/api/'+Txt+'/delete";');
      memo1.Lines.Add('      ');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Gets the '+Txt+' mock.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @return the '+Txt+' mock');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		private '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFMockImpl get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock()');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				return ('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFMockImpl)SensusAppContext.getApplicationContext()');
      memo1.Lines.Add('					.getBean('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'APIController.class).get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF();');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Fetch all.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @throws Exception the exception');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Test');
      memo1.Lines.Add('		public void fetchAll() throws Exception');
      memo1.Lines.Add('		{      ');
      memo1.Lines.Add('				// set request object');
      memo1.Lines.Add('				setData("{\"startRow\":0,\"endRow\":0,\"pageSize\":25,\"sortExpressions\":[{\"field\":\"name\",\"direction\":\"Ascending\"}],\"action\":\"table\"}");');
      memo1.Lines.Add('                           ');
      memo1.Lines.Add('				// Success situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_SUCCESS);');
      memo1.Lines.Add('				performTest(FETCH_ALL).andExpect(jsonPath("$.'+Txt+'s", hasSize(25)));');
      memo1.Lines.Add('                                  ');
      memo1.Lines.Add('				// Failure situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_FAILURE);');
      memo1.Lines.Add('				performTest(FETCH_ALL).andExpect(');
      memo1.Lines.Add('					jsonPath("$.messageInfoList[0].code", containsString(TestMessageEnum.MESSAGE_ERROR.getValue())));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Empty situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EMPTY);');
      memo1.Lines.Add('				performTest(FETCH_ALL).andExpect(jsonPath("$.'+Txt+'s", nullValue()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Exception situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EXCEPTION);');
      memo1.Lines.Add('				performTest(FETCH_ALL).andExpect(jsonPath("$.messageInfoList[0].code",');
      memo1.Lines.Add(' 					containsString(TestMessageEnum.DEFAULT_EXCEPTION_MSG.getValue())));');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Fetch.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @throws Exception the exception');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Test');
      memo1.Lines.Add('		public void fetch() throws Exception');
      memo1.Lines.Add('		{    ');
      memo1.Lines.Add('				// set request object');
      memo1.Lines.Add('				setData("{\"action\":\"fetchById\",\"'+Txt+'Id\":\"39\"}"); ');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Success situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_SUCCESS);');
      memo1.Lines.Add('				performTest(FETCH).andExpect(jsonPath("$.'+Txt+'s", hasSize(1))).andExpect(');
      memo1.Lines.Add('		jsonPath("$.'+Txt+'s[0].id", equalTo(39)));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Failure situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_FAILURE);');
      memo1.Lines.Add('				performTest(FETCH).andExpect(');
      memo1.Lines.Add('        		jsonPath("$.messageInfoList[0].code", containsString(TestMessageEnum.MESSAGE_ERROR.getValue())));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Empty situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EMPTY);');
      memo1.Lines.Add('				performTest(FETCH).andExpect(jsonPath("$.'+Txt+'s", nullValue()));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Exception situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EXCEPTION);');
      memo1.Lines.Add('				performTest(FETCH).andExpect(jsonPath("$.messageInfoList[0].code",');
      memo1.Lines.Add('            containsString(TestMessageEnum.DEFAULT_EXCEPTION_MSG.getValue())));');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Insert.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @throws Exception the exception');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Test');
      memo1.Lines.Add('		public void insert() throws Exception');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// set request object');
      memo1.Lines.Add('				setData("{\"'+Txt+'Name\":\"'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' 1\",\"'+Txt+'Description\":\"a\"}");');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Success situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_SUCCESS);');
      memo1.Lines.Add('				performTest(INSERT).andExpect(jsonPath("$.'+Txt+'s", hasSize(1))).andExpect(');
      memo1.Lines.Add('           jsonPath("$.'+Txt+'s[0].name", equalTo("'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' 10")));');
      memo1.Lines.Add(' ');
      memo1.Lines.Add('				// Failure situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_FAILURE);');
      memo1.Lines.Add('				performTest(INSERT).andExpect(');
      memo1.Lines.Add('          jsonPath("$.messageInfoList[0].code", containsString(TestMessageEnum.MESSAGE_ERROR.getValue())));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Exception situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EXCEPTION);');
      memo1.Lines.Add('				performTest(INSERT).andExpect(jsonPath("$.messageInfoList[0].code",');
      memo1.Lines.Add('          containsString(TestMessageEnum.DEFAULT_EXCEPTION_MSG.getValue())));');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Update.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @throws Exception the exception');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Test');
      memo1.Lines.Add('		public void update() throws Exception');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// set request object');
      memo1.Lines.Add('				setData("{\"'+Txt+'Name\":\"'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' 1\",\"'+Txt+'NameOld\":\"000a1\",\"'+Txt+'Description\":\"teste\",\"'+Txt+'Id\":\"39\"}");');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Success situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_SUCCESS);');
      memo1.Lines.Add('				performTest(UPDATE).andExpect(jsonPath("$.'+Txt+'s", hasSize(1))).andExpect(');
      memo1.Lines.Add('           jsonPath("$.'+Txt+'s[0].id", equalTo(39)));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Failure situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_FAILURE);');
      memo1.Lines.Add('				performTest(UPDATE).andExpect(');
      memo1.Lines.Add('          jsonPath("$.messageInfoList[0].code", containsString(TestMessageEnum.MESSAGE_ERROR.getValue())));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Exception situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EXCEPTION);');
      memo1.Lines.Add('				performTest(UPDATE).andExpect(jsonPath("$.messageInfoList[0].code",');
      memo1.Lines.Add('        	containsString(TestMessageEnum.DEFAULT_EXCEPTION_MSG.getValue())));');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Delete.');
      memo1.Lines.Add('		 * ');
      memo1.Lines.Add('		 * @throws Exception the exception');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Test');
      memo1.Lines.Add('		public void delete() throws Exception');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// set request object');
      memo1.Lines.Add('				setData("{\"isAllRows\":\"true\",\"selectionPaginationIds\":[39]}");');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Success situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_SUCCESS);');
      memo1.Lines.Add('				performTest(DELETE).andExpect(jsonPath("$.'+Txt+'s", hasSize(1))).andExpect(');
      memo1.Lines.Add('          jsonPath("$.'+Txt+'s[0].id", equalTo(39)));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Failure situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_FAILURE);');
      memo1.Lines.Add('				performTest(DELETE).andExpect(');
      memo1.Lines.Add('            jsonPath("$.messageInfoList[0].code", containsString(TestMessageEnum.MESSAGE_ERROR.getValue())));');
      memo1.Lines.Add('');
      memo1.Lines.Add('				// Exception situation');
      memo1.Lines.Add('				get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Mock().setMode(ModeEnum.MODE_EXCEPTION);');
      memo1.Lines.Add('				performTest(DELETE).andExpect(jsonPath("$.messageInfoList[0].code",');
      memo1.Lines.Add('             containsString(TestMessageEnum.DEFAULT_EXCEPTION_MSG.getValue())));');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
end;
function criarCodeClasseTestMock(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
      memo1.Lines.Clear;
      memo1.Lines.Add('');
      memo1.Lines.Add('import java.util.ArrayList;');
      memo1.Lines.Add('import java.util.List;');
      memo1.Lines.Add('');
      memo1.Lines.Add('import com.sensus.mlc.wui.base.unittest.util.BaseMockImpl;');
      memo1.Lines.Add('import com.sensus.mlc.wui.util.ModeEnum;');
      memo1.Lines.Add('');
      memo1.Lines.Add('/**');
      memo1.Lines.Add(' * The Class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFMockImpl.');
      memo1.Lines.Add(' */');
      memo1.Lines.Add('public class '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCFMockImpl extends BaseMockImpl implements I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF');
      memo1.Lines.Add('{');
      memo1.Lines.Add('');
      memo1.Lines.Add('		private String '+Txt+'Name = "'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' ";');
      memo1.Lines.Add('');
      memo1.Lines.Add('		private Integer '+Txt+'Id = 1;');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Creates the analytics '+Txt+' list.');
      memo1.Lines.Add('		 *');
      memo1.Lines.Add('		 * @param listSize the list size');
      memo1.Lines.Add('		 * @param firstId the first id');
      memo1.Lines.Add('		 * @return the list');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		private List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> createAnalytics'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'List(Integer listSize)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('');
      memo1.Lines.Add('				List<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'> '+Txt+'s = new ArrayList<'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'>();');
      memo1.Lines.Add('');
      memo1.Lines.Add('				for (int i = 0; i < listSize; i++)');
      memo1.Lines.Add('				{');
      memo1.Lines.Add('						'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+' '+Txt+' = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'();');
      memo1.Lines.Add('						'+Txt+'.setName(this.'+Txt+'Name + i);');
      memo1.Lines.Add('						'+Txt+'.setId(i + this.'+Txt+'Id);');
      memo1.Lines.Add('						'+Txt+'.setDescription("Description of '+Txt+' " + i);');
      memo1.Lines.Add('						'+Txt+'.setSmartPointCount(30);');
      memo1.Lines.Add('						'+Txt+'s.add('+Txt+');');
      memo1.Lines.Add('				}');
      memo1.Lines.Add('');
      memo1.Lines.Add('				return '+Txt+'s;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('  ');
      memo1.Lines.Add('		/**');
      memo1.Lines.Add('		 * Gets the '+Txt+' response default.');
      memo1.Lines.Add('		 *');
      memo1.Lines.Add('		 * @param '+Txt+'Id the '+Txt+' id');
      memo1.Lines.Add('		 * @return the '+Txt+' response default');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		private '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ResponseDefault()');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('');
      memo1.Lines.Add('				if (getMode().equals(ModeEnum.MODE_SUCCESS))');
      memo1.Lines.Add('				{');
      memo1.Lines.Add('						response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(createAnalytics'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'List(1));');
      memo1.Lines.Add('						return response;');
      memo1.Lines.Add('				}');
      memo1.Lines.Add('');
      memo1.Lines.Add('				return ('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response)testOtherDefaultModes(response);');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#insertSmartpointTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insertSmartpointTo'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#updateLightProtectedFor'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response updateLightProtectedFor'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response insert'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				this.'+Txt+'Name = '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getName();');
      memo1.Lines.Add('				return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ResponseDefault();');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response update'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				this.'+Txt+'Id = '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getId();');
      memo1.Lines.Add('				return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ResponseDefault();');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response delete'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				this.'+Txt+'Id = '+Txt+'Request.getSelectionPaginationIds().get(0);');
      memo1.Lines.Add('				return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ResponseDefault();');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.mlc.base.model.request.InquiryPaginationRequest)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetchAll'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(InquiryPaginationRequest inquiryPaginationRequest)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response response = new Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response();');
      memo1.Lines.Add('');
      memo1.Lines.Add('				if (getMode().equals(ModeEnum.MODE_SUCCESS))');
      memo1.Lines.Add('				{');
      memo1.Lines.Add('						response.set'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(createAnalytics'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'List(inquiryPaginationRequest.getPageSize()));');
      memo1.Lines.Add('						return response;');
      memo1.Lines.Add('				}');
      memo1.Lines.Add('');
      memo1.Lines.Add('				return (Inquiry'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response)testOtherDefaultModes(response);');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ById('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				this.'+Txt+'Id = '+Txt+'Request.get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'().getId();');
      memo1.Lines.Add('				return get'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ResponseDefault();');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByIdList(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByIdList('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#deleteSmartPointFrom'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response deleteSmartPointFrom'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#updateLightIntensityFor'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response updateLightIntensityFor'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByLight(com.sensus.mlc.smartpoint.model.request.LightRequest)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sByLight(LightRequest lightRequest)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sBySmartPoint(com.sensus.mlc.smartpoint.model.request.LightRequest)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'sBySmartPoint(LightRequest lightRequest)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByName(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public '+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Response fetch'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'ByName('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('		/*');
      memo1.Lines.Add('		 * (non-Javadoc)');
      memo1.Lines.Add('		 * @see');
      memo1.Lines.Add('		 * com.sensus.mlc.'+Txt+'.bcf.I'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'BCF#fetchCountLightsFrom'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s(com.sensus.mlc.'+Txt+'.model.request.'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request)');
      memo1.Lines.Add('		 */');
      memo1.Lines.Add('		@Override');
      memo1.Lines.Add('		public InquiryLightResponse fetchCountLightsFrom'+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'s('+BrvFuncoesXE.PrimeiraMaiscula(Txt)+'Request '+Txt+'Request)');
      memo1.Lines.Add('		{');
      memo1.Lines.Add('				// TODO Auto-generated method stub');
      memo1.Lines.Add('				return null;');
      memo1.Lines.Add('		}');
      memo1.Lines.Add('');
      memo1.Lines.Add('}');
      memo1.Lines.Add('');
end;
function criarCodeClasseHTMLCreate(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseHTMLCreate'+Txt+';');
end;
function criarCodeClasseHTML(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseHTML'+Txt+';');
end;
function criarCodeClasseMainJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseMainJS'+Txt+';');
end;
function criarCodeClasseInitJS(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseInitJS'+Txt+';');
end;
function criarCodeClasseSelenium(Txt:String;CcDataset:TClientDataSet;memo1 :TMemo):TMemo;
begin
     memo1.Lines.Clear;
     memo1.Lines.Add('criarCodeClasseSelenium'+Txt+';');
end;

end.

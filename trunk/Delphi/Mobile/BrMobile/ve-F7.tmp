using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using LogosMobile;

namespace BrMobile
{
    public partial class SIS000 : Form
    {
        public SIS000()
        {
            InitializeComponent();            
            Controller.GetMacAddress();
            timerIni.Enabled = true;
        }

        private void btnSair_Click(object sender, EventArgs e)
        {
            if (Controller.MessageDlg("Deseja realmente sair?"))
            {
                this.Close();
            }
        }

        private void ProcessarAtividade(string nrmapa, string dsativid)
        {
            switch (dsativid)
            {
                case "CFEN":
                    Controller.ProcessaEntrada(nrmapa, lblUsuario.Text, false, "Conferencia de Entrada");
                    break;
                case "CFET":
                    Controller.ProcessaEntrada(nrmapa, lblUsuario.Text, false, "Entrada por Transf.");
                    break;
                case "CFSD":
                    Controller.ProcessaSaida(nrmapa, false, lblUsuario.Text, "Conferencia de Saida");
                    break;
                case "CFST":
                    Controller.ProcessaSaida(nrmapa, true, lblUsuario.Text, "Saida por Transf.");
                    break;
            }
        }

        private void BuscaAtividade()
        {
            ImgBuscaAtividade.Visible = true;
            ImgBuscaAtividade.Refresh();

            LblStatus.Text = "Verificando...";
            LblStatus.Refresh();

            string NrMapa = "";
            string DsAtivid = "";

            if (Controller.WsLogos.WsPing())
            {
                if (!Controller.WsLogos.WsProximaAtividade(ref NrMapa, ref DsAtivid))
                {
                    LblStatus.Text = "Busca Manual";
                    LblStatus.Refresh();
                    DsAtivid = string.Empty;
                }

                if (DsAtivid != string.Empty)
                {
                    ProcessarAtividade(NrMapa, DsAtivid);

                    LblStatus.Text = "";
                    LblStatus.Refresh();

                    if (Controller.WsLogos.WsPing())
                    {
                        if (Controller.MessageDlg("Deseja buscar uma próxima atividade agora?"))
                        {
                            timerAtividade.Enabled = true;
                        }
                        else
                        {
                            LblStatus.Text = "Busca Manual";
                            LblStatus.Refresh();
                        }
                    }
                    else
                    {
                        LblStatus.Text = "Busca Manual";
                        LblStatus.Refresh();
                    }
                }
                else
                {
                    LblStatus.Text = "Busca Manual";
                    LblStatus.Refresh();
                }
            }
            else
            {
                LblStatus.Text = "Busca Manual";
                LblStatus.Refresh();
            }
        }

        private void timerAtividade_Tick(object sender, EventArgs e)
        {
            timerAtividade.Enabled = false;
            BuscaAtividade();
        }

        private void ImgBuscaAtividade_Click(object sender, EventArgs e)
        {
            if (LblStatus.Text == "Busca Manual")
            {
                BuscaAtividade();
            }            
        }

        private void BtnVersao_Click(object sender, EventArgs e)
        {
            SIS003 FrmAbout = new SIS003(lblUsuario.Text);
            FrmAbout.ShowDialog();
            FrmAbout.Dispose();
        }

        private void ProcessaAtividadesNaoConvocadas()
        {
            string dslista = string.Empty;
            Controller.WsLogos.AtividadeNaoConvocada(ref dslista);

            const string dscabec = "SGTIPATI;NRATIV";
            char[] DsSepLin = { '#' };
            char[] DsSepVal = { ';' };
            string[] lines;
            string[] values;

            dslista = dslista.Replace("\r\n", "#");
            dslista = dslista.Replace("##", "#");

            lines = dslista.Split(DsSepLin);

            if (dscabec.ToUpper() != lines[0].ToUpper())
            {
                throw new Exception(String.Format("Lista de Atividades não conforme: {0}", lines[0]));
            }            

            for (int idx = 1; idx < lines.Length; idx++)
            {
                if (lines[idx].Trim() != string.Empty)
                {
                    values = lines[idx].Split(DsSepVal);
                    if (values[0] == "CFSD")
                    {
                        btnConfSaida.Visible = true;
                        imgConfSaida.Visible = true;
                    }
                    else
                    {
                        if (values[0] == "CFST")
                        {
                            btnConfSaidaTransf.Visible = true;
                            imgConfSaidaTransf.Visible = true;
                        }
                    }
                }
            }
        }

        private void timerIni_Tick(object sender, EventArgs e)
        {
            timerIni.Enabled = false;

            LogosMobile.SIS001 FrmSIS001 = new LogosMobile.SIS001();
            FrmSIS001.ShowDialog();

            if (FrmSIS001.DialogResult == DialogResult.OK)
            {
                lblUsuario.Text = FrmSIS001.NmUsuario;
                this.Show();
                LblStatus.Visible = true;
                ImgBuscaAtividade.Visible = true;
                this.Refresh();

                ProcessaAtividadesNaoConvocadas();

                timerAtividade.Enabled = true;
            }
            else
            {
                this.Close();
            }
        }

        private void imgConfNet_Click(object sender, EventArgs e)
        {
            string nrip = string.Empty;
            string lastuser = string.Empty;
            string snpreetiq = string.Empty;

            Controller.GetConfig(ref nrip, ref lastuser, ref snpreetiq);

            SIS004 FrmIP = new SIS004(nrip, lblUsuario.Text, snpreetiq, false, false, true);
            FrmIP.ShowDialog();

            if (FrmIP.DialogResult == DialogResult.OK)
            {
                Controller.SetConfig(FrmIP.Nrip, FrmIP.LastUser, FrmIP.SnPreEtiq);                
            }

            FrmIP.Dispose();
        }                      
    }
}
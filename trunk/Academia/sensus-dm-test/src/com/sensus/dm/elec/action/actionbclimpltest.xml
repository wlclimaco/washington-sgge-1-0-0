<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
	 	http://www.springframework.org/schema/oxm
		http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="classpath*:spring/spring-apibinding-jms.xml" />
<!--     <import resource="classpath*:spring/spring-bcf-cim-mapping.xml" /> -->
    <import resource="classpath*:spring/spring-bcf-mrsvc.xml" />
    <import resource="classpath*:spring/spring-bcf-mrsvc-camel.xml" />
    <import resource="classpath:spring/spring-bcf-hansvc.xml"/>
    <import resource="classpath:spring/spring-bcf-drsvc.xml" />
    <import resource="classpath*:spring/spring-connectdisconnect-context.xml" />
    <import resource="classpath*:spring/spring-bcf-mrnotif-camel.xml" />
    <!--     <import resource="classpath*:spring/spring-bcf-mrnotif.xml" /> -->
    <!--     <import resource="classpath*:spring/spring-bcf-mrnotif-camel.xml" /> -->

    <import resource="classpath*:spring/spring-bcf-mrsvc-lifecycle-camel.xml" />

	<bean id="SensusAppContext" class="com.sensus.common.util.SensusAppContext"/>

	<bean id="actionBCLTarget" class="com.sensus.dm.elec.action.bcl.impl.ActionBCLImpl">
		<property name="actionDAC" ref="actionDACMockTarget"/>
		<property name="actionProcessor" ref="actionProcessorTarget" />
		<property name="tempUploadFilePath" value="${uploadcsv.temp.file.path}"/>
		<property name="processBCL" ref="processBCLMockTarget" />
		<property name="electricMeterBCL" ref="electricMeterBCLMockTarget" />
		<property name="deviceBCL" ref="deviceBCLMockTarget" />
		<property name="tagBCL" ref="tagBCLMockTarget" />
		<property name="waterMeterBCL" ref="waterMeterBCLMockTarget" />
		<property name="gasMeterBCL" ref="gasMeterBCLMockTarget" />
	</bean>

	<bean id="actionProcessorValidatorTarget" class="com.sensus.dm.elec.action.bcl.impl.DMActionProcessorValidator" />

	<bean id="actionProcessorTarget" class="com.sensus.dm.elec.action.bcl.impl.DMActionProcessor">
	 	<property name="processBCL" ref="processBCLMockTarget" />
		<property name="processSummaryBCL" ref="processSummaryBCLMockTarget" />
		<property name="meterActionProcessor" ref="meterActionProcessorTarget" />
	 	<property name="hanActionProcessor" ref="hanActionProcessorTarget" />
	 	<property name="electricMeterBCL" ref="electricMeterBCLMockTarget" />
	 	<property name="validator" ref="actionProcessorValidatorTarget" />
	</bean>

	<!-- METER PROCESSORS/ACTIONS -->
	<bean id="meterActionProcessorTarget" class="com.sensus.dm.elec.action.bcl.impl.MeterActionProcessor" >
		<property name="meterReadingService" ref="bcf.meterReadingService.camel" />
		<property name="drService" ref="bcf.drService" />
		<property name="connectDisconnectService" ref="bcf.connectDisconnectService" />
		<property name="clientContextMarshaller" ref="clientContextMarshaller" />
		<property name="processBCL" ref="processBCLMockTarget" />
		<property name="electricMeterBCL" ref="electricMeterBCLMockTarget" />
		<property name="validator" ref="actionProcessorValidatorTarget" />
		<property name="meterLifecycleService" ref="bcf.meterLifecycleService.camel" />
		<property name="demandReadPingProfile" 	value="${system.default.demandReadPingProfile}" />
	</bean>

	<!-- HAN DEVICES PROCESSORS/ACTIONS -->
	<bean id="hanActionProcessorTarget" class="com.sensus.dm.elec.action.bcl.impl.HanActionProcessor" >
		<property name="hanService" ref="bcf.hanService" />
		<property name="electricMeterBCL" ref="electricMeterBCLMockTarget" />
		<property name="deviceBCL" ref="deviceBCLMockTarget" />
		<property name="validator" ref="actionProcessorValidatorTarget" />
		<property name="defaultFirmwareVersion" value="${system.default.firmwareVersion}" />
		<property name="defaultZigbeeProtocol" 	value="${system.default.zigbeeProtocol}" />
	</bean>

	<!-- Message Driven POJO (MDP) for MeterReads-->
<!-- 	<bean id="intervalRead.notif.messageReceiver" -->
<!-- 		class="com.sensus.dm.common.schedule.bcl.impl.MeterReadsReceiver" -->
<!-- 		 lazy-init="true" /> -->

	<!-- Message Driven POJO (MDP) for Reading Changed Meter Reads-->
<!-- 	<bean id="registerRead.notif.messageReceiver" -->
<!-- 		class="com.sensus.dm.common.schedule.bcl.impl.ReadingChangedReceiver" -->
<!-- 		 lazy-init="true" /> -->

	<!-- Message Driven POJO (MDP) for GlASS Read Meter Reads-->
<!-- 	<bean id="glassRead.notif.messageReceiver" -->
<!-- 		class="com.sensus.dm.common.schedule.bcl.impl.GlassReadReceiver" -->
<!-- 		 lazy-init="true" > -->
<!-- 		 <property name="useGatewayCacheForGlassRead"><value>false</value></property> -->
<!-- 	</bean> -->

	<!-- Message Driven POJO (MDP) for GlASS Read and Refresh Meter Reads-->
<!-- 	<bean id="glassReadAndRefreshRead.notif.jmsListenerContainerManager" -->
<!-- 		class="com.sensus.dm.common.schedule.bcl.impl.GlassReadAndRefreshReceiver" -->
<!-- 		 lazy-init="true" > -->
<!-- 		 <property name="useGatewayCacheForGlassRead"><value>false</value></property> -->
<!-- 	</bean> -->

	<!-- *********** DEMAND RESET ******************
		 This sets up the scaffolding to receive API notifications through
		 JMS, for a message-driven bean.
		 The demandReset.notif.messageReceiver should be defined by the
		 web service that uses this BCF module.
	-->
<!--     <bean id="demandReset.notif.jmsContainer" -->
<!-- 		class="org.springframework.jms.listener.DefaultMessageListenerContainer" -->
<!-- 		lazy-init="true" -->
<!-- 		p:concurrentConsumers="1" -->
<!-- 		p:maxConcurrentConsumers="5"  -->
<!-- 		p:connectionFactory-ref="api.binding.jmsNotificationConnectionFactory" -->
<!-- 		p:destinationName-ref="demandReset.notif.jms.input" -->
<!-- 		p:messageListener-ref="demandReset.notif.jmsAdapter" -->
<!-- 		p:autoStartup="false"/>	 -->

<!-- 	<util:constant id="demandReset.notif.jms.input"  -->
<!-- 		static-field="${bcf.mr.demandreset.publish:com.sensus.api.demandreset.EndpointRegistry.JMS_DEMANDRESET_PUBLISH}"/> 			 -->

<!-- 	<bean id="demandReset.notif.jmsAdapter" class="com.sensus.api.JmsAdapter"  -->
<!-- 		lazy-init="true" -->
<!--    		p:marshaller-ref="demandReset.notif.marshaller" -->
<!--     	p:messageReceiver-ref="demandReset.notif.messageReceiver"/> -->

<!--     <bean id="demandReset.notif.marshaller" class="com.sensus.api.DataMarshaller"> -->
<!--     	<property name="dataMarshaller"> -->
<!--      		<oxm:jaxb2-marshaller contextPath="com.sensus.backfill.messages:com.sensus.api.readgapanalyzer.messages:com.sensus.common.messagetypes.smartpoint:com.sensus.common.messagetypes.error:com.sensus.common.messagetypes.smartpointrequest"/> -->
<!-- 		</property> -->
<!-- 	</bean>				 -->

<!-- 	<bean id="demandReset.notif.messageReceiver" class="com.sensus.dm.elec.action.listener.DemandResetListener" -->
<!-- 	  init-method="startListener" > -->
<!-- 	  	<property name="processBCL" ref="processBCLTarget" /> -->
<!-- 	</bean> -->

	<!-- *********** Cancel Send ******************  -->
	<util:constant id="cancelText.notif.jms.input"
		static-field="com.sensus.api.canceltext.ZigbeeCancelTextRegistry.JMS_NOTIFY_QUEUE"/>

	<bean id="cancelText.notif.jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer"
		lazy-init="true"
	    p:connectionFactory-ref="api.binding.jmsNotificationConnectionFactory"
	    p:messageListener-ref="cancelText.notif.jmsAdapter"
	    p:autoStartup="false"
	    p:pubSubDomain="true"
	    p:destinationName-ref="cancelText.notif.jms.input"/>

	<bean id="cancelText.notif.jmsAdapter"
		class="com.sensus.api.JmsAdapter"
		lazy-init="true"
   		p:marshaller-ref="cancelText.notif.marshaller"
    	p:messageReceiver-ref="cancelText.notif.messageReceiver"/>

	<bean id="cancelText.notif.marshaller" class="com.sensus.api.DataMarshaller">
    	<property name="dataMarshaller">
     		<oxm:jaxb2-marshaller>
    			<oxm:class-to-be-bound name="com.sensus.api.zigbeesimplemessage.canceltext.messages.CancelTextResponse"/>
			</oxm:jaxb2-marshaller>
     	</property>
	</bean>

	<bean id="cancelText.notif.messageReceiver"
		class="com.sensus.dm.elec.action.listener.CancelTextMessageListener">
<!-- 		init-method="startListener"> -->
		<property name="processBCL" ref="processBCLMockTarget" />
	</bean>

	<bean id="clientContextMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value = "com.sensus.gateway.cd.clientcontext"></property>
		<property name="marshallerProperties">
			<map>
				<entry>
					<key>
						<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT" />
					</key>
    				<value type="java.lang.Boolean">true</value>
				</entry>
			</map>
		</property>
	</bean>

</beans>
